 Ubiquitous ComputingFundamentals
93606_Book.indb   18/26/09   1:38:19 PM 93606_Book.indb   28/26/09   1:38:19 PM Ubiquitous ComputingFundamentals
Edited byJohn KrummMicrosoft CorporationRedmond, Washington, U.S.A.
93606_Book.indb   38/26/09   1:38:19 PM Chapman & Hall/CRCTaylor & Francis Group6000 Broken Sound Parkway NW, Suite 300Boca Raton, FL 33487-2742¬© 2010 by Taylor and Francis Group, LLCChapman & Hall/CRC is an imprint of Taylor & Francis Group, an Informa businessNo claim to original U.S. Government worksPrinted in the United States of America on acid-free paper10 9 8 7 6 5 4 3 2 1International Standard Book Number: 978-1-4200-9360-5 (Hardback)This book contains information obtained from authentic and highly regarded sources. Reasonable efforts have been made to publish reliable data and information, but the author and publisher cannot assume responsibility for the validity of all materials or the consequences of their use. The authors and publishers have attempted to trace the copyright holders of all material reproduced in this publication and apologize to copyright holders if permission to publish in this form has not been obtained. If any copyright material has not been acknowledged please write and let us know so we may rectify in any future reprint.Except as permitted under U.S. Copyright Law, no part of this book may be reprinted, reproduced, transmit-ted, or utilized in any form by any electronic, mechanical, or other means, now known or hereafter invented, including photocopying, microfilming, and recording, or in any information storage or retrieval system, without written permission from the publishers.For permission to photocopy or use material electronically from this work, please access www.copyright.com (http://www.copyright.com/) or contact the Copyright Clearance Center, Inc. (CCC), 222 Rosewood Drive, Danvers, MA 01923, 978-750-8400. CCC is a not-for-profit organization that provides licenses and registration for a variety of users. For organizations that have been granted a photocopy license by the CCC, a separate system of payment has been arranged.Trademark Notice: Product or corporate names may be trademarks or registered trademarks, and are used only for identification and explanation without intent to infringe.Library of Congress Cataloging-in-Publication DataUbiquitous Computing Fundamentals / edited by John Krumm.p. cm.Includes bibliographical references and index.ISBN 978-1-4200-9360-5 (hardcover : alk. paper)1.  Ubiquitous computing.  I. Krumm, John.QA76.5915.U258 2010004--dc22 2009026632Visit the Taylor & Francis Web site athttp://www.taylorandfrancis.comand the CRC Press Web site athttp://www.crcpress.com 
93606_Book.indb   48/26/09   1:38:20 PM WTable of ContentsForeword, viiIntroduction, ixContributors, xiii CHAPTER1 /UIstop An Introduction to Ubiquitous Computing 1 ROY WANT CHAPTER2 /UIstop Ubiquitous Computing Systems 37JAKOB BARDRAM AND ADRIAN FRIDAY CHAPTER3 /UIstop Privacy in Ubiquitous Computing 95 MARC LANGHEINRICH CHAPTER4 /UIstop Ubiquitous Computing Field Studies 161 A. J. BERNHEIM BRUSH CHAPTER5 /UIstop Ethnography in Ubiquitous Computing 203 ALEX S. TAYLOR CHAPTER6 /UIstop  From GUI to UUI: Interfaces for Ubiquitous Computing 237 AARON QUIGLEY CHAPTER7 /UIstop Location in Ubiquitous Computing 285 ALEXANDER VARSHAVSKY AND SHWETAK PATEL
93606_Book.indb   58/26/09   1:38:20 PM vi  /UIstop  Table of Contents CHAPTER8 /UIstop Context-Aware Computing 321 ANIND K. DEY CHAPTER9 /UIstop Processing Sequential Sensor Data 353 JOHN KRUMMINDEX, 381
93606_Book.indb   68/26/09   1:38:20 PM WJJForewordIt has been nearly two decades since the term VCJRVJUPVT DPNQVUJOH burst into our research vernacular.  One of the strengths, and one of the challenges, of ‚Äúubicomp‚Äù is that it is hard to pin down exactly what the intellectual core is.  From the very beginning, ubicomp researchers have investigated both bleeding edge technology challenges as well as human-centered opportunities. /T_here are other intellectual mergers of interest as well, including the bridge between the physical and the digital worlds and the (re-) merging of the academic communities of hardware and so/f_tware. But this very diversity of intellectual themes presents two challenges to our community, both of which motivate the need for a book like this one.  First of all, for established researchers, we have to educate ourselves on the language and methods of disciplines diÔ¨Äerent from the ones we have practiced for many years. Why?  Because if we are to advance as an intellectual community, then we all need to embrace the inherent diver-sity in our thoughts and skills.  While it is not strictly necessary that we become expert in all of the relevant subdisciplines of ubicomp represented in this book, it JT necessary that we appreciate all the perspectives and that we strive to make our own work more relevant and accessible to those many perspectives.Second, and more importantly, we have to provide a foundation for future generations. I deeply believe that any interesting problem to explore in our everyday lives requires expertise from many disciplines and per-spectives.  Consequently, we have to train new researchers so that they will be able to stand on the results of the past and direct us as a community to go beyond where we are today. In short, our students must be empowered to be better than we are, or we face extinction as a relevant intellectual community.Under the skillful guidance of John Krumm, the authors of these chap-ters have assembled a collection of well-written, tutorial style chapters on 
93606_Book.indb   78/26/09   1:38:20 PM viii  /UIstop  Forewordtopics that have become core to research advances in ubiquitous comput-ing over the past two decades. /T_he result is a must-read text that provides an historical lens to see how ubicomp has matured into a multidisciplinary endeavor. It will be an essential reference to researchers and those who want to learn more about this evolving /f_ield.1SPGFTTPS(SFHPSZ%"CPXE1I%$PMMFHFPG$PNQVUJOH(FPSHJB*OTUJUVUFPG5FDIOPMPHZ"UMBOUB(FPSHJB64"
93606_Book.indb   88/26/09   1:38:20 PM JYIntroduction/T_his book is an overview of the fascinating /f_ield of ubiquitous comput-ing. Since this /f_ield is rapidly progressing, the book is aimed at people who want to explore it as researchers or track its evolution. Intended for advanced undergraduates, graduate students, and professionals interested in ubiquitous computing research, the book covers the major fundamen-tals and research in the key areas that shape the /f_ield. Each chapter is a tutorial that provides readers with an introduction to an important subset of ubiquitous computing and also contains many valuable references to relevant research papers./T_he /f_ield of ubiquitous computing is simultaneously young and broad. Research papers in the /f_ield commonly reference Mark Weiser, who famously coined the term VCJRVJUPVTDPNQVUJOH in his 4DJFOUJ“áD"NFSJDBO article in 1991. /T_his is considered the start of the research area, and it has grown to encompass a broad array of technologies since then. Although the /f_ield is broad, there are well-established conferences and researchers devoted to it.We chose 11 of the most prominent ubiquitous computing research devotees to contribute chapters to this book in their area of expertise. Given the /f_ield‚Äôs breadth, it would be diÔ¨Écult to /f_ind one person who can expertly cover it all. Some of the chapter authors teach ubiquitous com-puting at universities. All of them are intimately involved in research in their specialty. Working in the area means they have the experience to not only describe the fundamental research issues, but to also explain practi-cal ways to accomplish research and publish papers in the /f_ield.Ubiquitous computing research can be categorized into three distinct areas where the research is focused: systems, experience, and sensors. /T_he 
93606_Book.indb   98/26/09   1:38:20 PM x  /UIstop  Introductionchapters of this book are similarly organized and categorized. /T_he three categories and their supporting chapters are4ZTUFNT‚Äî/T_hese chapters focus on how to build the so/f_tware support for deploying ubiquitous computing applications.‚ÄúUbiquitous Computing Systems‚Äù(Chapter 2) discusses the impor-tant issues to consider when building the infrastructure to sup-port ubiquitous computing applications.‚ÄúPrivacy in Ubiquitous Computing‚Äù(Chapter 3) explains how to maintain privacy in systems that inherently need to connect with personal devices and information.&YQFSJFODF‚Äî/T_hese chapters highlight the critical points where ubiqui-tous computing technologies touch people.‚ÄúUbiquitous Computing Field Studies‚Äù (Chapter 4) shows how to evaluate ubiquitous computing applications in the /f_ield.‚ÄúEthnography in Ubiquitous Computing‚Äù (Chapter 5) details how to observe people and consider how they might use ubiquitous computing technology.‚ÄúFrom GUI to UUI: Interfaces for Ubiquitous Computing‚Äù (Chapter 6) focuses on moving from the graphical to the ubiquitous computing user interface.4FOTPST‚Äî/T_hese chapters show how systems sense location and analyze and determine context.‚ÄúLocation in Ubiquitous Computing‚Äù (Chapter 7) illustrates how to measure a person‚Äôs location, one of the most important inputs for ubiquitous computing applications.‚ÄúContext-Aware Computing‚Äù (Chapter 8) explains the use of context to allow ubiquitous computing applications to deliver the right services at the right time.‚ÄúProcessing Sequential Sensor Data‚Äù (Chapter 9) details how to eÔ¨Äec-tively process sensor data for location and context.
93606_Book.indb   108/26/09   1:38:20 PM Introduction  /UIstop  xiIn addition to these speci/f_ic research areas, the book begins with a chapter called ‚ÄúAn Introduction to Ubiquitous Computing,‚Äù which dis-cusses the history of the /f_ield in terms of its major research projects.Although the chapters cover interrelated topics, they can be covered in any order by a teacher or reader.We hope you will /f_ind this book to be a useful overview of and a practi-cal tutorial on the young and evolving /f_ield of ubiquitous computing.+PIO,SVNN
93606_Book.indb   118/26/09   1:38:20 PM 93606_Book.indb   128/26/09   1:38:20 PM YJJJContributors+BLPC&#BSESBN1I%IT University of CopenhagenCopenhagen, Denmark"+#FSOIFJN#SVTI1I%Microso/f_t ResearchRedmond, Washington, U.S.A."OJOE,%FZ1I%HCI InstituteCarnegie Mellon UniversityPittsburgh, Pennsylvania, U.S.A."ESJBO'SJEBZ1I%Computing DepartmentLancaster UniversityLancaster, United Kingdom+PIO,SVNN1I%Microso/f_t ResearchRedmond, Washington, U.S.A..BSD-BOHIFJOSJDI1I%Faculty of InformaticsUniversity of Lugano (USI)Lugano, Switzerland4IXFUBL1BUFM1I%Computer Science and EngineeringUniversity of WashingtonSeattle, Washington, U.S.A."BSPO2VJHMFZ1I%Human Interface Technology Laboratory AustraliaUniversity of TasmaniaTasmania, Australia"MFY45BZMPS1I%Microso/f_t ResearchCambridge, United Kingdom"MFYBOEFS7BSTIBWTLZ1I%AT&T LabsFlorham Park, New Jersey, U.S.A.3PZ8BOU1I%Intel CorporationSanta Clara, California, U.S.A.
93606_Book.indb   138/26/09   1:38:20 PM 93606_Book.indb   148/26/09   1:38:20 PM 1CHAPTER An Introduction to Ubiquitous ComputingRoy WantCONTENTS1.1 Founding Contributions to Ubiquitous Computing 31.1.1 Xerox PARC 31.1.2 Tabs, Pads, and Liveboards 61.1.3 Context Awareness 101.1.4 IBM Research: Pervasive Computing versus Ubiquitous Computing 111.1.5 University of Tokyo: T-Engine and the ITRON Operating System 121.1.6 Hewlett Packard: Cooltown 131.2 Ubiquitous Computing in U.S. Universities 151.2.1 UC Berkeley: InfoPad 151.2.2 MIT Media Laboratory: Wearable Computing 161.2.3 Georgia Tech: Living Laboratories 181.3 Ubiquitous Computing in European Laboratories and Universities 201.3.1 Olivetti Research: Active Badges 201.3.2 Karlsruhe: Cups and Smart-Its 231.3.3 Lancaster University: Guide 251.4 Modern Directions in Ubiquitous Computing 261.4.1 Microso/f_t Research 261.4.2 Intel Research 27
93606_Book.indb   18/26/09   1:38:20 PM 2  /UIstop  Roy WantUbiquitous computing, or VCJDPNQ, is the term given to the third era of modern computing. /T_he /f_irst era was de/f_ined by the mainframe computer, a single large time-shared computer owned by an organization and used by many people at the same time. Second, came the era of the PC, a per-sonal computer primarily owned and used by one person, and dedicated to them. /T_he third era, ubiquitous computing, representative of the pres-ent time, is characterized by the explosion of small networked portable computer products in the form of TNBSUQIPOFT, personal digital assis-tants (PDAs), and embedded computers built into many of the devices we own‚Äîresulting in a world in which each person owns and uses many computers. Each era has resulted in progressively larger numbers of com-puters becoming integrated into everyday life (Figure 1.1).Although the general trends in computing are clear, the predictions, research, and philosophy behind the technology that make ubiquitous computing a reality have taken many forms, all of which have been shaped by the organizations that cultivated them. /T_he early informative research in this area began in the late 1980s and was pioneered by Xerox Palo Alto Research Center (PARC), IBM Research, Tokyo University, University of California (UC) Berkeley, Olivetti Research, HP Labs, Georgia Institute of Technology (Georgia Tech), and Massachusetts Institute of Technology (MIT) Media Laboratory. Many commercial entities also began forays into ubiquitous computing during the 1990s, exploring the business potential for ubiquitous services, and novel mobile devices such as pen-based com-puters. At this time, we also saw the introduction of the Apple Newton, 
TimeMainframe (one computer, many people) PC (one person, one computer)  Ubiquitous computing (one person,many computers)Devices FIGURE 1.1 Graph conceptually portraying three eras of modern computing.1.5 /T_he Research Community Embraces Ubiquitous Computing 281.6 /T_he Future of Ubiquitous Computing 31References 33
93606_Book.indb   28/26/09   1:38:22 PM An Introduction to Ubiquitous Computing  /UIstop  3and the term PDA was coined. Other product examples included the EO pad, using GO Pen so/f_tware, and later the Palm Pilot (with GraÔ¨Éti) and the Sharp Zaurus; Fujitsu also developed a series of tablet and palm-based devices particularly targeted at vertical markets. Later still, MP3 players from Archos and Apple also played into this market.Today, demonstrating the most convincing evidence of the value of ubiquitous computing, the cell phone, or more precisely the ‚Äúsmart phone,‚Äù takes center stage crossing a threshold of processor performance, memory/disk capacity, and connectivity both cellular and local, making it the most widely adopted and ubiquitous computer there has ever been. In the remaining sections, we follow the path of research that has de/f_ined ubiq-uitous computing since its beginning, and discuss the various approaches and some of the philosophies that have grown up around the work.1.1  FOUNDING CONTRIBUTIONS TO UBIQUITOUS COMPUTING1.1.1  Xerox PARC/T_he original term VCJRVJUPVTDPNQVUJOH was coined by Mark Weiser in 1988 at Xerox PARC, while serving as the director of the Computer Science Laboratory (CSL), one of /f_ive laboratories at the renowned research cen-ter (Figure 1.2). He envisioned a future in which computing technologies 
FIGURE 1.2 Xerox PARC‚ÄîComputer Science Laboratory 1991: Mark Weiser using a Liveboard with a ParcPad visible in the foreground. (Photo courtesy of PARC, Inc., http://www.parc.com)
93606_Book.indb   38/26/09   1:38:22 PM 4  /UIstop  Roy Wantbecame embedded in everyday artifacts, were used to support daily activi-ties, and were equally applicable to our work, managing our homes, and for play. A more complete description of this vision is described on a Web site maintained by PARC summarizing Weiser‚Äôs work and ideas and can be found at www.ubicomp.com/weiser. A concise summary of ubiqui-tous computing, or ubicomp, as it was originally referred to by researchers at PARC, can also be found in his 1991 4DJFOUJ“áD"NFSJDBO article (Weiser, 1991), which contains his famous quote:/T_he most profound technologies are those that disappear. /T_hey weave themselves into the fabric of everyday life until they are indistinguishable from it./emdash.capMARK WEISER/T_he essence of Weiser‚Äôs vision is that mobile and embedded processors can communicate with each other and the surrounding infrastructure, seam-lessly coordinating their operation to provide support for a wide variety of everyday work practices. A consequence of this approach is that each device needs to limit the range of its communication to enable valuable wireless bandwidth reuse. As a result, he introduced the notion of bits-per-second per-cubic-meter to the ubicomp vision (Weiser, 1993a), and inspired many researchers to explore techniques for spatial reuse of the radio spectrum. In the early 1990s, there were no short-range wireless standards that could pro-vide this capability, but today we have Bluetooth, Near Field Communication (NFC), IrDA, Zigbee, and WiFi (soon WiFi PAN), which have enabled wide deployment of devices that take advantage of local ad hoc communication, and can be used to build the ubicomp vision.Going beyond technology per se, Weiser saw ubicomp as an opportu-nity to improve on the style of computing that has been imposed on users since the early days of the mainframe also carrying over to PCs‚Äînamely, sitting in a chair, staring at a screen, typing on a keyboard, and making selections with a mouse. /T_hrough this style of interaction, traditional computers consume much of our attention and divorce us from what is happening all around us, resulting in a somewhat solitary all-consuming experience. Weiser believed that in a ubicomp world, computation could be integrated with common objects that you might already be using for everyday work practices, rather than forcing computation to be a separate activity. If the integration is done well, you may not even notice that any computers were involved in your work. Weiser sometimes also referred to 
93606_Book.indb   48/26/09   1:38:22 PM An Introduction to Ubiquitous Computing  /UIstop  5this as JOWJTJCMFDPNQVUJOH and wrote a number of articles about his phi-losophy (Weiser, 1993b).To illustrate the concept of invisible technology more eÔ¨Äectively, consider an analogy based on the familiar printed page. /T_he technology behind print-ing is the deposition of ink on thin sheets of paper. For optimal results the design of the ink and paper must be well thought out. For example, the ink must stain the surface of the paper to provide a high contrast black against the white background, it must be durable in use, and not wick into the paper even if wet. However, when we read a printed page, we rarely notice the underlying ink and paper and ink technologies; we read the pages and com-prehend the ideas; but it is not necessary to focus on the technology, the characteristics of the ink, or the manufacturing process of the paper to be able to use it. You might say that printing technology ‚Äúgets out of the way‚Äù of the user, allowing the higher-level goal of reading a story, or acquiring knowledge; on the other hand, traditional PCs rarely do this. Instead, they usually require us to continuously tinker with the system, maintaining it and con/f_iguring it to complete a task. In summary, when designing and using ubicomp technologies, we may have the opportunity to more closely parallel the higher-level experience we have when reading the printed word.Another term Weiser used to describe ubiquitous computing was ‚Äú/T_he coming age of DBMNUFDIOPMPHZ‚Äù (Weiser and Seely-Brown, 1997). Although there is no simple formula to convert a PC application into a calm embedded computing experience, ubiquitous computing takes the opposite philosophy to the PC, which tries to virtualize our world (e.g., the familiar PC desktop and icons representing documents, printers, and trash can). Instead, ubicomp pushes the computerized versions of these technologies back into the physical world (Weiser, 1994). For example, rather than reading documents on a PC screen in a graphic made to look like a printed page, the objective would be to create a dedicated document reader with an embedded processor that you can hold and use just like a book. /T_his is an old idea from PARC originally conceived by Alan Kay with his Dynabook project, but was later updated by Weiser‚Äôs vision, mak-ing it highly connected and coordinating wirelessly with the surrounding systems. From a user‚Äôs perspective, the experience of using such a device is simpli/f_ied relative to a PC because it has a dedicated function (a design point sometimes referred to as an JOGPSNBUJPOBQQMJBODF); it does not need the complex arrangement of nested menus and control functions required by a generalized computing platform. Although this concept has been tested several times in the marketplace, for example, Rocketbook and 
93606_Book.indb   58/26/09   1:38:22 PM 6  /UIstop  Roy WantSo/f_tbook, which were not commercially successful, the idea is still being revisited in the marketplace today with Sony‚Äôs e-reader and Amazon‚Äôs Kindle. Similar to the evolution of the PDA, each generation learns from the failures of the previous generation, and at the same time technology improves, allowing an e-book to more closely match the aÔ¨Äordances of the real book it is trying to replace.1.1.2  Tabs, Pads, and LiveboardsUnder Weiser‚Äôs leadership, CSL set out to design and build a ubiquitous computing environment within the con/f_ines of the research center. PARC has long had a philosophy of ‚ÄúBuild what you use, and use what you build‚Äù and the ubicomp research theme continued that tradition.However, given the resource constraints of research, it was necessary to limit the scope of the ubicomp exploration to a manageable set of projects. /T_hese were selected by asking the question, ‚ÄúWhat is the minimum set of usable devices that can be built in a laboratory but still provide a sandbox rich enough to explore ubicomp and its de/f_ining characteristics?‚Äù Toward this goal, a guiding philosophy was inspired by the traditional units of length. /T_he units JODI, GPPU, and ZBSE were born out of everyday needs and had a diÔ¨Äerent origin than the more scienti/f_ically rationalized NFUSJD sys-tem with the millimeter, centimeter, and meter.Consider how the traditional units came about: they most likely rep-resent signi/f_icantly diÔ¨Äerent uses from a human perspective. Yard-scale measurements are typically used to measure objects around us that are large and immovable. Foot-sized objects can be held in your hands and carried, but are large enough that they are not likely to be carried with us at all times. However, inch-scale objects can /f_it in a pocket and be forgotten about while carrying out other unrelated daily activities. In other words, these three measurements represent three very diÔ¨Äerent scales of human interaction, and de/f_ine scale transitions for how we interact with the world around us. If ubiquitous computing systems were built to mimic everyday capabilities that occur at these three scales, any observation of such a sys-tem would probably have generic characteristics that would hold true for a much larger set of devices, each falling into one of these categories.PARC thus embarked on the design of three devices: ParcTab, or Tab, an inch-scale computer that represented a pocket book or wallet (Want et al., 1995); the ParcPad, or Pad, a foot-scale device, serving the role of a pen-based notebook or e-book reader; and Liveboard, a yard-scale device that provides the functionality of a whiteboard.
93606_Book.indb   68/26/09   1:38:22 PM An Introduction to Ubiquitous Computing  /UIstop  7
Tabs communicated wirelessly with a ceiling-mounted basestation using 10 kbps diÔ¨Äuse infrared signaling (Figure 1.3). Each room was typi-cally /f_itted with one basestation providing an infrared wired NJDSPDFMMVMBS communication network. Each basestation also communicated through a wired serial connection to a nearby workstation attached in turn to the building‚Äôs Ethernet, thus providing a connection to distributed ser-vices available on the network. ParcTabs were eÔ¨Äectively dumb terminals 
(a)
(b)FIGURE 1.3 (a) Xerox ParcTab a palm (inch-scale) computer communicating using diÔ¨Äuse infrared (IR) signalling; (b) an infrared transceiver basestation installed in the ceiling of each room comprising the ubicomp environment. Note the ring of IR emitters at the edge of the circular board, and four IR detectors at the center pointing in four cardinal compass directions. (Photos courtesy of PARC, Inc., http://www.parc.com)
93606_Book.indb   78/26/09   1:38:25 PM 8  /UIstop  Roy Wantgenerating pen/key events in response to user actions, and these were sent to remote applications running on servers attached to the network, result-ing in application state changes that sent back screen updates to the Tab displays.ParcPads employed a similar design approach using a low-bandwidth X-protocol across a radio link, communicating with a basestation through a proprietary short-range near-/f_ield radio (Katarjiev et al., 1993) (Figure 1.4). /T_he radio basestation was also mounted in the ceiling of each oÔ¨Éce or labo-ratory, and had a 3‚Äì4 m range, similar to the infrared system but with 25√ó more bandwidth at 250 kbps. /T_he reason infrared was used on the Tabs 
(a)
(b)FIGURE 1.4 (a) /T_he ParcPad, a notebook-sized (foot scale) tablet computer; (b) the near-/f_ield communication basestation mounted on the ceiling of an oÔ¨Éce at PARC. (Photos courtesy of PARC, Inc., http://www.parc.com)
93606_Book.indb   88/26/09   1:38:25 PM An Introduction to Ubiquitous Computing  /UIstop  9versus the Pads was that it could be operated at much lower power, and was more suited to the small battery used by the inch-scale ParcTab device.Liveboards were designed around standard computer workstations, but with much larger pen-based displays, and pen-based input. At PARC, several of these were deployed at /f_ixed locations around the building and linked by a wired network. /T_he display was implemented using a back-projected LCD panel and a 45p mirror to realize the image on a 67-inch frosted display panel. For writing and selection Liveboard employed an infrared pen that was tracked across its screen using a four-quadrant infrared sensor mounted in the optical path behind the screen. /T_he out-put of the optical sensor was fed through a calibration table resulting in a representative screen coordinate. /T_he primary pen-based interaction so/f_t-ware for Liveboard was called Tivoli, also developed at PARC, and allowed many unique pen-centric operations for the drawing and manipulation of graphical freeform objects (Elrod et al., 1992).Although the objective for designing Tabs, Pads, and Liveboards was to replace equivalent objects in the workplace by oÔ¨Äering similar physi-cal aÔ¨Äordances, an equally important goal was to enhance their capabili-ties relative to the original technology, and thus make a compelling value proposition for the user. For example, a conventional whiteboard allows a teacher to write notes about a lesson which can be captured while interact-ing with the class. However, Liveboard provides this as a baseline capabil-ity, but adds the option of indexing the pen-based markup with contextual events to make future search and retrieval easier (Figure 1.5). /T_he annota-tions and graphics drawn on the board could also be played back using an interactive timeline to support a discussion that revisited earlier topics.At the foot scale, a book is just a single book with no interactive capa-bility, but ParcPad could be potential thousands of books delivered across the network (or recall them from its local disk). It could also support elec-tronic markup through its pen interface, and thus allow for hyperlinked text, word de/f_inition look-up, and cross-referencing with other material (all common today through Web interfaces, but not in the early 1990s).Last, the ParcTab (replacing the pocket planner), served as a simple Personal Information Manager, but using its infrared network connection ParcTab also supported one of the /f_irst wireless pocket email readers. It could also edit documents stored in the network; serves as a remote con-troller for a room‚Äôs heating and air-conditioning system; and play games. Because the ParcTab was easily carried, it could also serve as a location beacon, and the system could keep track of the Tabs as they moved around. 
93606_Book.indb   98/26/09   1:38:25 PM 10  /UIstop  Roy Want
/T_his led to the notion of context aware applications (Schilit et al., 1994), which has become a central research theme in many other ubiquitous computing programs today.1.1.3  Context AwarenessContext awareness (see Chapter 8) allows applications to comprehend the environment in which they are being used, and adapt their operation to provide the best possible user experience. A user or device context is diÔ¨Écult to model because it has many dimensions, such as location, the identity of devices close by, who else is present, the time, and environmental fac-tors such as sound, motion, temperature, orientation, and other physical variables, many of which can be measured through on-platform TFOTPST. Context awareness can also span multiple levels of system architecture. Operating locally at the device level it can take advantage of on-board sensors. For example, inverting a ParcTab detected by an on-board tilt sensor would invert its screen to maintain the orientation of the display. At a higher-system level, applications could use context to modify their behavior. For example, the ParcTab used an application called a 1SPYJNJUZ#SPXTFS, which provided a user with the option of viewing /f_iles that had 
FIGURE 1.5 A commercial version of the Liveboard, sold by Liveworks in the mid-1990s, which evolved out of the original wooden laboratory prototype developed at PARC (see Figure 1.2). (Photo courtesy of PARC, Inc., http://www.parc.com)
93606_Book.indb   108/26/09   1:38:26 PM An Introduction to Ubiquitous Computing  /UIstop  11been accessed at its current location on a previous occasion. /T_he objective was to take advantage of the cache principle: /f_iles that had been used at a location in the past were likely to be useful again./T_his summary represents the focus of ubicomp at PARC between 1988 and 1996 when these projects were completed. However it has taken ~15 years for the underlying technologies to mature, communication stan-dards to be rati/f_ied, and for many of the models to gain traction in the marketplace. /T_his is the nature of ubiquitous computing. It is very sensitive to the aÔ¨Äordances of the devices that technologists are trying to replace and, as technologies advance, whether it be processor performance per watt, storage capacity, network bandwidth, display resolution, device size, and weight. Each year more possibilities for the mainstream application of ubiquitous computing open up.1.1.4  IBM Research: Pervasive Computing versus Ubiquitous ComputingIn the mid-1990s, IBM began a research direction it called QFSWBTJWFDPNQVUJOH (IBM Mobile and Pervasive Computing), which had many simi-larities to the goals of ubiquitous computing. In fact, many texts today describe pervasive and ubiquitous as the same thing. Although the notion of being freed from the desktop computer and building on the opportuni-ties opened up by connected mobile and embedded computers is a theme common to both, in 1991 the connection with invisible and calm technolo-gies was a uniquely Xerox PARC perspective. However more than 10 years later, any unique position described by either party has been slowly inte-grated into the shared vision and by the mid-2000s any publications that set out to describe this topic presented fundamentally the same position.IBM, to its credit, was one of the /f_irst companies to investigate the busi-ness opportunity around pervasive systems, and created a business unit dedicated to the task.One of the /f_irst commercial deployments of a pervasive computing sys-tem was born from a collaboration between IBM Zurich and Swissair in 1999 (IBM Swissair), enabling passengers to check-in using Web-enabled (WAP) cell phones (Figure 1.6). Once the passengers had accessed the ser-vice, the phone also served as a boarding pass, showing gate seat and /f_light departure information, and identifying the traveler as having valid /f_ight credentials. Although this was one of the most publicized projects, IBM also applied these technologies to other service opportunities in banking and /f_inancial services, gaining early experience in this area.
93606_Book.indb   118/26/09   1:38:26 PM 12  /UIstop  Roy Want
Ubiquitous computing system-level solutions tend to be cross- discipline, and involve the integration of many disparate technologies to meet the original design goals. One of the key enablers for pervasive solutions has been the development of wireless/mobile platforms running standard operating systems that are already widely deployed in the form of smart phones. Today, this has enabled the use of generalized so/f_tware environments, such as Web Sphere and the J9 Virtual Machine, to name two of their well-known so/f_tware projects. /T_he strengths of IBM‚Äôs system integration have played well together to take advantage of a growing com-mercial service opportunity around pervasive systems.1.1.5  University of Tokyo: T-Engine and the ITRON Operating SystemOn the other side of the Paci/f_ic Ocean in the late 1980s, researchers in Japan also realized the time had come for a new computing paradigm based around embedded systems. Prof. Ken Sakamura from Tokyo University, a famous computing architect even before his interest in ubiq-uitous computing, created the TRON research program. He developed a series of embedded computing platforms called T-Engines that were designed to be embedded in devices ranging in size from mobile electron-ics to home appliances and smart sensors (Figure 1.7). As with the other ubiquitous computing programs described in this chapter, the design of a suitable so/f_tware framework to support the development of applications was equally as important as the design of novel hardware. Sakamura devel-oped ITRON, an embedded real-time operating system that was portable 
FIGURE 1.6 IBM provided Web-based services for Swissair using W AP on a cell phone to create an electronic boarding pass. (Courtesy of IBM Corp.)
93606_Book.indb   128/26/09   1:38:26 PM An Introduction to Ubiquitous Computing  /UIstop  13
across the various scales of T-Engine, and also able to run on a number of commercial platforms (Krikke, 2005).ITRON became very popular because it was an embedded solution that uni/f_ied the development of so/f_tware between various computer vendors in Japan, and what had been a very fragmented approach to building embed-ded systems began to coalesce around one design solution. /T_he license for ITRON was also attractive to businesses because although it was open source, allowing development, improvement, and so/f_tware additions, any changes did not need to be integrated back into the source tree, and thus given away to competitors. Instead, each company could keep these changes as a diÔ¨Äerentiator for their product. Although these advantages served the community, it also led to incompatibilities in some cases, which limited the ability to share and run application code. Nonetheless, ITRON has been extremely successful in this market, and has supported a high degree of innovation in mobile and embedded products, all of which teach us lessons about the development of mainstream ubiquitous computing applications.1.1.6  Hewlett Packard: Cooltown/T_he Cooltown project (Kindberg et al., 2002) popularized the notion of linking real-world objects with Web content. /T_he key observation was that every object could have a Web page capable of describing it, such as its name, ownership, origin, and associated network services, etc. /T_his 
FIGURE 1.7 Several examples of T-Engines designed to support embed-ded computation at various scales of devices from information appli-ances to sensors. (From Krikke, J., *&&&1FSWBTJWF$PNQVUJOH4(2), 2005. With permission.)
93606_Book.indb   138/26/09   1:38:27 PM 14  /UIstop  Roy Wanttechnique has clear value in a corporate setting, providing simple ways to con/f_igure and interact with networked systems. For complex devices such as printers and routers, a Web server can be embedded into the device, and accessed through a network connection (wired or wireless). However, there is also an opportunity to provide Web presence for simple, non-electronic, and unsophisticated objects by attaching electronic tags that encode a unique ID. When used in conjunction with a database that maps these unique IDs with information, the combination becomes a power-ful tool; this is similar in concept to the ‚ÄúBridging Physical and Virtual Worlds‚Äù project at Xerox PARC in 1998 (Want et al., 1999). In Cooltown, the tags were implemented with barcodes or IR beacons, and could con-tain either the full textual URL or a unique number that could be mapped to the URL in order to access the corresponding server.Although well suited to a corporate environment in which the eÔ¨É-cient coordination and tracking of equipment are important, it can also be generalized to bring advantages to almost any everyday situation by tagging people, places, and things. A system that has access to the iden-tity of all the people and objects in a particular place also has access to the de/f_ining context, and can make inferences about the activities taking place. Cooltown created a distributed system to represent people, places, and things in the system, and constructed various experimental envi-ronments (Figure 1.8) to understand how they could be used to support 
FIGURE 1.8 A Cooltown environment at HP Labs, Palo Alto, CA, in which all objects have a Web presence. (Photo courtesy of Hewlett-Packard Corp.)
93606_Book.indb   148/26/09   1:38:27 PM An Introduction to Ubiquitous Computing  /UIstop  15work practices. In addition to work and oÔ¨Éce situations, Cooltown also deployed its Web presence system in museums and other public exhibits to enhance user experience in that setting. /T_he applications of Cooltown provide us with another unique example of how a ubiquitous computing environment can be designed and deployed in the real world.1.2  UBIQUITOUS COMPUTING IN U.S. UNIVERSITIES1.2.1  UC Berkeley: InfoPad/T_he objective of the InfoPad program was to explore architecture and sys-tems level issues for the design of a mobile computer providing ubiquitous access to real-time media in an indoor environment (Truman et al., 1998). /T_he program was created by Prof. Bob Brodersen, involving a large gradu-ate team in the mid-1990s, and served as a vehicle for exploring individual system components and the low-power mechanisms needed to support eÔ¨Äective mobility. Toward this goal, several chip designs were fabricated to push conventional design limits, for example, a sub-threshold static RAM operating with exceptional low-power dissipation./T_he wireless communication architecture took advantage of a thin client model with a high data-rate downlink for display updates, and a low data-rate uplink for keyboard, mouse, and pen interaction. /T_he asymmetric radio communication system used a Plessey 1‚Äì2 Mbps radio modem in the 2.4 GHz band for the downlink, and a 121 kbps uplink based on a Proxim 902 MHz radio thus avoiding in-band interference between the two modes./T_he architecture of InfoPad was highly tuned to the pad functionality, without requiring high-performance processors and memories, or mass storage devices (Figure 1.9). As a consequence of using dedicated system functions (and a modestly powered coordinating processor), the proces-sor clock rate could be lowered, and power consumption reduced along with the size and weight of the battery. A primary goal of the project was to enable multimedia applications to be used while mobile; therefore, in addition to buttons and pen input, the device also supported a micro-phone, enabling speech-based applications. /T_he downlink data stream was also capable of delivering digital audio and video to the screen, in addition to screen graphics. /T_his device was a potent mobile platform that eÔ¨Äectively allowed researchers to time travel, exploring a ubiquitous com-puting environment that is only now commercially available in some parts of the world, such as South Korea‚Äôs HSAPD peer-to-peer video services, and, in trials, with WiMAX in the United States.
93606_Book.indb   158/26/09   1:38:27 PM 16  /UIstop  Roy Want
1.2.2  MIT Media Laboratory: Wearable ComputingTaking another approach to ubiquitous computing, XFBSBCMFDPNQVUJOH puts the emphasis on a portable computer that can be unobtrusively integrated with a person‚Äôs clothing, while still being comfortable for the wearer (Siewiorek et al., 2008). /T_he MIT Media Laboratory has been a pio-neer in this area, with several researchers embracing the wearable con-cept and living with the technology on a daily basis. A key characteristic of such a device is the heads-up display integrated into a user‚Äôs glasses, and an input device that can be operated while out of view, typically in a pocket. /T_he early wearable designs were weakest in their implementa-tion of the display technology, requiring headgear that did not really meet the ‚Äúunobtrusive‚Äù requirement. However, as private companies embraced the opportunity for wearable computing in some vertical markets (e.g., maintenance engineering and military operations), investment in novel solutions has resulted in compact displays that can be integrated with con-ventional eyeglasses (Figure 1.10a).A wearable input device used by many of the pioneers is the Twiddler (Figure 1.10b), a one-handed chorded keypad that, with practice, can yield average typing speeds of 47 words per minute (wpm), and as high as 67 wpm in some cases (Lyons et al., 2006), which is fast enough for many tasks. However, this is only half the speed of a QWERTY keyboard, which according to one study has an average speed of 82 wpm and a maximum of about 114 wpm (Lyons et al., 2004).
FIGURE 1.9 Infopad: UC Berkeley‚Äôs exploration of a mobile ubiquitous com-puting architecture. (Courtesy of Computer Science Department, University of California Berkeley.)
93606_Book.indb   168/26/09   1:38:28 PM An Introduction to Ubiquitous Computing  /UIstop  17
Although wearable computing is perhaps limited to people who are pre-pared to adapt and learn how to use specialized equipment that deviates from the Weiser model of ubiquitous computing, it opens up many new possibilities for using computing while mobile, and in an environment that may have limited ubicomp support.An important related topic is BVHNFOUFESFBMJUZ (Feiner et al., 1997) in which a computer is able to overlay information on top of what a user sees in order to improve ability to carry out a task. For example, a mainte-nance engineer servicing an engine would bene/f_it from a visual overlay of labels that identify key components augmenting what she would normally see. Such a system could also access related manuals simply by select-ing the corresponding item in the /f_ield of view with a pointing device. In an expanded view of ubiquitous computing with a suitably unobtru-sive heads-up display embedded in our eyewear, augmented reality could become an indispensable tool of the future in much the same way we have come to rely on the cell phone today.
 
 (a) (b)FIGURE 1.10 (a) Prof. /T_had Starner, one of the wearable computing pio-neers from MIT Media Laboratory, wearing a heads-up display produced by Microptical Inc. integrated with his glasses (Photo copyrightSam Ogden. With permission); (b)Twiddler, a chorded keypad used by many wearable systems as a means of one-handed typing, with the added advantage that it can be operated from inside a pocket. (Courtesy of Intel Corp.)
93606_Book.indb   178/26/09   1:38:29 PM 18  /UIstop  Roy Want1.2.3  Georgia Tech: Living LaboratoriesIn the late 1990s, the Future Computing Environments group at Georgia Tech (Atlanta, GA) began a number of research activities under the gen-eral category of Living Laboratories. Prof. Gregory Abowd is the lead researcher and cofounder of the group, and best known for two exploratory ubicomp projects: Classroom 2000 (Abowd, 1999) and Aware Home (Kidd et al., 1999).Classroom 2000 began in July 1995 with a bold vision of how ubiqui-tous computing could be applied to education and provide added value to standard teaching practices in the future (Figure 1.11). In a typical classroom setting, a teacher stands at the front of a class and writes on a whiteboard, o/f_ten erasing older points to make room for new annota-tions. During the class various questions are likely to be asked, answers provided, and in some cases a discussion or debate may ensue. However, a/f_ter the class is over, the detailed structure, discussion, and delivery of the lesson are usually lost, and all that remains are the student notes, abstract references, and sometimes teacher-supplied handouts. Classroom 2000 investigated the possibility of capturing the entire lesson in a form that would be a useful reference itself. However, a monolithic video is of limited use as a reference, and a key challenge was to create index points that enabled students to skip over a block of video of little interest, and be 
 
 (a) (b)FIGURE 1.11 (a) Classroom 2000: Gregory Abowd teaches, while (b) the Zen Pad UI captures notes and index points on a timeline of the lesson. (Courtesy of Prof. Gregory Abowd, Georgia Tech.)
93606_Book.indb   188/26/09   1:38:30 PM An Introduction to Ubiquitous Computing  /UIstop  19able to jump to the exact point in time that might provide the answer to a question. Furthermore, these index points needed to be automatically generated, with clear meaning to anybody who wanted to use them. With an electronic board (the Xerox Liveboard was used for some of this work), it is possible to timestamp all the annotations made by a teacher during the lesson, along with slide transitions during a presentation, and other user-generated input, and these were used to index the audio and visual record of the lesson. /T_hus, the combined media, timeline, and indices rep-resent a powerful summary that can be immediately made available to the students when the class /f_inishes. One of the justi/f_ications for design-ing and testing the system in a real class setting was to understand the many subtle design points and user interface requirements that needed to be included in the system to be successful. Classroom 2000 has proven its value through popular demand, and was replicated /f_ive times on the Georgia Tech campus, and further deployed at three other universities. Classroom 2000 is an excellent example of ubicomp being applied to a real problem, and creating a solution of measurable value.In 1999, the Aware Home project was founded and set out to explore how computation and embedded technologies could support everyday activities in a home. In the spirit of Living Laboratories, a complete resi-dential building was designed from scratch, providing all of the expected features in a modern home, but with additions to support embedded com-putation and sensing, wiring conduits, and a control center. /T_he result was a building with integrated sensing and control, and with enough /f_lexibility to support unforeseen applications that might crop up in the future./T_he building was completed in 2000 (Figure 1.12), and represents one of the largest dedicated spaces created to explore the vision of ubiquitous computing‚Äîa full embodiment of Weiser‚Äôs ideas of 10 years earlier. As with all new technologies, the reality of such a deployment o/f_ten diÔ¨Äers in many signi/f_icant ways from the original vision, and learning about the real problems, along with the best proposed solutions, was the primary bene/f_it for undertaking a project on this scale.Systems introduced into the Aware Home to support the research included cameras and RFID tags to identify and track an occupant‚Äôs loca-tion, and various forms of sensors. For example, the house included a TNBSU/f_lPPS composed of a network of pressure sensors that could identify the char-acteristic ambulatory gait of individuals as they moved between rooms, thus providing additional means of occupant identi/f_ication. Among the many 
93606_Book.indb   198/26/09   1:38:30 PM 20  /UIstop  Roy Want
research projects that made use of the Aware Home, a novel method of sens-ing occupant activity was achieved by monitoring the electricity, gas, water, and waste lines connected to the house. Researchers found that character-istic signals in the consumption of power, gas, and water over time could be used to accurately infer and model activities going on in the house. Models of this type can be used to conserve resources by advising occupants of the consequences of their everyday actions, a simple but very tangible bene/f_it of this approach in a world that needs to pay attention to conservation./T_he Aware Home also investigated techniques to allow elderly residents to remain in their homes longer than would normally be possible, some-times called ‚Äúaging in place,‚Äù through remote sensing. By unobtrusively allowing family members to monitor an elderly relative, the family could be made aware how well the relative was managing with everyday tasks, and avoid undue strain on an already overloaded health care system by requesting support only when absolutely necessary.1.3  UBIQUITOUS COMPUTING IN EUROPEAN LABORATORIES AND UNIVERSITIES1.3.1  Olivetti Research: Active BadgesAbout the same time as Xerox PARC embarked on its ubiquitous comput-ing program, Olivetti formed a research laboratory in Cambridge, UK, with a focus on high-speed local area networks (LANs), and the novel 
FIGURE 1.12 Georgia Tech‚Äôs Aware Home. (Courtesy of Prof. Gregory Abowd, Georgia Tech.)
93606_Book.indb   208/26/09   1:38:30 PM An Introduction to Ubiquitous Computing  /UIstop  21applications and systems they enable. Toward this goal, the Pandora proj-ect was formed to explore the design of integrated multimedia services based on a Cambridge Fast Ring (a 100 Mbps slotted ring: the slot passing mechanism providing an inherently fair scheme for sharing bandwidth among multiple network clients). To support integrated services, which included audio and video traÔ¨Éc (note that this is 1988, the age of Plain Old Telephone Service, and well before Skype and cell phones), there was interest in using distributed computation to provide sophisticated tele-phone services such as video telephony and conferencing using a LAN. At that time, commercial telephone features were de/f_ined by the telephone company, and computer telephony integration (CTI) standards were only beginning to be addressed. To support eÔ¨Äective automatic delivery of digi-tal phone calls within the Pandora system, a dial-by-name approach was adopted. However, the system still lacked the ability to deliver a call to the location where the intended recipient was actually located, instead just connecting to the recipient‚Äôs oÔ¨Éce.To solve this problem, the Active Badge Location System was cre-ated (Figure 1.13). It was the /f_irst automated indoor location system and used a diÔ¨Äuse infrared beacon embedded into the electronic badges (Active Badges) worn by various members of the laboratory (Want et al., 1992). Each badge emitted an infrared signal encoding a unique ID that was received by a network of sensors, typically one sensor per room (multiple for large conference rooms). Badge beacons had a 1/10 second duration and a period of ~15 seconds, thus resulting in a 1:75 chance of 
FIGURE 1.13 (a) Active Badge Sensor basestation; (b)an Active Badge. (Photo courtesy of PARC, Inc., http://www.parc.com)
93606_Book.indb   218/26/09   1:38:31 PM 22  /UIstop  Roy Wantcollision with another badge signal. /T_he oscillator in each badge was delib-erately built from low-tolerance components to ensure that two badges that were synchronized by chance would soon dri/f_t apart, and a/f_ter a couple of beacon periods would produce distinct signals. Each room sensor was polled using a low-bandwidth custom network returning badge IDs buÔ¨Ä-ered at each location, thus associating badges, and hence people, with the rooms they occupied. /T_he polling computer aggregated the ID‚Äìlocation pairs, reinterpreting the numbers as name‚Äìlocation pairs, which could then be advertised to other computers through a network-based location service. True name-based dialing was achieved by making use of this loca-tion service./T_he Active Badge system provided one of the earliest available loca-tion systems and opened up the possibility of experimenting more gen-erally with location-based services. As a result, Olivetti received many inquiries about the system, and built a consignment of badges and sensors to supply research laboratories around the world including Xerox PARC, EuroPARC, DEC SRC, DEC WRL, MIT Media Laboratory, and Cambridge University Computer Laboratory. /T_he resulting location-based services inspired many alternate indoor location technologies. See Chapter 7 for more information on location systems for ubicomp.Olivetti continued to be a leader in developing novel location technolo-gies, and by 1997 designed the Active BAT system (Harter et al., 1999), with the goal of providing accurate three-dimensional (3-D) positioning within a room. /T_his capability was achieved with a new type of badge (BAT) that combined ultrasound and radio to enable range measurements to be made from an array of sensors placed in the ceiling of every room. /T_he radio signal was sent by a single transmitter and used to address a particular badge. When the corresponding badge received a signal encod-ing its address, it responded by transmitting an ultrasonic pulse travel-ing at the speed of sound in air to the array of ceiling sensors. Because the speed of light is so much faster than the speed of sound, each sensor could measure the diÔ¨Äerence in time between the original radio signal and the received ultrasonic signal, thus providing multiple independent estimates for the range of the badge to each sensor. By combining range estimates from the known sensor topology, a relative 3-D coordinate could be calculated for the badge. In practice, a room-based sensor grid used one sensor per ceiling tile (~2 /f_t2) to collect multiple measurements, and achieve a positional accuracy of about 3 cm in a typical room. /T_his is a very high-level description of the system, and in practice it is more 
93606_Book.indb   228/26/09   1:38:31 PM An Introduction to Ubiquitous Computing  /UIstop  23complicated because ultrasound can re/f_lect from nearby objects, generat-ing ghost pulses that need to be removed from the calculation using signal processing techniques to limit any errors. Using this system, each BAT could be polled and an accurate location determined even if it was mov-ing. /T_herefore, a key advantage of this approach is the ability to accurately track objects in real time in three dimensions.MIT produced an alternate indoor positioning system shortly a/f_ter Olivetti. /T_his system was also based on ultrasound, but used a design approach that was the inverse of the BAT system. Instead of the badges transmitting an ultrasound pulse, a ceiling-mounted device called a $SJDLFU (Priyantha et al., 2000) simultaneously transmitted a radio packet and an ultrasound pulse as a combined beacon. Any mobile (or /f_ixed) device receiving the radio packet could also measure the time interval for the accompanying ultrasound packet to arrive, and therefore calculate its range to the Cricket. If several Crickets were placed in a room, and range calculations made by the mobile device to each one, it could then calculate its position relative to the known locations of the Crickets. /T_his approach had some privacy advantage over the BAT system, as each mobile could then decide who else could /f_ind out its location (i.e., it would have to actively transmit it to another device). However, because the mobile range calculations for each Cricket are not carried out simultaneously, unlike the BAT, accurate 3-D location while in motion is not possible. In terms of deployment, however, the Cricket system is easier, requiring less ceiling-mounted components than the BAT, and does not require networking. In practice, both systems have their strengths and weaknesses, and depend-ing on the application, a case can be made for either approach.1.3.2  Karlsruhe: Cups and Smart-ItsOne of the strongest university ubiquitous computing programs in conti-nental Europe is found at the University of Karlsruhe, also the origin of the Ubicomp conference. In 1997, researchers began experimenting with ubicomp concepts and gained experience embedding computing into everyday objects, the MediaCup (Beigl et al., 2001) being a well-known example (Figure 1.14a). Inspired by this work and the resulting research questions it inspired, Karlsruhe led the formation of the Smart-Its project, a collaboration with ETH (Zurich) and Lancaster (UK), Viktoria Institute (Sweden), Interaction Institute (Sweden), and VTT (Finland). /T_he goal of the Smart-Its (Holmquist et al., 2004) project was to create a general-purpose tool for experimenting with ubicomp concepts and providing 
93606_Book.indb   238/26/09   1:38:31 PM 24  /UIstop  Roy Want
researchers with a hardware and a so/f_tware development environment well suited to ubicomp research (www.smart-its.org).Smart-Its are small embedded computers with communication and sens-ing components that can be further integrated with everyday objects such as furniture, clothing, coÔ¨Äee cups, product packaging, and fresh produce (Figure 1.14b). /T_he initial research collaboration resulted in 16 diÔ¨Äerent projects exploring a wide variety of applications. Some examples include tracking the position of objects on a table by measuring the relative load-ing of each table leg; and in the event of an avalanche augmenting a skier‚Äôs jacket to wirelessly send data from a pulse oximeter to a rescue team and alerting them which skier might need critical assistance /f_irst; and a smart restaurant that could tag and track waiters, serving dishes, bottles, and food items to ensure timely delivery of a complete order. Smart-Its have been a very successful research platform and widely adopted across the European university network. Much of the success results from standard APIs that have been created to allow low-level abstraction of sensing and communication components, and making use of higher-level operating behaviors called QFSDFQUT. Percepts are supported by the Perception API (PAPI) and enable devices to wirelessly share sensing components situated on nearby smart-its with little programming overhead ‚Äî an abstraction called DPMMFDUJWFQFSDFQUJPO.
 
 (a) (b)FIGURE 1.14 (a) /T_he MediaCup warns you if the coÔ¨Äee is too hot to drink or that it is being tipped at a critical angle; (b) a Smart-It embedded computing platform. (Courtesy of Michael Beigl.)
93606_Book.indb   248/26/09   1:38:31 PM An Introduction to Ubiquitous Computing  /UIstop  251.3.3  Lancaster University: GuideSince the mid-1990s Lancaster University has been a leading university research center in England contributing to the ubicomp vision. From 1997 to 2001, the GUIDE project (Cheverst et al., 2000) was created, obtained a government grant, and captured the imagination of many researchers interested in location-based services in the wild. It was the /f_irst mobile electronic guidebook designed and optimized from concept to implemen-tation for use by tourists. /T_he user platform was based around a rugged Fujitsu TeamPad tablet (one of the early pen-based tablet products, 21 √ó 15 √ó 1.5 centimeters and weighing about 1/3 pound; Figure 1.15). A fully operational TeamPad had a battery life of about 2 hours, which for nomi-nal use meant it could be given to a tourist in the city of Lancaster on a day trip, and eÔ¨Äectively monitor the entire user experience./T_he system was initially evaluated by a trial conducted over a 4-week period, and used by 60 people during that time. GUIDE was unique in com-parison with earlier reported electronic guidebooks, such as Cyberguide (Long et al., 1996) from Georgia Tech, in that it used NCR Wavelan radios compatible with the 802.11b standard (new at that time), and took advan-tage of the characteristic poor radio propagation to create servers that cov-ered a region called a cell. Each cell server presented the user with options to learn more about areas of interest. Once the user made a selection, a Web page was retrieved from the GUIDE Web server providing a full descrip-tion of nearby points of interest. GUIDE was the /f_irst electronic tour guide that made use of a microcellular communication network to determine 
FIGURE 1.15 /T_he Fujitsu TeamPad used to implement the mobile plat-form used by the GUIDE system. (Photo courtesy of Prof. Nigel Davis, Lancaster University.)
93606_Book.indb   258/26/09   1:38:32 PM 26  /UIstop  Roy Wantlocation in a citywide deployment. /T_he system also used a mobile tablet with a display small enough to carry, but large enough for eÔ¨Äective user interaction, and it had the ability to add new information on the /f_ly.1.4  MODERN DIRECTIONS IN UBIQUITOUS COMPUTINGSince 2000, there has been a wealth of ubicomp projects launched around the world, and although we restrict our description in this introduction to the genesis of ubicomp and some of the activities that constituted its formative years, it is worth noting that two of the mainstream companies in the computer industry today, Microso/f_t and Intel, have also embraced ubicomp as an exploratory direction in their research laboratories. Here, we brie/f_ly describe some of the most signi/f_icant projects they have under-taken in the past 10 years.1.4.1  Microsoft ResearchMicroso/f_t Research (MSR) was founded in 1991 in Redmond, WA, with expansion to Cambridge, England, in 1997, and Asia in 1998. MSR Bangalore, Silicon Valley, and Cambridge, MA, were later established between 2005 and 2007. /T_hree noteworthy ubicomp projects carried out by various groups in these laboratories include SenseCam & MyLifeBits, RADAR, and EasyLiving.SenseCam is a small wearable computer that periodically captures images of the world as a user moves around. In collaboration with the MyLifeBits (Gemmell et al., 2006) project, SenseCam provides a wealth of contextual data about the wearer, augmented by a database describing documents and other electronic media that the individual has accessed. /T_he result is a prosthetic memory aid that can be used to answer basic questions about an individual‚Äôs life, enabling more detailed recall than most of us could achieve by unaided means (Hodges et al., 2006).RADAR was the /f_irst example of a wireless system allowing mobile computers to locate themselves in a building [an indoor global position-ing system (GPS)]. It was designed around the /f_irst WiFi (802.11b) radios that were commercially available, and made use of RSSI reception maps in a Microso/f_t building hosting several access points (APs) with the data collected using a wireless survey tool. By comparing the received signal strength indication (RSSI) reading for each AP measured at a point of interest with the RSSI signal maps on record, the system could automati-cally determine a mobile computer‚Äôs most likely location to an accuracy of 2‚Äì3 meters (Bahl and Padmanabhan, 2000).
93606_Book.indb   268/26/09   1:38:32 PM An Introduction to Ubiquitous Computing  /UIstop  27EasyLiving, established in 1999, was MSR‚Äôs closest project to the spirit of the original ubicomp vision. /T_he research was centered on a smart room designed to support both work and recreational activities. A key ingredi-ent was the use of image processing to recognize activities in the space, making use of multiple cameras to track the occupants, and objects situ-ated in the room. Of particular note was the ability to migrate computing sessions from screen to screen as people moved around, and mechanisms to automatically control the lighting and music in the space to best suit all the occupants (Brumitt et al., 2000).1.4.2  Intel ResearchIn 1990, Intel established a new organization called Intel Research to begin oÔ¨Ä-roadmap exploratory research. In support of this mission, it founded a number of laboratories in close proximity to universities with top-tier computer science departments: University of Washington, Seattle; Carnegie Mellon, Pittsburgh; and UC Berkeley along with other groups embedded in corporate locations at Hillsboro, Oregon and Santa Clara, California. Ubiquitous computing became the exploratory direction for Intel Research Seattle (IRS), some of the Berkeley projects, and one of the research groups based in Santa Clara.Place Lab was the best known of the projects from IRS, exploring and building a system that could determine the location of a mobile device by cataloguing and mapping WiFi access points throughout a city (LaMarca et al., 2005); this was later extended to GSM towers, and demonstrated eÔ¨Äec-tive location-based services for cell phone applications. /T_he project was rolled out to the research community as a sandbox to experiment with location-based services on standard mobile platforms. It had a distinct advantage over GPS, in that it worked well indoors and did not require the purchase of additional GPS equipment for operation outdoors. Today, this approach has been adopted by several companies, especially the Apple iPhone.At Intel Research Berkeley, various research projects were created around sensor networks and Motes (Polastre et al., 2004), a small form factor wire-less sensor node that was the heart of these systems. Sensor networks share a common thread with the embedded computation vision of ubicomp. Although they are usually associated with scienti/f_ic monitoring, they can also be integrated with objects in the environment to provide embedded sensing and control (similar to the Smart-Its work described earlier)./T_he Personal Server (Want et al., 2002) project in 2001 took a fresh look at the trends in computation and mobility, recognizing that even 
93606_Book.indb   278/26/09   1:38:32 PM 28  /UIstop  Roy Wanthandheld mobile computers were beginning to make use of high-perfor-mance processors along with high-capacity solid-state memories, and with low-power dissipation they could be operated from a small bat-tery. However, the primary limitation preventing them from serving as an eÔ¨Äective computer was the user interface (display and keyboard). /T_he Personal Server project reversed the traditional design paradigm, and instead of using the mobile device as a client for a remote network server, it used the mobile device as the server and ran the client on a nearby PC, thus enabling a user to gain access through a large high-resolution dis-play and full-feature keyboard. /T_his was further facilitated by the advent of standardized short-range radio technologies such as Bluetooth and WiFi/802.11b. /T_he personal server concept was initially implemented on a custom XScale embedded system called Stargate, and later ran on a Motorola e680 cell phone (Linux/XScale), demonstrating that one day the ubiquitous cell phones could become our primary computer, which we would interact with wirelessly through nearby infrastructural computers.1.5  THE RESEARCH COMMUNITY EMBRACES UBIQUITOUS COMPUTINGIn the early days of ubicomp research (circa 1990), /f_inding an appropriate venue to publish papers and discuss research was challenging. In fact, none of the conferences at that time were well suited to the topic at all. For appli-cation-oriented ubicomp research, the Association of Computing Machinery (ACM) Special Interest Group on Computer‚ÄìHuman Interaction (CHI) (ori-gin: 1982) and ACM Symposium on User Interface So/f_tware and Technology (UIST) (origin: 1989) were the closest options, but naturally biased toward the evaluation of user interfaces rather than mobile and embedded systems. However, some journals provided viable options; for example, early work on the Active Badge was published in 1991 in "$.5SBOTBDUJPOTPO0Ô¨ÉDF*OGPSNBUJPO4ZTUFNT(50*4), but although well received, it was not represen-tative of their typical published work. Mark Weiser also had some success publishing his early ubicomp ideas in venues such as 4DJFOUJ“áD"NFSJDBO and $PNNVOJDBUJPOTPGUIF"$.. Part of the problem was that mobile computing was also in the early stages of development‚Äîno wireless standards existed for LAN-based solutions at that time. In fact, the /f_irst plenary meeting of the Institute of Electrical and Electronics Engineers (IEEE) that included the 802.11 working group was only held in 1991. It took another 3 years for the Workshop on Mobile Computing Systems and Applications (WMCSA) 
93606_Book.indb   288/26/09   1:38:32 PM An Introduction to Ubiquitous Computing  /UIstop  29to be established (1994); it was the /f_irst academic mobile computing work-shop and was held in Santa Cruz, CA. /T_his was followed by the /f_irst ACM- supported conference of this type, the Mobile Computing and Networking Communications conference, or ACM MobiCom, in Berkeley, CA (1995), which soon became the premier conference for work on mobile systems. As a result, the organizers of WMCSA decided to let MobiCom take the lead and discontinued their workshop for several years. However, it soon became clear to the rest of the research community that MobiCom did not cover the full spectrum of research that was being explored under the banner of ubiquitous computing. To /f_ill the conference vacuum, Karlsruhe University in Germany created a new conference, Handheld and Ubiquitous Computing (HUC), in 1999, which had a much broader charter than MobiCom. HUC, by comparison, melded applications, user interfaces, systems, wireless networking, and hardware design into its char-ter. A/f_ter HUC 2000, the word ‚ÄúHandheld‚Äù was dropped, and from 2001 onward the conference was renamed Ubicomp. In 2008, it was also adopted by the ACM and is now supported by ACM Sigmobile and SIGCHI.With the growing momentum behind mobile, wireless, and embedded technologies, by 2002 considerably more researchers were entering the /f_ield of ubicomp and looking for venues to publish. As a result, another conference, called ‚ÄúPervasive,‚Äù began independently; the /f_irst open event was held in Zurich, Switzerland in 2002. /T_he name ‚ÄúPervasive‚Äù was cho-sen because it was initially supported by IBM, which had already invested heavily in the name. By 2003 it was clear that many of the program com-mittee members for both conferences overlapped and were serving the same community with a similar charter. /T_he organizers decided to coor-dinate these two annual conferences so that they would be held 6 months apart each year‚Äîwith Pervasive being held in the Spring and Ubicomp in the Fall‚Äîthus providing two equally spaced opportunities to publish per year, each with similar standards and criteria for acceptance. Meanwhile, MobiCom continued its charter with a focus on communications, which only strengthened from 2000 onward, possibly because many of the appli-cation and systems papers were now being submitted to Ubicomp and Pervasive. However, members of Sigmobile felt that there was room for another ACM conference with a focus on mobile systems and applica-tions, with the additional criterion that all research papers should describe systems that had actually been built, deployed, and evaluated, and typi-cally described multiple layers of the system stack. As a result, in 2003, ACM launched MobiSys, with its /f_irst conference held in San Francisco, 
93606_Book.indb   298/26/09   1:38:32 PM 30  /UIstop  Roy WantCA. MobiCom continued in parallel, still focusing on networking and research simulations, thus providing two distinct venues with comple-mentary charters. ACM MobiSys and MobiCom are now generally recog-nized as the two top-tier conferences in this area.While these developments were taking place, two other conferences of note were also being forged. In 1997, the wearable computing community began the /f_irst International Symposium on Wearable Computing (ISWC) in Boston, MA, and in 1998, Human‚ÄìComputer Interaction for Mobile Devices (MobileHCI) began in Edinburgh as a workshop, and became a full conference in 2002. Also in 1999, WMCSA was resurrected as an annual workshop to provide researchers with valuable feedback on early mobile systems work. WMCSA was renamed Hotmobile in 2008 and also became an ACM-supported conference. /T_here is now a strong link with the orga-nizers of ACM MobiSys providing a mechanism to progress research from a workshop forum to a full conference and helping ensure that senior mem-bers of the research community will attend the workshop by colocating the program committee meeting for MobiSys with the HotMobile event.In contrast to the early 1990s, from 2009 going forward there is a wealth of ubicomp-related conferences available to researchers. Other notable venues are listed here along with the year they were founded: IEEE Pervasive Computing and Communication in Dallas-Fort Worth, TX, 2003; MobiQuitous in Boston, 2004; Location and Context Aware (LoCA) in Munich, Germany, 2005; Tangible and Embedded Interaction (TEI) in Baton Rouge, LA, 2007; and Mobile Computing, Applications, and Services (Mobi CASe) in San Diego, CA, 2009. However, there are many other conferences that are not mentioned mainly because they have little impact on the mainstream research community.For papers more suitable to journals and magazines, a number of peer-reviewed publications have also been created over the years. Magazines include *&&&1FSTPOBM$PNNVOJDBUJPOT, which was /f_irst printed in 1994. It combined in-depth wireless research with application, and systems. In 1997, Springer began publishing 1FSTPOBM6CJRVJUPVT$PNQVUJOH, which continues to serve as an important venue for publishing ubicomp articles and research in Europe. In 2001, 1FSTPOBM$PNNVOJDBUJPOT evolved into two new publications, with *&&&1FSWBTJWF$PNQVUJOH p r o vi d i n g  a  p e e r -reviewed forum for systems and applications level work, and *&&&8JSFMFTT$PNNVOJDBUJPOT mainly soliciting manuscripts on research based on the lower layers of the protocol stack. *&&&5SBOTBDUJPOTPO.PCJMF$PNQVUJOH has also been an archival publication for more mature research since 2002.
93606_Book.indb   308/26/09   1:38:32 PM An Introduction to Ubiquitous Computing  /UIstop  311.6  THE FUTURE OF UBIQUITOUS COMPUTINGSince 2000, there has been a dramatic improvement in the capabilities of high-end cell phones, also known as smart phones. /T_hese devices no longer just make phone calls; they also integrate computation and com-munication into a handheld device small enough to be dropped into a pocket or purse. In 2008, there were about 1.2 billion cell phone shipments and 3.3 billion cellular subscribers, about half the population of the Earth. Not surprisingly, the cell phone has become the most ubiquitous computer there has ever been. Admittedly, the vast majority of these devices are rela-tively unsophisticated, but the percentage that comprises smart phones is growing steadily each year. Another notable data point is that smart phone shipments outnumbered laptop PC shipments for the /f_irst time in 2007, at about 116 million units (Figure 1.16) compared to 108 million for laptops. Since 2002, the smart phone has also been absorbing the PDA market, and with many devices running mainstream operating systems, for example, embedded Linux or Windows Mobile 6.0, these phones are beginning to feel more like mainstream computers.To understand where this market is going, we look at a new fam-ily of mobile processors called Atom, which was announced at the Intel Developers Forum in Shanghai, China, in April 2008. /T_he /f_irst generation of processors in this family is based on a 45 nm process, is a fully compat-ible t86 instruction set, and is designed for low-power operation in the 
0200400600800100012001400160018002000
2004200520062007200820092010201120122013YearShipments (M)Cell phonesSmart phonesLaptops
FIGURE 1.16 Mobile device shipments for 2004‚Äì2008 and forecasts for 2008‚Äì2013. (Data from Intel Library.)
93606_Book.indb   318/26/09   1:38:33 PM 32  /UIstop  Roy Want1‚Äì2 W range. Initially targeted at MIDs and NetBooks, this is a game-changer for mobile products.It does not take much imagination to realize that in a couple of genera-tions of this processor family, the cell phone industry will be able to design a device that is fully compatible with a PC, but with the commensurate power consumption of a smart phone. /T_he primary advantages of Atom are performance and so/f_tware compatibility, things that have plagued the mobile market for years, with a fragmented community of hardware and so/f_tware developers. Using this processor, legacy PC code can be reused, and through remote wireless display technologies, applications can be run without modi/f_ication. Developers also can have high con/f_idence that pro-grams designed and tested on a PC can be successfully transferred to a mobile without modi/f_ication. Furthermore, by using virtualization tech-niques, application code running on a PC in a Virtual Machine (e.g., KVM) can be migrated across a wireless connection to a mobile device, and then back to a PC to facilitate both mobile and enterprise work practices‚Äîagain, all without modifying the applications.Uniformity of processor architecture and the opportunity for a mobile runtime environment that is compatible with the desktop, server, and embedded market will accelerate the development of ubicomp applications and facilitate their use in many new situations. Just as the PC provided a common platform for the successful development of widely available desktop so/f_tware in the early 1980s, cell phones are poised to take that role in the next decade.To conclude, consider the original Weiser vision in which Tabs, Pads, and Liveboards were used as informative design points to explore future opportunities for ubiquitous computing. Today, there are already several analogous commercial devices that are in wide use. For example, smart phones are much like Tabs, as they can be kept with us at all times, access a ubiquitous data network, and put us in touch with useful remote ser-vices. Modern laptops (some of which also convert into tablets) are very similar to the ParcPad concept. Furthermore, modern electronic books, such as the Sony e-reader and Amazon Kindle based on e-ink technol-ogy, are already providing a Pad-based user experience that rivals tradi-tional books. Large-screen LCD displays with 50 to 60 inch diagonals are now also common, primarily driven by the television industry. Unlike the Liveboard, the majority of these devices do not have pen input or a touch surface, but there are a few products that provide this capability. Most of the new models are also equipped with a network interface, enabling them 
93606_Book.indb   328/26/09   1:38:33 PM An Introduction to Ubiquitous Computing  /UIstop  33to send and receive remote content. We may not be living the complete Weiser vision of ubiquitous computing, but many of the key ingredients are rapidly moving into place. /T_he remainder of this book describes the underlying technologies and so/f_tware architectures that are being devel-oped to realize ubicomp more fully. At this time, ubicomp is no longer just a vision; it is rapidly becoming the reality.REFERENCESAbowd, G. D., Classroom 2000: An experiment with the instrumentation of a liv-ing educational environment, *#.4ZTUFNT+PVSOBM38(4): 508‚Äì530. Special issue on Pervasive Computing, 1999.Bahl, P ., and Padmanabhan, V . N., RADAR: An in-building RF-based user loca-tion and tracking system, *&&&*OGP$PN, March 2000.Beigl, M., Gellersen, H., and Schmidt, A., Mediacups: Experience with design and use of computer-augmented everyday artifacts, $PNQVUFS/FUXPSLT 35(4): 401‚Äì409, 2001.Brumitt, B., Meyers, B., Krumm, J., Kern, A., and Shafer, S., EasyLiving: Te chno-logies for intelligent environments, Second International Symposium on Handheld and Ubiquitous Computing (HUC 2000), September 2000, pp. 12‚Äì27.Cheverst, K., Davies, N., Mitchell, K., and Friday, A., Experiences of developing and deploying a context-aware tourist guide: /T_he GUIDE project, MobiCom 2000, Seattle, pp. 20‚Äì31.Elrod, S., Bruce, R., Gold, R., Goldberg, D., Halasz, F., Janssen, W ., Lee, D., McCall, K., Pederson, E., Pier, K., Tang, J., and Welch, B., Liveboard: A large interac-tive display supporting group meetings, presentations and remote collabora-tion, ACM SigCHI, November 12, 1992.Feiner, S., MacIntyre, B., Hollerer, T., and Webster, A., A touring machine: Proto-typing 3D mobile augmented reality systems for exploring the urban envi-ronment, 1SPDFFEJOHTPGUIFTU*&&&*OUFSOBUJPOBM4ZNQPTJVNPO8FBSBCMF$PNQVUFST	*48$
, p. 74, 1997.Gemmell, J., Bell, G., and Lueder, R., MyLifeBits: A personal database for every-thing, $PNNVOJDBUJPOTPGUIF"$. 49(1): 88‚Äì95, 2006.Harter, A., Hopper, A., Steggles, P ., Ward, A., and Webster P ., /T_he anatomy of a context-aware application, 1SPDFFEJOHTPGUIF'J/f_tI"OOVBM"$.*OUFSOBUJPOBM$POGFSFODF PO .PCJMF $PNQVUJOH BOE /FUXPSLJOH 	.0#*$0.
, August 1999.Hodges, S., Williams, L., Berry, E., Izadi, S., Srinivasan, J., Butler, A., Smyth, G., Kapur, N., and Wood, K., SenseCam: A retrospective memory aid, P . Dourish, and A. Friday (Ed.), 6CJDPNQ-/$4, pp. 177‚Äì193, Springer-Verlag, Berlin, 2006.Holmquist, L. E., Gellersen, H., W ., Kortuem, G., Stavros, A., Michahelles, F., Schiele, B., Beigl, M., and Maz√©, R., Building intelligent environments with Smart-Its,*&&&$PNQVUFS(SBQIJDTBOE"QQMJDBUJPOT, 24(1): 56‚Äì64, 2004.
93606_Book.indb   338/26/09   1:38:33 PM 34  /UIstop  Roy WantIBM Mobile and Pervasive Computing, http://domino.watson.ibm.com/comm/research.nsf/pages/r.mobile.spotlight.html.IBM Swissair, IBM /f_irst to enable passengers to check in from mobile phones. http://www.zurich.ibm.com/news/99/wap_sr.html.Katarjiev, C., Demers, A., Frederick, R., Krivacic, R., Weiser, M. et al. Experiences with X in a wireless environment, Mobile and Location-Independent Computing Symposium on Mobile and Location-Independent Computing Symposium, Cambridge, MA, pp. 11‚Äì21, 1993.Kidd, C. D., Orr, R., Abowd, G. D., Atkeson, C. G., Essa, I. A., MacIntyre, B., Mynatt, E. D., Starner, T. E., and Newstetter, W . /T_he Aware Home: A living laboratory for ubiquitous computing research, 1SPDFFEJOHTPG$P#VJME, Position paper, October 1999.Kindberg, T., Barton, J., Morgan, J., Becker, G., Caswell, D., Debaty, P ., Gopal, G., Frid, M., Krishnan, V ., Morris, H., Schettino, J., Serra, B., and Spasojevic, M., People, places, things: Web presence for the real world, .PCJMF/FUXPSLTBOE"QQMJDBUJPOT 7(5): 365‚Äì376, 2002.Krikke, J., T-Engine: Japan‚Äôs ubiquitous computing architecture is ready for prime time, *&&&1FSWBTJWF$PNQVUJOH 4(2): 4‚Äì9, 2005.LaMarca, A., Chawathe, Y ., Consolvo, S., Hightower, J., Smith, I., Scott, J., Sohn, J., Howard, T., Hughes, J., Potter, F., Tabert, J., Powledge, P ., Borriello, G., and Schilit, B., Place Lab: Device positioning using radio beacons in the wild,  1SPDFFEJOHTPG1FSWBTJWF, Munich, Germany, 2005.Long, S., Kooper, R., Abowd, G. D., and Atkeson, C. G., Rapid prototyping of mobile context-aware applications: /T_he Cyberguide case study, in 1SPDFFEJOHTPGUIFOE"$.*OUFSOBUJPOBM$POGFSFODFPO.PCJMF$PNQVUJOHBOE/FUXPSLJOH	.PCJ$PN
, November 1996.Lyons, K., Starner, T., Plaisted, D., Fusia, J., Lyons, A., Drew, A., and Looney, E. W ., Twiddler typing: One-handed chording text entry for mobile phones, 1SPDFFEJOHTPG$)*, Vienna, Austria, April 2004.Lyons, K., Gane, B., and Starner, T., Experimental evaluations of the Twiddler one-handed chording mobile keyboard, )VNBO$PNQVUFS *OUFSBDUJPO 21(4): 343‚Äì392, 2006.Polastre, J., Szewczyk, R., Sharp, C., and Culler, D., /T_he Mote revolution: Low power wireless sensor network devices, Hot Chips 16: A Symposium on High Performance Chips, August 22‚Äì24, 2004.Priyantha, N. B., Chakraborty, A., and Balakrishnan, H., /T_he cricket location- support system, 1SPDFFEJOHTPGUIF4JYUI"OOVBM"$.*OUFSOBUJPOBM$POGFSFODFPO.PCJMF$PNQVUJOHBOE/FUXPSLJOH.PCJ$PN, August 2000.Schilit, B., Adams, N., and Want, R., Context-aware computing applications, 'JSTU"OOVBM8PSLTIPQPO.PCJMF$PNQVUJOH4ZTUFNTBOE"QQMJDBUJPOT	8.$4"
, Santa Cruz, December 1994.Siewiorek, D., Smailagic, A., and Starner, T., Application design for wearable comput-ing, .PSHBO$MBZQPPM4ZOUIFTJT-FDUVSFTPO.PCJMFBOE1FSWBTJWF$PNQVUJOH, 2008, 66 pages.
93606_Book.indb   348/26/09   1:38:33 PM An Introduction to Ubiquitous Computing  /UIstop  35Truman, T. E., Pering, T., Doering, R., and Brodersen, R. W ., /T_he InfoPad mul-timedia terminal: A portable device for wireless information access, *&&&5SBOTBDUJPOTPO$PNQVUFST 47(10): 1073‚Äì1087, 1998.Want, R., Hopper, A., Falcao, V ., and Gibbons, J., /T_he Active Badge location system, "$.5SBOTBDUJPOTPO0Ô¨ÉcF*OGPSNBUJPO4ZTUFNT	50*4
 10(1): 91‚Äì102, 1992.Want, R., Schilit, B., Adams, N., Gold, R., Goldberg, D., Petersen, K., Ellis, J., and Weiser, M., An overview of the Parctab ubiquitous computing experiment, *&&&1FSTPOBM$PNNVOJDBUJPOT 2(6): 28‚Äì43, 1995.Want, R., Fishkin, K., Harrison, B., and Gujar, A., Bridging real and virtual worlds with electronic tags, 1SPDFFEJOHTPG"$.4*($)*, Pittsburgh, May 1999, pp. 370‚Äì377.Want, R., Pering, T., Danneels, G., Kumar, M., Sundar, M., and Light, J., /T_he personal server: Changing the way we think about ubiquitous computing, 1SPDFFEJOHTPG6CJDPNQUI*OUFSOBUJPOBM$POGFSFODFPO6CJRVJUPVT$PNQVUJOH4QSJOHFS-/$4, Goteborg, Sweden, September 30‚ÄìOctober 2, 2002, pp. 194‚Äì209.Weiser, M., /T_he computer for the 21st centur y, 4DJFOUJ“áD"NFSJDBO 265(3): 94‚Äì104, 1991.Weiser, M., Hot topics: Ubiquitous computing, *&&&$PNQVUFS 26(10): 71‚Äì72, 1993a.Weiser, M., Some computer science issues in ubiquitous computing, $PNNVOJDBUJPOTPGUIF"$. 36(7): 75‚Äì84, 1993b.Weiser, M., /T_he world is not a desktop, *OUFSBDUJPOT 1(1): 7‚Äì8, 1994.Weiser, M., and Seely-Brown, J., /T_he coming age of calm technology, in #FZPOE$BMDVMBUJPn: /T_hF/FYU'J/f_ty YFBST, Copernicus, pp. 75‚Äì85, 1997.
93606_Book.indb   358/26/09   1:38:33 PM 93606_Book.indb   368/26/09   1:38:33 PM 2CHAPTER Ubiquitous Computing SystemsJakob Bardram and Adrian FridayCONTENTS2.1 Introduction 382.2 Ubicomp Systems Topics and Challenges 412.2.1 Resource-Constrained Devices 422.2.2 Volatile Execution Environments 432.2.3 Heterogeneous Execution Environments 442.2.4 Fluctuating Usage Environments 452.2.5 Invisible Computing 482.2.6 Security and Privacy 492.2.7 Summary 512.3 Creating Ubicomp Systems 512.3.1 Why Build Ubicomp Systems? 512.3.2 Setting Your Objectives 522.3.2.1 Testing Your Ideas 532.3.3 Designing ‚ÄúGood‚Äù Systems 542.3.3.1 Computational Knowledge of the Physical World 542.3.3.2 Seamfulness, Sensibility, and Tolerant Ignorance 562.3.3.3 User Mental Model and Responsibility 582.3.3.4 It Is Always Runtime 602.3.3.5 Handling Transient Connections 60
93606_Book.indb   378/26/09   1:38:34 PM 38  /UIstop  Jakob Bardram and Adrian Friday
2.1  INTRODUCTION/T_he prevalent computing paradigm is designed for personal informa-tion management, including personal computers (PCs) such as desktops and laptops with /f_ixed con/f_igurations of mouse, keyboard, and monitor; wired local area network; dedicated network services with /f_ixed network addresses and locations, such as printers and /f_ile servers; and a user inter-face consisting of on-screen representation and manipulation of /f_iles, 2.3.3.6 /T_he State of the World 612.3.3.7 Is It Working? 632.3.4 Summary 642.4 Implementing Ubicomp Systems 642.4.1 Choosing ‚ÄúOÔ¨Ä-the-Shelf‚Äù Components 642.4.2 Deploying Ubicomp Systems 672.4.2.1 Expect the Unexpected 732.4.3 Summary 742.5 Evaluating and Documenting Ubicomp Systems 742.5.1 Evaluating Ubicomp Systems 742.5.1.1 Simulation 752.5.1.2 Proof-of-Concept 762.5.1.3 Implementing and Evaluating Applications 772.5.1.4 Releasing and Maintaining Ubicomp Systems 792.5.2 Learning from What You Build 792.5.2.1 Communicating Your Findings 802.5.2.2 Rigor and Scienti/f_ic Communication 812.5.3 Documenting Ubicomp Systems 812.5.4 Corollary 832.6 Getting Started 832.6.1 Prototyping Your Ideas 842.6.2 Smart Room in a Box 852.6.3 Public Domain Toolkits 862.6.3.1 Vision and Augmented Reality 862.6.3.2 Sensing 862.6.3.3 Hardware 872.6.4 Datasets 872.6.5 Summary 882.7 Conclusion 88References 89
93606_Book.indb   388/26/09   1:38:34 PM Ubiquitous Computing Systems  /UIstop  39documents, and applications through established metaphors such as the mouse pointer, icons, menus, and windows.Ubiquitous computing (ubicomp) strives at creating a completely new par-adigm of computing environment in almost all of these respects. Ubicomp systems aim for a heterogeneous set of devices, including invisible comput-ers embedded in everyday objects such as cars and furniture, mobile devices such as personal digital assistants (PDAs) and smart phones, personal devices such as laptops, and very large devices such as wall-sized displays and table-top computers situated in the environments and buildings we inhabit. All these devices have diÔ¨Äerent operating systems, networking interfaces, input capabilities, and displays. Some are designed for end user interaction‚Äîsuch as a public display in a cafeteria area‚Äîwhereas other devices, such as sensors, are not used directly by end users. /T_he interaction mode goes beyond the one-to-one model prevalent for PCs, to a many-to-many model where the same person uses multiple devices, and several persons may use the same device. Interaction may be implicit, invisible, or through sensing natural interac-tions such as speech, gesture, or presence: a wide range of sensors is required, both sensors built into the devices as well as sensors embedded in the envi-ronment. Location tracking devices, cameras, and three-dimensional (3-D) accelerometers can be used to detect who is in a place and deduce what they are doing. /T_his information may be used to provide the user with informa-tion relevant in a speci/f_ic location or help them adapt their device to a local environment or the local environment to them. Networking is o/f_ten wireless and ad hoc in the sense that many devices come in contact with each other spontaneously and communicate to establish services, when they depart, the network setup changes for both the device and the environment.Ubicomp environments involving technologies such as the ones described above have been created for a number of application domains, including meeting rooms (also known as TNBSUSPPNT), classrooms, cars, hospitals, the home, traveling, and museums. In order to get a feeling of what ubicomp systems would look like, let us consider some examples from a future hospital (Bardram et al., 2006). Doctors and nurses seamlessly move around inside the hospital using both personal portable displays (e.g., a super lightweight tablet PC) as well the large multitouch displays avail-able on many walls inside the wards, conference rooms, operating rooms, and emergency departments. Indoor location tracking helps in keeping track of clinicians, patients, and equipment, as well as assisting the clini-cians and patient with location- and context-dependent information. For example, the patient is constantly guided to the right examination room, 
93606_Book.indb   398/26/09   1:38:34 PM 40  /UIstop  Jakob Bardram and Adrian Fridayand on the doctor‚Äôs portable devices, relevant information on the nearby patient is fetched from the central servers and presented according to the doctor‚Äôs preference on this speci/f_ic type of devices. If he needs more display space, he simply drops the portable display in a recharge station, and moves to a wall display where the information is transferred. In the conference room, the large conference table is one large display surface that allows for colocated collaboration among the participating physicians. /T_he location tracking system as well as biometric sensors keep track of who is access-ing medical data, and prevents nonauthorized access. Unique identi/f_ication tags and medical body sensor networks attached to patients as well as to the patient‚Äôs bed and other equipment inside, for example, the operating rooms, constantly monitor the patient and provide a high degree of patient safety. Not only are critical medical data such as pulse, electrocardiogram (ECG), and heart rate monitored, but also more mundane safety hazards such as wrong side surgery and lack of relevant instruments are constantly monitored and warnings issued if the ‚Äúsystem‚Äù detects potential problems.Ubicomp systems research is concerned with the underlying tech-nologies and infrastructures that enable the creation and deployment of these types of ubicomp applications. Hence, ubicomp systems research addresses a wide range of questions such as: how to design hardware for sensor platforms, operating systems for such sensor platforms; how to allow devices to /f_ind each other and use the services on each other; how to design systems support for resource impoverished devices that run on batteries and need to save energy; how to run large distributed infrastruc-tures for seamless mobility and collaboration in creating applications for such settings as smart rooms and hospitals; and a wide range of other sys-tems aspects. To some degree, ubicomp systems questions and challenges overlap and coexist with other systems research questions, but as outlined in this chapter, the ubicomp vision and the nature of ubicomp applica-tions, present a unique set of challenges to ubicomp systems research./T_he chapter commences with a discussion of the key topics and chal-lenges facing ubicomp systems, highlighting assumptions that are o/f_ten made in traditional systems thinking that are unreliable in this problem domain. /T_hen, design rationale and process for creating ‚Äúgood‚Äù ubicomp systems is explored, leading to advice on how to choose hardware and so/f_tware components well and consolidated tips on what to look for when deploying ubicomp systems ‚Äúin the wild.‚Äù /T_he chapter goes on to discuss the process of evaluating and documenting ubicomp systems‚Äîessential if the system is to be of any importance in moving the /f_ield forward. Finally, 
93606_Book.indb   408/26/09   1:38:34 PM Ubiquitous Computing Systems  /UIstop  41the chapter concludes with pointers to available so/f_tware and hardware components and datasets that can help you bootstrap your experimental systems development.Building ubicomp systems is essential to the progress of the /f_ield as a whole. Experimentally prototyping ubicomp systems enables us to expe-rience them, discover what they are like to use, and reason about core precepts such as the boundaries of the system, its invisibility, the role of its users, and the degree of arti/f_icial intelligence endemic to it. By implement-ing systems, we discover what comprises ubicomp systems, what is and is not computationally tractable, form hypotheses to be tested, and uncover the research challenges that underpin and inform the evolving vision of ubicomp itself.Based on the notion that ‚Äúforewarned is forearmed,‚Äù the aim of this chapter is to oÔ¨Äer advice to those planning to create ubicomp systems to sensitize them to the issues that may face them in the design, implementa-tion, deployment, and evaluation stages of their projects. We ground this advice both in the literature and with reference to direct experience of researchers who have created and deployed in/f_luential ubicomp systems over the past decade or so. Armed with this knowledge, it is our profound hope that you will be able to more quickly design, build, deploy, and evalu-ate your ubicomp system, and that you will able to communicate your /f_indings concisely and eÔ¨Äectively to the community, and thereby contrib-uting to moving the science of ubicomp systems development forward.2.2  UBICOMP SYSTEMS TOPICS AND CHALLENGESCreating ubicomp systems entails a wide range of technical research top-ics and challenges. Compared to existing systems research, some of these topics and challenges are new and arise because of the intention to build ubicomp applications. For example, ubicomp applications o/f_ten involve scenarios where devices, network, and so/f_tware components change fre-quently. /T_he challenges associated with such extremely volatile executing environments are new to systems research (Coulouris et al., 2005). /T_hese kinds of challenges are introduced because we intend to build new com-puting technology that is deployed and runs in completely new types of physical and computational environments. Other topics and challenges existed before ubicomp but are signi/f_icantly aggravated in a ubicomp set-ting. For example, new challenges to security arise because trust is lowered in volatile systems; spontaneous interaction between devices o/f_ten imply 
93606_Book.indb   418/26/09   1:38:34 PM 42  /UIstop  Jakob Bardram and Adrian Fridaythat they have little, if any, prior knowledge of each other, and may not have a trusted third party in common./T_his section will take a closer look at some of the more signi/f_icant topics and challenges to ubicomp systems research.2.2.1  Resource-Constrained Devices/T_he /f_irst‚Äîand perhaps most visible‚Äîchallenge to most ubicomp applica-tions and systems is that they involve devices with limited resources. Due to Moore‚Äôs law, we have been used to ever-increasing CPU speed, memory, and network bandwidth in servers and desktop computers. With ubicomp, however, a wide range of new devices are built and introduced, which are much more resource-constrained. Devices such as PDAs, mobile phones, and music players have limited CPU, memory, and network connectivity compared to a standard PC, and embedded platforms such as sensor net-works and smart cards are very limited compared to a PC or even a smart phone. Hence, when creating systems support in a ubicomp setting, it is important to recognize the constraints of the target devices, and to recog-nize that hardware platforms are highly heterogeneous and incompatible with respect to hardware speci/f_ications, operating system, input/output capabilities, network, etc.3FTPVSDFBXBSF DPNQVUJOH is an approach to develop technologies where the application is constantly noti/f_ied about the consumption of vital resources, and can help the application (or the user) to take a deci-sion based on available resources now and in the future. For example, video streaming will be adjusted to available bandwidth and battery level (Garlan et al., 2002), or the user may be asked to go to an area with better wireless local area network coverage.Generally speaking, the most limiting factor of most ubicomp devices is energy. A device that is portable or embedded into the physical world typi-cally runs on batteries, and the smaller and lighter the device needs to be, the lower its battery capacity. For this reason, one of the main hardware constraints to consider when building ubicomp systems and applications is power consumption and/or opportunities for energy harvesting‚Äî including recharging. A central research theme within ubicomp is QPXFSGPSBHJOH, that is, technologies for harvesting power in the environment based on, for example, kinetic energy from a walking person. $ZCFSGPSBHJOH is a similar research theme where devices look for places to oÔ¨Ñoad resource-intensive tasks (Balan et al., 2002). For example, a portable device may oÔ¨Ñoad computations to server-based services, or if the user tries to 
93606_Book.indb   428/26/09   1:38:34 PM Ubiquitous Computing Systems  /UIstop  43print a document located on a /f_ile server from a PDA, the document is not /f_irst send to the PDA and then to the printer, but instead sent directly from the /f_ile server to the printer (Kindberg et al., 2002).$PNQVUBUJPOBDDFTTJOHNFNPSZBOEJOQVUPVUQVUBMMDPOTVNFFOFSHZ. /T_he major drain on the battery is, however, wireless communication, which is also typical for mobile or embedded ubicomp devices. Power consump-tion in wireless communication is hence another major topic in ubicomp systems research, investigating resource-eÔ¨Écient networking protocols that limit power consumption due to transmitting data, while maintain-ing a high degree of throughput and reliability. For example, since pro-cessing consumes much less power than communication, mobile ad hoc sensor networks (MANETs) seek to do as much in-network processing as possible, that is, ensuring that nodes in a sensor network perform tasks such as aggregating or averaging values from nearby nodes, and /f_iltering before transmitting values.2.2.2  Volatile Execution EnvironmentsA core research topic in ubicomp systems research is TFSWJDFEJTDPWFSZ, that is, technologies and standards that enable devices to discover each other, set up communication links, and start using each others‚Äô services. For example, when a portable device enters a smart room, it may want to discover and use nearby resources such as public displays and printers. Several service dis-covery technologies have now matured and are in daily use in thousands of devices. /T_hese include Jini, UPnP, Bonjour/multicast DNS (mDNS), and the Bluetooth discovery protocol. Nevertheless, several challenges to existing approaches still exist, including the lack of support for multicast discovery beyond local area networks, the lack of support beyond one-to-one device/service pairing, and rather cumbersome methods for pairing devices, o/f_ten involving typing in personal identi/f_ication numbers or passwords. Research is ongoing to improve upon service discovery technologies.Ubicomp systems and applications are o/f_ten distributed; they entail inter-action between diÔ¨Äerent devices‚Äîmobile, embedded, or server-based‚Äîand use diÔ¨Äerent networking capabilities. Looking at ubicomp from this distrib-uted computing perspective, a fundamental challenge to ubicomp systems is their volatile nature (Coulouris et al., 2005). /T_he set of users, devices, hardware, so/f_tware, and operating systems in ubicomp systems is highly dynamic and changes frequently.One type of volatility arises because of the spontaneous nature of many ubicomp systems; devices continuously connect and disconnect, and create 
93606_Book.indb   438/26/09   1:38:34 PM 44  /UIstop  Jakob Bardram and Adrian Fridayand destroy communications links. But because‚Äîfrom a communication perspective‚Äîthese devices may leave the room (or run out of battery) at any time, communication between the mobile devices and the services in the smart room needs to gracefully handle such disconnection.Another type of volatility arises due to changes in the underlying com-munication structure, such as topology, bandwidth, routing, and host naming. For example, in an ad hoc sensor network, the network topol-ogy and routing scheme is o/f_ten determined by nodes available at a given time, the physical proximity of the nodes in the network, their current workload, and battery status; in addition, this network routing scheme should be able to handle nodes entering and leaving the network. A sim-pler example arises in smart room applications where devices entering the room do not know the network name or addresses of the local services, and in this case services discovery would entail obtaining some network route to the service.Volatility arguably also exists in more traditional distributed systems; client so/f_tware running on laptops are being disconnected from their servers in a client-sever setup, and PDAs and cell phones whose battery is /f_lat are able to reconnect once recharged. /T_he main diÔ¨Äerence, however, is that unlike most traditional distributed systems, the connectivity changes are common rather than exceptional, and o/f_ten of a more basic nature. For example, in a client-server setup the server remains stable, and both the client and server maintain their network name and address. For these reasons, existing distributed computing mechanisms such as the Web (HTTP), remote procedure calls, and remote method invocation (Java RMI, .NET Remoting, or CORBA) all rely on stable network connections (sockets) and /f_ixed network naming schemes. In a ubicomp environment, these assumptions break down.2.2.3  Heterogeneous Execution EnvironmentsMost ubicomp applications and systems inherently live in a heteroge-neous environment. Ubicomp applications o/f_ten involve a wide range of hardware, network technology, operating systems, input/output capabili-ties, resources, sensors, etc., and in contrast to the traditional use of the term BQQMJDBUJPO, which typically refers to so/f_tware that resides on one‚Äîat most, two‚Äîphysical nodes, a ubicomp application typically spans several devices, which need to interact closely and in concert in order to make up the application. For instance, the Smart Room is an application that relies on several devices, services, communication links, so/f_tware components, 
93606_Book.indb   448/26/09   1:38:34 PM Ubiquitous Computing Systems  /UIstop  45and end user application, which needs to work in complete concert to ful/f_ill the overall functionality of a smart room. Hence, handling heterogeneity is not only a matter of being able to compile, build, and deploy an application on diÔ¨Äerent target platforms‚Äîsuch as building a desktop application to run on diÔ¨Äerent versions of Windows, Mac OS, and Linux. It is to a much larger degree a matter of continuously‚Äî that is, at SVOUJNF‚Äîbeing able to handle heterogeneous execution environments, and that diÔ¨Äerent parts of the ubicomp application run on devices with highly varying speci/f_ications. For example, when a user enters the smart room and wants to access the public display and print a document, this may involve a wide range of het-erogeneous devices, each with their speci/f_ic hardware, operating systems, networks interfaces, etc.; the user may be carrying a smart phone running Symbian; he may be detected by a location tracking system based on infra-red sensors on a Berkley Mote running the TinyOS; his laptop may use mDNS for device discovery, whereas the public display may be running Linux using the X protocol for sharing its display with nearby devices./T_he challenge of heterogeneity partly arises because ubicomp is a new research /f_ield and a new standard technology stack including hardware, operating system, etc., has yet to mature. In the above scenario, one could argue that the patchwork of technologies involved is overly complex and unnecessary. /T_his is partly true, and existing or new technology platforms may gradually be able to handle the ubicomp requirements in a more homogeneous and consistent manner. On the other hand, ubicomp appli-cations will always need to use diÔ¨Äerent kinds of technologies ranging from small, embedded sensors, to large public display and mobile hand-held devices. As such, heterogeneous hardware devices are a fundamental part of ubicomp applications, and the corresponding operating systems and so/f_tware stacks need to be speci/f_ically optimized to this hardware; the small sensor nodes need a so/f_tware stack optimized for their limited resources and the large display similarly needs a so/f_tware stack suited for sophisticated graphics and advanced input technologies./T_herefore, a core systems topic to ubicomp is to create base technologies that are able to handle such heterogeneity by balancing the need for opti-mizing for special-purpose hardware while trying to encapsulate some of the complexities in common standards and technologies.2.2.4  Fluctuating Usage Environments/T_he challenges discussed above are all concerned with issues relating to the execution environment of ubicomp applications. However, there is also a 
93606_Book.indb   458/26/09   1:38:35 PM 46  /UIstop  Jakob Bardram and Adrian Fridayset of challenges that, to a larger degree, are associated with the nature of ubicomp applications and how they are designed to be used.Contemporary computing is primarily targeted at information man-agement in the broadest sense. Users use PCs for information management locally or on servers; they engage in a one-to-one relationship with the PC; the physical use context is fairly stable and is o/f_ten tied to a horizontal surface such as an oÔ¨Éce desk or the dining table at home; the number and complexity of peripherals are limited and include well-known devices such as printers, external hard drives, cameras, and servers.Compared to this usage model, ubicomp applications and hence sys-tems live in a far more complicated and /f_luctuating usage environment. Users have not one but several personal devices, such as laptops, mobile phones, watches, etc. /T_he same device may be used by several users, such as the public display in the smart room or a smart blood pressure monitor in the patient ward of a hospital. Ubicomp systems need to support this many-to-many con/f_iguration between users and devices. Furthermore, compared to the desktop, the physical work setting in ubicomp exhibits a larger degree of alternation between many diÔ¨Äerent places and physical surroundings. Mobile devices mean that work can be carried around and done in diÔ¨Äerent places, and computers embedded into, for example, fur-niture that is constantly used by diÔ¨Äerent people. Finally, doing a task is no longer tied to one device such as the PC, but is now distributed across several heterogeneous devices as explained above. /T_his means that users need technology that helps them stay focused on a task without having to deal with the complexity of setting up devices, pairing them, moving data, ensuring connectivity, etc.A core research challenge to ubicomp is to create systems, technolo-gies, and platforms allowing the creation of applications that are able to handle such /f_luctuating usage environments. Special focus has, so far, been targeted at handling three types of /f_luctuation in usage environment: (1) changing location of users, (2) changing context of the computer, and (3) multiple activities (or tasks) of the users.Fluctuations related to diÔ¨Äerent location of the users arise once mobile devices are introduced. -PDBUJPOCBTFEDPNQVUJOH aims to create systems and applications that provide relevant information and services based on knowl-edge about the location of the user. For example, in the GUIDE (Cheverst et al., 2000) project, tourists were guided around historic sites by a location-aware tour guide, which automatically would present relevant descriptions based on the tourist‚Äôs location. Central to location-based systems research 
93606_Book.indb   468/26/09   1:38:35 PM Ubiquitous Computing Systems  /UIstop  47is the challenge of sensing the location of the user or device (o/f_ten treated synonymously although studies have shown that this can be a false assump-tion). A wide range of technologies already exist, such as global positioning systems (GPS). But because they all have their advantages and disadvantages, new location technologies are still emerging. Hightower and Borriello (2001) provide an older, but still relevant, overview of available location technolo-gies and their underlying sensing techniques. /T_he chapter on location tech-nologies in this book provides further background on this topic.$POUFYUBXBSFDPNQVUJOH aims at adapting the application or the com-puter in accordance with its changing context. ‚ÄúContext of the application‚Äù includes information about who is using the computer; who else is nearby; ambient information about the room, including light, sound, and tem-perature; physical materials and tools used; and other devices in a room. For example, a context-aware hospital bed having embedded computers, displays, and sensors can be built to react and adapt to what is happening in its proximity; it may recognize the patient in the bed; it may recognize clinical personnel approaching; it may bring up relevant medical infor-mation on the display for the clinicians; and it may issue a warning if the nurse is mistakenly trying to give the patient another patient‚Äôs medication (Bardram, 2004). /T_he context of a computer/device may change for two reasons: either the device moved to a new context (mobile device) or the physical context of an embedded computer changed because, for exam-ple, new people and devices entered a room. A core research challenge to ubicomp systems research is to investigate proper technical architec-tures, designs, and mechanisms for context sensing, modeling, aggrega-tion, /f_iltering, inferring, and reasoning; for context adaptation; and for distribution and noti/f_ication of context events. /T_he chapter on context-aware computing in this book provides more background and references on context-aware computing."DUJWJUZCBTFEDPNQVUJOH (ABC) (Bardram and Christensen, 2007) aims at handling /f_luctuations based on users‚Äô need for handling many concur-rent and collaborative activities or tasks. For example, in a hospital each clinician (doctor or nurse) is engaged in the treatment and care of sev-eral patients, each of whom may have a signi/f_icant amount of clinical data associated. For the clinician, it is associated with a substantial mental and practical overhead to switch between diÔ¨Äerent patients, because it involves using several devices, displays, and medical so/f_tware applications. /T_he ABC approach helps users manage the complexity of performing multiple activities in a complex, volatile, heterogeneous ubicomp systems setup 
93606_Book.indb   478/26/09   1:38:35 PM 48  /UIstop  Jakob Bardram and Adrian Fridayinvolving numerous devices in diÔ¨Äerent locations. Hence, focus is on sys-tems support for aggregating resources and services that are relevant to an activity; supporting those activities, and their associated resources, mov-ing seamlessly between multiple devices; supporting multiple users work-ing together on the same activity‚Äîpotentially using diÔ¨Äerent devices; supporting intelligent and semiautomatic generation and adaptation of activities according to changes in the work environment; and supporting the orchestration of multiple services, devices, and network setup to work optimally according to the users‚Äô changing activities.2.2.5  Invisible ComputingInvisible computing is central to the vision and usage scenarios of ubicomp, but handling and/or achieving invisibility is also a core challenge‚Äîfor example, having embedded sensor technology that monitors human behavior at home and provides intelligent control of heating, ventilation, air conditioning, and cooling (HVAC), or pervasive computing systems in hospitals that automatically ensure that patient monitoring equipment is matched with correct patient ID, and that sensor data are routed to the correct medical record. In many of these cases, the computers are invis-ible to the users in a double sense. First, the computers are embedded into buildings, furniture, medical devices, etc., and are as such physically invis-ible to the human eye. Second, the computers operate in the periphery of the users‚Äô attention and are hence mentally invisible (imperceptible).From a systems perspective, obtaining and handling invisible comput-ing is a fundamental change from traditional computing, because tradi-tional systems rely heavily on having the users‚Äô attention; users either use a computer (e.g., a PC or a server through a terminal or browser) or they do not use a computer. /T_his means, for example, that the system so/f_tware can rely on sending noti/f_ications and error messages to users, and expect them to react; it can ask for input in the contingency where the system needs feedback in order to decide on further actions; it can ask the user to install hardware and/or so/f_tware components; and it can ask the user to restart the device. Moving toward invisible computing, these assumptions completely break down.A wide range of systems research is addressing the challenges associ-ated with building and running invisible computers. "VUPOPNJDDPNQVUJOH (Kephart and Chess, 2003), for example, aims to develop computer systems capable of self-management, in order to overcome the rapidly growing complexity of computing systems management. Autonomic 
93606_Book.indb   488/26/09   1:38:35 PM Ubiquitous Computing Systems  /UIstop  49computing refers to the self-managing characteristics of distributed com-puting resources, adapting to unpredictable changes while hiding intrin-sic complexity for the users. An autonomic system makes decisions on its own, using high-level policies; it will constantly check and optimize its status and automatically adapt itself to changing conditions. Whereas autonomic computing is, to a large degree, conceived with centralized or cluster-based server architectures in mind, NVMUJBHFOUTZTUFNT research (Zambonelli et al., 2003) seeks to create so/f_tware agents that work on behalf of users while migrating around in the network onto diÔ¨Äerent devices. Agents are designed to ensure that lower-level systems issues are shielded from the user, thereby maintaining invisibility of the technology.Research on DPOUJOHFODZNBOBHFNFOU (Bardram and Schultz, 2004) seeks to prevent users from being involved in attending to errors and fail-ures. In contrast to traditional exception handling, which assumes that failures are exceptional, contingency management views failures as a nat-ural contingent part of running a ubicomp system. Hence, techniques for proactive management of failures and resource limitations need to be put into place. For example, oÔ¨Ä-loading an agent before a mobile device runs out of battery, and ensure proactive download of resources before leaving network coverage.A similar research topic is HSBDFGVMEFHSBEBUJPO, which addresses how the system responds to changes and, in particular, failures in the envi-ronment (Friday et al., 2005). Most existing technology assume the avail-ability of certain resources such as Internet connectivity and speci/f_ic servers to be present permanently. However, in situations where these resources are not available, the entire system may stop working. Real life demands systems that can cope with the lack of resources, or better still, systems should be able to adapt gracefully to these changes, preserving as much functionality as possible using the resources that are available.2.2.6  Security and PrivacySecurity and privacy is challenging to all computing. With ubicomp, how-ever, the security and privacy challenges are increased due to the vola-tile, spontaneous, heterogeneous, and invisible nature of ubicomp systems (particularly imperceptible monitoring).First, trust‚Äîthe basis for all security‚Äîis o/f_ten lowered in volatile sys-tems because the principals whose components interact spontaneously may have no a priori knowledge of each other and may not have a trusted third party. For example, a new device that enters a hospital cannot be 
93606_Book.indb   498/26/09   1:38:35 PM 50  /UIstop  Jakob Bardram and Adrian Fridaytrusted to be used for displaying or storing sensitive medical data, and making the necessary con/f_iguration may be an administrative overhead that would prevent any sort of spontaneous use. Hence, using the patient‚Äôs mobile phone may be diÔ¨Écult to set up.Second, conventional security protocols tend to make assumptions about devices and connectivity that o/f_ten do not hold in ubicomp systems. For example, portable devices can be more easily stolen and tampered with, and resource-constrained mobile or embedded devices do not have suÔ¨Écient computing resources for asymmetric public key cryptography. Moreover, security protocols cannot rely on continuous online access to a server, which makes it hard to issue and revoke certi/f_icates./T_hird, the nature of ubicomp systems creates the need for a new type of security based on location and context; service authentication and autho-rization may be based on location and not the user. For example, people entering a cafe may be allowed to use the cafe‚Äôs printer. In this case, if a device wants to use the cafe‚Äôs printer, it needs to verify that this device indeed is inside the cafe. In other words, it does not matter who uses the printer, the cafe cares only about where the user is (Kindberg and Fox, 2002).Fourth, new privacy challenges emerge in ubicomp systems (Langheinrich, 2001). By introducing sensor technology, ubicomp sys-tems may gather extensive data on users including information on loca-tion, activity, who people are with, speech, video, and biological data. And if these systems are invisible in the environment, people may not even notice that data are being collected about them. Hence, designing appro-priate privacy protection mechanisms is central to ubicomp research. A key challenge is to manage that users‚Äîwittingly or unwittingly‚Äîpro-vide numerous identi/f_iers to the environment while moving around and using services. /T_hese identi/f_iers include networking IDs such as MAC, Bluetooth, and IP addresses; usernames; IDs of tags such as RFID tags; and payment IDs such as credit card numbers. Chapter 3 examines some of these challenges in more detail.Fi/f_th, the usage scenarios of ubicomp also set up new challenges for security. /T_he /f_luctuating usage environment means that numerous devices and users continuously create new associations, and if all or some of these associations need to be secured, this means that device and user authenti-cation happens very o/f_ten. Existing user authentication mechanisms are, to a large degree, designed for few (1‚Äì2) and long-lived (hours) associations between a user and a device or service. For example, a user typically logs 
93606_Book.indb   508/26/09   1:38:35 PM Ubiquitous Computing Systems  /UIstop  51into a PC and uses it for the whole workday. In a ubicomp scenario, where a user may enter a smart room and use tens of devices and services in a relatively short period (minutes), traditional user authentication using, for example, usernames and passwords is simply not feasible. Moreover, if the devices are embedded or invisible, it may be diÔ¨Écult and awkward to authenticate yourself‚Äîshould we, for example, log into our refrigerator, a shared public display, and the HVAC controller in our homes?All in all, a wide range of fundamental challenges exists in creating security and privacy mechanisms that adequately takes into concern the technical as well as the usage challenges of ubicomp systems.2.2.7  Summary/T_his section discusses many of the core challenges that are endemic to ubi-comp and hence, in a supporting role, ubicomp systems research. /T_hese include coping with impoverished and resource-constrained devices, energy harvesting and usage optimization, environmental and situational volatility, heterogeneity and asymmetry of device capabilities, adapting to dynamic and /f_luctuating execution environments, invisibility and its implications for ubicomp systems, and privacy/security challenges. /T_he next section will look at the process of designing systems to meet some of these challenges.2.3  CREATING UBICOMP SYSTEMSBuilding, deploying, and maintaining ubicomp systems require consid-erable and sustained eÔ¨Äort. You should think carefully before you start building, about why you are building it, what you hope to learn, and what is going to happen to it in the future. Making good design decisions and being pragmatic about your objectives early on can save you enormous amounts of potentially unrewarding eÔ¨Äort later on. Understanding why you are building a system can help you think more strategically about how to achieve the impact you desire or answer your research question more expediently. /T_his section highlights key reasons to build ubicomp systems, best practices for developing systems, and common issues and pitfalls fac-ing ubicomp systems developers.2.3.1  Why Build Ubicomp Systems?/T_here are many reasons to build ubicomp systems. What you hope to do with the system, who the intended users are (both technically as develop-ers and in terms of user experience), and the planned longevity should 
93606_Book.indb   518/26/09   1:38:35 PM 52  /UIstop  Jakob Bardram and Adrian Fridayshape the design and implementation decisions for the project. Possible targets for ubicomp systems research includePrototyping future systems to explore ubiquity in practicetEmpirical exploration of user reactions to ubicomptGathering datasets to tackle computational problems relating to tubicompCreating ubicomp experiences for public engagement or performancetCreating research test beds to agglomerate activity and stimulate tfurther researchTo explore a hypothesis concerning ubicomp more naturalisticallytTo test the limits of computational technologies in a ubicomp settingtAddressing the perceived needs of a problem domain or pressing tsocietal issue2.3.2  Setting Your ObjectivesHow one goes about achieving these objectives eÔ¨Äectively should naturally impact how you undertake the research. It is important to consider where you will place your engineering eÔ¨Äort and, importantly, whether parts of the problem need to be fully implemented and indeed are reasonable com-putationally to achieve the outcome you desire. For example, a small-scale study to test how users react to context-aware systems would require con-siderable eÔ¨Äort to achieve suÔ¨Éciently reliable context determination auto-matically, whereas emulating the context determination using ‚ÄúWizard of Oz‚Äù techniques may be adequate to gain the results and far easier to engineer. Conversely, a system that is intended to run for a long time unat-tended (research test bed, smart room infrastructure) will need a much stronger focus on robust design and defensive programming if it is to sur-vive without a high degree of attention and support. It is important to realize that some parts of your system will require considerable eÔ¨Äort to achieve, but may not in themselves lead directly to novel results. /T_he trick is to keep one eye on your objective to ensure that your focus never entirely shi/f_ts from the goals of the project, ensuring that your eÔ¨Äorts are rewarded.Naturally, some /f_lexibility is required because the goals of your system may shi/f_t over time. An initial prototypical exploration may uncover an 
93606_Book.indb   528/26/09   1:38:36 PM Ubiquitous Computing Systems  /UIstop  53
interesting ubicomp problem to solve or hypothesis to test. A project whose initial focus is public engagement may uncover a rationale for wider ubi-comp systems design that may lead to further exploration and more focused empirical studies. /T_his is a natural and intended consequence of the scien-ti/f_ic exploration of the ubicomp problem space (Figure 2.1), which has two key consequences: (1) that you remain suÔ¨Éciently aware and agile to recog-nize such changes and plan for them consciously and (2) that the important lessons from your exploration are communicated eÔ¨Äectively to the commu-nity. How to achieve this last point is discussed further in Section 2.5.2.3.2.1  Testing Your IdeasHaving established the context of your system and its objectives, it is com-mon sense not to rush into the design phase without /f_irst testing and re/f_in-ing your ideas. /T_here are many possible approaches with various time and eÔ¨Äort implications, for example, one might create the following:Low-/f_idelity prototypes, which can be simple scenarios that can be tdiscussed, paper prototypes, or even models of devices or graphical storyboards of proposed interactions‚Äîanything that can add rich-ness to the discussion of the system with potential users.
HypothesisPredictionSystem DesignImplementationExperimentEvaluationIdeaObservation
FIGURE 2.1 Compare scienti/f_ic method (on the le/f_t) with the role of experi-mentation in ubicomp system design (right) (paraphrased from Feitelson, 2005). As one experiment may enable a hypothesis to be re/f_ined leading to further experiments cyclically, so a system design may lead to another and be iteratively re/f_ined. Importantly, developing and evaluating a system may uncover a hypothesis that can be experimentally tested, and vice versa.
93606_Book.indb   538/26/09   1:38:37 PM 54  /UIstop  Jakob Bardram and Adrian FridayVideo prototypes, although considerably requiring more eÔ¨Äort to tcreate, can communicate the concepts in the system quite eÔ¨Äectively and act as a useful reference for explaining the system later on.Rapid prototypes of user interfaces using prototyping toolkits (see tSection 2.6) can aÔ¨Äord a more realistic synthesis of the intended user experience.‚ÄúWizard of Oz‚Äù prototypes of parts of the system may allow the /f_inal tbehavior of the system to be emulated and thus experienced by others.In general, the more labor-intensive options are only really worth investing in if the project itself is a signi/f_icantly larger undertaking or there is additional value to having the prototypes or associated media. One of the cheapest and lightest weight mechanisms is simply to present the proposed system to someone else to gain informal feedback. If they /f_ind the idea entirely preposterous or can see obvious signi/f_icant /f_laws, it is certainly worth revisiting your scenario. /T_his works best if the person is not a member of the project team!2.3.3  Designing ‚ÄúGood‚Äù SystemsOnce you have decided on your system‚Äôs objectives and are happy with your ideas, the next challenge is to design a system that is /f_it for its pur-pose. /T_here are many important concerns unique to ubicomp that you should consider in your design.2.3.3.1  Computational Knowledge of the Physical WorldFrom a systems design perspective, it is far from clear what the interfaces and internals of a ubicomp system should be, necessitating an experimen-tal approach. In his much-venerated article in 4DJFOUJ“áD"NFSJDBO (Weiser, 1991), Weiser espoused embedded virtuality and calm computing: the notion that computational devices were eÔ¨Äectively invisible to its users and that interfaces to such systems were through entirely natural, sensor-driven, and tactile interactions. Arguably, such systems almost empathi-cally support the user in their daily tasks, requiring a high degree of knowledge about the user‚Äôs desires and intents‚Äîin some cases, Arti/f_icial Intelligence. Only recently have we begun to see researchers challenge some of these precepts and explore other possible visions of ubicomp (e.g., Rogers, 2006). As a discipline, it is important that we continue to explore 
93606_Book.indb   548/26/09   1:38:37 PM Ubiquitous Computing Systems  /UIstop  55the boundary between ‚Äúthe system‚Äù and ‚Äúthe user‚Äù to /f_ind the balance points for computational tractability and eÔ¨Äective user support.A key challenge for ubicomp systems designers then, is to consider the ‚Äúbarrier‚Äù between the physical world and virtual (computational) world. Unlike conventional so/f_tware applications, interfaces to ubicomp systems are o/f_ten distributed, may have many forms of input and output involving several devices, and o/f_ten incorporate subtle, oblique forms of interaction involving hidden or ambient sensors and displays. In their in/f_luential arti-cle, Fox and Kindberg (2002) encapsulate the divide between the respon-sibilities of the system and the user as the ‚Äúsemantic rubicon‚Äù: ‚Äú[that] demarcates responsibility for decision making between the system and the user.‚Äù More speci/f_ically, in terms of system design, crossing the semantic rubicon implies de/f_ining the knowledge the system can have of the physi-cal world and of user(s) behavior, that is, through sensing and user inter-action; the counterpart, that is, the knowledge the user has of the system and how they might in/f_luence it; and the mechanisms and permissible interactions for one to in/f_luence the other.As a system designer, you must decide what knowledge your system will need about the real world to function, how it will get into the system, how to represent it, how this state will be maintained, and what to do if it is incorrect. Unless this knowledge is easy to sense, or trivial to reason with, then you must also decide what the implications are if the knowl-edge is imperfect or conclusions are erroneously reached. /T_here is clearly a signi/f_icant diÔ¨Äerence in implication if the outcome of misconstruing the user‚Äôs situation while laying still is to call the emergency services rather than dim the lighting! Designing when to involve the user with decisions, or in the context of the semantic rubicon, when the decision of the system becomes the decision of the user, may well be crucial to the acceptability of the system or its /f_it to its task, especially in sensitive or deployed settings.Key questions you should ask yourself are 1. What can be reliably sensed 2. What can be reliably known? 3. What can be reliably inferred?/T_he degree to which you can answer these questions for the intended function of your system will help determine the feasible scope, or set some of the research challenges.
93606_Book.indb   558/26/09   1:38:37 PM 56  /UIstop  Jakob Bardram and Adrian Friday2.3.3.2  Seamfulness, Sensibility, and Tolerant Ignorance/T_here are clearly limits to what your system can know about the physical world and the people who inhabit it. Sensors have innate properties due to their construction and the underlying physics that governs how well they sense. /T_hey may not be optimally placed or suÔ¨Éciently densely deployed to cover the area or activity that you wish to detect. High-level sensors, such as location systems, have complex behaviors governed by properties of the built environment and its associated ‚Äúradio visibility‚Äù‚Äîthese are time varying properties that also signi/f_icantly depend on where they are used. /T_he activity you wish to observe may simply be challenging to detect due to its subtlety, or diÔ¨Écult to isolate from other activities, noise, or the concurrent activities of other people. /T_here is also the question of the reli-ability of what is sensed in the presence of partial or total sensor failure (e.g., erroneous sensor readings may be misinterpreted as activity)./T_his was once articulated as the challenge of designing systems that exhibit ‚Äútolerance for ignorance‚Äù (Friday et al., 2005). Although it is cer-tainly challenging to consider how to build systems that continue to func-tion well in the face of ongoing indeterminacy and uncertainty, a /f_irst step is to consider the scope and boundaries to your system. In their paper, Chalmers et al. (2003) present ‚Äúseamful design,‚Äù the notion that the seams or the boundaries and inaccuracies of the system can be exploited as a resource for system designers. /T_hey consider the example of a location-based mixed reality game called ‚ÄúCan you see me now,‚Äù where runners physically on the streets attempt to catch online players virtually overlaid on the same space. /T_he runners (Figure 2.2) were tracked using GPS, and it quickly became apparent that the seams of the system‚Äîin this case, the ability to track the runners‚Äîwas having an impact on the game play: ‚Äúanalysis of system logs shows estimated GPS errors ranged from 4 meters to 106 meters, with a mean of 12.4 meters. Error varied according to position in the game area, with some of the more open spaces exhibiting typically only a few meters error while the more narrow built‚Äìup streets suÔ¨Äered considerably more‚Äù (Chalmers et al., 2003).Over the 2 days, the runners had time to talk with each other and develop tactics, as exempli/f_ied in this quote:Crew: What de/f_ines a good place to catch them?Runner: A big open space, with good GPS coverage, where you can get quick update because then every move you make is updated when you‚Äôre heading toward them; because one of the problems is, 
93606_Book.indb   568/26/09   1:38:37 PM Ubiquitous Computing Systems  /UIstop  57
if you‚Äôre running toward them and you‚Äôre in a place where it slowly updates, you jump past them, and that‚Äôs really frustrating. So you‚Äôve got to worry about the GPS as much as catching them./parenleft.capFLINTHAM ET AL., 2003/parenright.capIn this case, awareness of the limitations and characteristics of the sys-tem allowed the longer-term players (the runners) to improve their ability to play (use the system). /T_his raises the design issue of how far to go toward exposing the seams of the system. As reported by Chalmers et al. (2003), Benford is quoted as proposing four strategies for presenting information to the user:Pessimistic: Only show information that is known to be correcttOptimistic: Show everything as if it were correcttCautious: Explicitly present uncertaintytOpportunistic: Exploit uncertainty (cf. Gaver et al., 2003)t
FIGURE 2.2 A runner tracked in physical space is speeding to catch an online player whose location in the virtual world is overlaid on the physi-cal environment. (‚ÄúCan You See Me Now.‚Äù Image copyright Blast /T_heory, 2001. Used with permission.)
93606_Book.indb   578/26/09   1:38:38 PM 58  /UIstop  Jakob Bardram and Adrian FridayOne might regard the pessimistic and optimistic approaches as being a ‚Äúmore traditional,‚Äù perhaps engineering-led approaches. It is very common to present a location of a user on a map as a dot, for example, although this does not typically communicate any underlying uncertainty or impreci-sion in the location estimate or may not even re/f_lect whether the system believes this to be the true location of the user (e.g., if no GPS satellites are in view, this may simply be a historic artifact). Adjusting the size or representation of such a dot to re/f_lect the con/f_idence in location would enable the user to develop a greater trust and understanding of the sys-tem. /T_he cautious approach is widely adopted on a typical mobile phone: the ‚Äúbars of signal strength‚Äù indicator provides an intuitive iconographic representation of underlying features of the system architecture, which is a resource for the phone user both to reason about the success of making a phone call but also a plausible social device for claiming they got cut oÔ¨Ä due to ‚Äúlow signal strength.‚Äù Cautious or even opportunistic ubicomp designs may oÔ¨Äer systems that are amenable to user comprehension or even appropriation.What can and cannot be sensed or its underlying seams may even be an opportunity for design. Benford et al. (2004) present some examples of physical ubicomp interfaces in the context of what is sensible, sensable, and desirable (Boucher et al., 2003). /T_his taxonomy helped the authors categorize uses of their devices, but also spot opportunities for other types of interaction with their devices that they had not originally foreseen.2.3.3.3  User Mental Model and Responsibility/T_he corollary of considering the semantic rubicon and seamfulness of your system is to carefully plan the role the user will play in the system‚Äôs operation. Ubicomp systems o/f_ten diÔ¨Äer signi/f_icantly in the degree of understanding and ‚Äúintelligence‚Äù they are intended to show toward the users‚Äô goals and desires. /T_here are a spectrum of design choices as to when to involve the user in sensing or understanding the physical world and in decision making or instigating actions. For example, at one end of the spectrum, we might consider a scenario where the system fully ‚Äúunder-stands‚Äù the user‚Äôs wants, and takes actions preemptively in anticipation of these (one can argue the degree and scope over which this is achievable). At the other extreme, perhaps more cautiously, we might design assuming no action is taken by the system without user assent, or where the user provides sensory input (e.g., con/f_irming the activity they are currently 
93606_Book.indb   588/26/09   1:38:38 PM Ubiquitous Computing Systems  /UIstop  59engaged in, although clearly this could quickly become tiresome). A com-promise position might involve partially automating to support the user‚Äôs perceived needs, but oÔ¨Äering the ability for the user to intervene to cancel or override the actions proposed by the system. A further approach might be adaptive: for example, using machine learning that starts by involving the user in decisions but learns from this, moving toward automation of common or consistently detected tasks (but, crucially, can move back to learning mode again if unreliable or undesirable!).To help consider where on this scale parts of your system might lie, consider:/T_he frequency or inconvenience of potential user involvementt/T_he severity or undesirability of the consequences if the system gets tit wrong/T_he reliability of detecting the appropriate moment and appropri-tate action/T_he acceptability to the user of automating the behaviortAs an example of how people can cooperate with ubicomp systems and supplement sensing capabilities, consider these two examples. In the GUIDE (Cheverst et al., 2000) context-aware tour guide system, city visi-tors could enter a dialogue with the system (involving selecting a series of photos of landmarks they could see from their position) to reorient the system when it was outside the scope of the wireless beacons used to determine location. /T_his extended the eÔ¨Äective range of the system with-out requiring the logistical and /f_inancial expense of adding additional microcells. Self-reported position was used very eÔ¨Äectively in ‚ÄúUncle Roy All Around You‚Äù (Benford et al., 2004), where players with mobile devices built up trust in unknown online players by choosing when and where to declare their position to the system to test and reaÔ¨Érm the advice being oÔ¨Äered to them. It would have clearly been possible to use GPS or cell /f_in-gerprinting to automate locating the players, but instead this became a key feature of the cooperation between online and mobile players. It is worth thinking about how the seams and possible limitations of your system can be used as a resource for design.A key question is, ‚ÄúWhat do you intend for the user to understand or perceive of the system in operation?‚Äù To grow comfortable with it, adopt 
93606_Book.indb   598/26/09   1:38:38 PM 60  /UIstop  Jakob Bardram and Adrian Fridayit, and potentially appropriate it, the user must be able to form a mental model of cause and eÔ¨Äect or a plausible rationale for its behavior. In more playful or artistic ubicomp systems this question may be deliberately pro-vocative or challenging, but this should still bene/f_it from being a conscious and designed behavior.2.3.3.4  It Is Always RuntimeUbicomp systems are composed of distributed, potentially disjoint, and partially connected elements (sensors, mobile devices, people, etc.). /T_he term ‚Äúpartially connected‚Äù here re/f_lects that these elements will o/f_ten not be reliably or continuously connected to each other; instead, the system is the product of spontaneous exchanges of information when elements come together. Clearly, interaction patterns and duration will vary with the design and ambition of any given system, but it is important to consider a key pre-cept: once deployed, all changes happen at runtime. In a system of any scale, you will typically not have simultaneous access to all the elements to (for example) upgrade them or restart them. /T_his has a number of implications: 1. Systems requiring a carefully contrived startup order are likely to fail. 2. If the availability of elements may be sporadic, your system should be able to gracefully handle disconnection and reconnection or rebind-ing to alternate services. 3. Assume that individual components may fail or be temporarily iso-lated (which is especially true of so/f_tware elements on mobile devices) and design your system accordingly so that state can be recovered. 4. Decide proactively how to handle data when an element is disconnected: are the data kept (e.g., buÔ¨Äered) until reconnection, and if so, how much will you buÔ¨Äer before discarding. What strategy will you choose to decide which data to keep or discard (oldest, freshest, resample, etc.)? 5. Consider including version information in protocols used in systems designed to run longitudinally to at least identify version mismatches.2.3.3.5  Handling Transient ConnectionsNetwork connections (or the lack or failure thereof) can have profound eÔ¨Äects on the performance of ubicomp systems and, crucially, the end user 
93606_Book.indb   608/26/09   1:38:38 PM Ubiquitous Computing Systems  /UIstop  61experience. /T_he eÔ¨Äects on unsuspecting so/f_tware throughout a device‚Äôs so/f_tware stack can be serious: network names stop being resolved, closed connections can lead to so/f_tware exceptions that stop portions of the code from executing, input/output system calls can block leading to stuck or frozen user interfaces. Considering what will happen if elements in the system that you are assuming to be always available‚Äîespecially if they are on the critical path in terms of system responsiveness‚Äîfail, will help you identify and ideally mitigate for these potential problems.When networks fail, it is common for data to be buÔ¨Äered and dropped at many levels in the protocol stack. In ubicomp, where data are o/f_ten sensor traces informing the system of important events relating to inter-actions in the world, this buÔ¨Äering can introduce an array of associ-ated problems. For example, old (buÔ¨Äered) data can be misleading if not timestamped and handled accordingly. Consider buÔ¨Äered GPS traces logged on a mobile device while the connection to the backend system is down: old locations can appear like current inaccuracy; the fast replay of buÔ¨Äered locations that normally occur 1 per second might look like you stopped then started moving very quickly and like lag if the replay is rate-paced or there is a perceptible latency in the system. Finally, your fresh data over a multiplexed interface will be behind the buÔ¨Äered data‚Äîa potentially serious delay can arise if the connection speed is low and the buÔ¨Äer large. If fresh data are due to user interaction, then the system will appear very unresponsive until the buÔ¨Äer is drained. It is very common for a frustrated user to try to interact multiple times or in many ways in the face of inexplicable delays in unresponsive interfaces, thereby exacerbat-ing the problem. /T_his is another good reason for revealing the connection status to the user using an appropriate metaphor (Cheverst et al., 2000; Satyanarayanan, 2001).2.3.3.6  The State of the WorldTransient connections and component failures have an impact on how consistent the state of your overall system will be. It is important to design in strategies for recovering from both of these cases. Parts of your system may be replicable or suÔ¨Éciently available to use well-known techniques to mask such failures and achieve some degree of fault tolerance. However, in many ubicomp systems, so/f_tware components are o/f_ten intimately linked to specialist or personal hardware, or may be placed in unique locations, which makes traditional techniques involving redundant replication or 
93606_Book.indb   618/26/09   1:38:38 PM 62  /UIstop  Jakob Bardram and Adrian Fridayfail-over inappropriate. In such systems, we need an alternative. Techniques that have been reported in the literature includeOptimistic replication of state, which allows partitioned elements tto continue to function while disconnected and then reconcile the journal of changes made oÔ¨Ñine upon reconnection (e.g., the CODA mobile /f_ile system [Kistler and Satyanarayanan, 1992] allowed opti-mistic writes to cached /f_iles while disconnected, which were then replayed upon reconnection).Converging on eventually consistent state. Bayou (Terry et al., 1995) tused gossip-style ‚Äúanti-entropy‚Äù sessions during user encounters to propagate updated state via social networking, converging on a /f_inal state (e.g., scheduling group meetings by exchanging possible times and availabilities and iterating toward an agreed option‚Äîtentative and committed state, in this case appointments, was re/f_lected to users in the user interface).Use of persistent stores or journals to allow recovery of state (locally tor remotely). A central database or state repository is o/f_ten used.Externalizing state (e.g., to a middleware platform, such as a Tuple tSpace), so that most components are lightweight and can recover state from the middleware (Borchers et al., 2002; Friday et al., 1999).Use of peer caches to replicate state for later repair. An on-demand tstate ‚Äúrepair‚Äù scheme (Floyd et al., 1997) was used in L2imbo (Friday et al., 1999), where peer replicas detect missing state by snooping for sequence numbers and asking neighbors to repair any missing data. Recursively, the system converges.Epidemic propagation of state using ‚Äúgossip‚Äù-style protocols (Demers tet al., 1987).Where data do not have to be communicated in real-time (i.e., nonin-teractive gathering or logging of data), they can, of course, be batched and exchanged according to some schedule or when the opportunity arises. It is o/f_ten surprising how quickly persistent data or event debug logs and application output can grow to /f_ill a (particularly embedded) device. For long-running systems, ensuring capacity by estimating growth based on the running system and considering housekeeping will help avoid unexpected problems when the device is full later on. Full disks lead to 
93606_Book.indb   628/26/09   1:38:39 PM Ubiquitous Computing Systems  /UIstop  63numerous problems with database integrity, virtual memory manage-ment, and consequent and typically unexpected system call failures.2.3.3.7  Is It Working?Debugging ubicomp systems is extremely challenging. Elements are o/f_ten distributed and may not be available or remotely accessible for debugging. In many cases, embedded elements may not have much, if any, user inter-face. A common requirement is to monitor the system‚Äôs output to check status messages or to be able to perform tests by injecting commands to emulate interactions and test components. Common strategies includeUse of conventional mechanisms such as log /f_iles and network packet ttracing to passively monitor running componentsIncluding status protocol messages that can be intercepted (o/f_ten as tperiodic heartbeat messages)Adding status displays including use of hardware such as LED blink tsequences, audible and visual feedbackIncluding diagnostic interfaces such as embedded web servers that tcan be interrogatedEnabling remote access to components such as remote shells, etc.tExternalizing of state or communications by using a middleware tsuch as a publish-subscribe event channel, Tuple Space, Message Oriented Middleware, etc.For example, iROS (Ponnekanti et al., 2003) used the ‚ÄúEventHeap‚Äù a derivation of the Tuple Space to pass all communications between elements of the Stanford Interactive Workspaces project (Figure 2.3). All commu-nication is observable, so liveness of a component is easy to establish. By injecting events manually, components could be tested. New applications and devices can be introduced that work with existing components by generating or using compatible events. Later, the behavior of the work-space could be changed at runtime by dynamically rewriting events to ‚Äúreplumb‚Äù the smart space. /T_he design based around a central EventHeap contributed to the longevity and adaptability of the project, enabling a number of interesting extensions and projects to be built upon the system over time. Naturally, the need to communicate via the central entity meant that the performance of the system was bounded by the performance over 
93606_Book.indb   638/26/09   1:38:39 PM 64  /UIstop  Jakob Bardram and Adrian Friday
the network to the EventHeap and load on this component, and dependent on its availability and robustness.2.3.4  SummaryDesigning good systems, by some metric such as elegance, robustness, extensibility, usability, or /f_itness for purpose, is extremely challenging and requires thoughtful design. /T_his section stressed the importance of /f_irst set-ting and being cognizant of your objectives, but also early testing of your ideas. Our second, but not secondary, focus is on important boundaries and thresholds between the system, its environment, and its users; encouraging purposeful and intentional designs with respect to system knowledge of the world, accuracy and dependability of sensing, tolerance to ambiguity, and the role of the users and their interplay with the system. Finally, the section dis-cusses important technical diÔ¨Äerences between ubicomp systems and many conventional system designs: volatility, transience of connectivity, handling of state and techniques for evolving, and debugging live ubicomp systems. /T_he next section turns to the important business of implementation.2.4  IMPLEMENTING UBICOMP SYSTEMS2.4.1  Choosing ‚ÄúOff-the-Shelf‚Äù ComponentsAs with any computer-based system, the design of your ubicomp system is just the /f_irst step in realizing it. /T_he design is o/f_ten re/f_ined as imple-mentation choices are made and their limits tested. Given the richness 
FIGURE 2.3 Stanford Interactive Workspaces Project (iWork).
93606_Book.indb   648/26/09   1:38:39 PM Ubiquitous Computing Systems  /UIstop  65and ambition of typical ubicomp systems and the typical development resources and timescales, pragmatic choices have to be made as to de/f_ine what you will build and what you will appropriate to construct your sys-tem. It is natural to seek third party components from hardware and so/f_t-ware vendors or, increasingly, from the public domain.A key challenge is balancing this expedient use of oÔ¨Ä-the-shelf hard-ware and so/f_tware against more bespoke solutions. Although the latter may oÔ¨Äer a better /f_it to the problem domain or intended deployment environ-ment than an oÔ¨Ä-the-shelf solution, it requires enormous eÔ¨Äort to develop new technologies that meet the functional, aesthetic, reliability, or time constraints of the project. Again, this is a choice best made in the context of your objectives (which may aim to explore the creation of novel devices).Building using proven components or implementations of standards may increase robustness or extend the range of functionality available to you more quickly, but there are also limitations to this approach that you should keep in mind when evaluating your choice: 1. You should not underestimate how much time can be spent in attempting to integrate disparate pieces of hardware and so/f_tware. 2. So/f_tware perhaps successful or designed for one domain will not necessarily confer similar bene/f_its to your domain. 3. /T_he chosen so/f_tware or hardware may place constraints on what you can build, or oÔ¨Äer far more functionality than you require (with implications on so/f_tware complexity and footprint). 4. Using proprietary hardware or so/f_tware may imply the need to work around features and limitations that are outside of your control. 5. Versatile toolkits, for all their tempting power and /f_lexibility, may intro-duce unneeded functionality and unwanted so/f_tware bloat (particularly problematic when working with embedded and mobile devices).Ask yourself critically whether the /f_lexibility is really needed and com-pare to other strategies, such as just taking parts of the toolkit in question or simply coding the portion you need.A hidden side eÔ¨Äect of using third party libraries is that they may introduce dependencies that are not easy to understand or are too tightly integrated into the tool you have chosen to be removed or replaced. In longer-lived sys-tems, the interdependencies between diÔ¨Äerent versions of libraries and the 
93606_Book.indb   658/26/09   1:38:39 PM 66  /UIstop  Jakob Bardram and Adrian Fridaylevel of skill and tacit knowledge required to update the system can become a particular burden. Do not forget that unknown systems may contain bugs or security vulnerabilities, or exhibit unwanted behavior. Because these are components that you do not necessarily fully understand, they may be dif-/f_icult to detect and may take time to /f_ix‚Äîa good justi/f_ication for building with components you can get the source code for!It is important not to ‚Äúlet the tail wag the dog,‚Äù that is, to consider care-fully whether the limitations or implications of accepting a constraint or technology are worth the compromise to your overall design. Recall the seamful design and role of the user design considerations discussed previously, and review carefully whether the perceived limitations can be embraced or taken advantage of in some way.("*"#VJMEJOHPOB4PMJE'PVOEBUJPOIn the GAIA, a meta-operating system for smart rooms (Figure 2.4) (Roman and Campbell, 2000), an industry quality CORBA middle-ware implementation was chosen as the core for the system. System components were implemented as distributed objects with CORBA IDL interfaces. /T_his implementation choice enabled the project to build on a reliable core and focus on developing the higher-level GAIA OS services. As new services for CORBA matured (event channels, Lua scripting), these features could be exploited to enrich 
FIGURE 2.4 GAIA meta-operating system integrated a wide range of situ-ated and mobile devices to oÔ¨Äer an interactive smart room.
93606_Book.indb   668/26/09   1:38:40 PM Ubiquitous Computing Systems  /UIstop  67the GAIA OS. /T_his implementation choice enabled the project team to focus their development eÔ¨Äort on higher-level services such as security and con/f_iguration management without worrying about object distribution and lifecycle management. An undesirable side eÔ¨Äect of the choice was the proprietary dependency it introduced, potentially limiting uptake by other sites that might otherwise have wished to adopt GAIA but did not want to accept the licensing implications. /T_here was also limited scope for optimizing the inter-connection and performance of the many objects and communica-tion channels underpinning each GAIA smart room application.$PPMUPXO: /T_hF1PXFSPGB8FMM$IPTFO1BSBEJHNHP‚Äôs Cooltown was a system to support nomadic computing by associating digital information and functionality with ‚Äúpeople, places and things‚Äù (Kindberg et al., 2002). An extremely versatile system, allowing both access to information and access to ser-vices, Cooltown was based on straightforward and elegant techni-cal choice: that people and artifacts could be tagged, and the tag resolved to a uniform resource identi/f_ier (URI) that linked to a web point of presence for the person or artifact in question. /T_he /f_lexible use of tags, decentralized resolvers, and the innate /f_lexibility in the design of URIs made the entire system extremely lightweight and extensible. Infrared beacons (Figure 2.5) broadcast URIs to mobile devices to link physical artifacts to digital information.In summary, paraphrasing Ockham‚Äôs razor: the implementation choice that makes the fewest assumptions and introduces the fewest dependen-cies without making a diÔ¨Äerence to the observable behavior of the system is usually the best.2.4.2  Deploying Ubicomp SystemsOne of the most valuable lessons to take from looking at successful ubicomp systems is the need to mature the system through actual use. Colloquially, by ‚Äúeating your own dog food,‚Äù or rather, deploying and using the system initially yourself (but ideally also with other users, who are not necessarily the develop-ers) can gain early feedback and highlight usability and interaction issues that may otherwise get missed until such decisions are too well entrenched to be easily reversed. /T_his lends itself to an agile development process where simple prototypes are put out early and re/f_ined during the development cycle.
93606_Book.indb   678/26/09   1:38:40 PM 68  /UIstop  Jakob Bardram and Adrian Friday
With many systems, developers are also just another class of user; run-ning training sessions with developers and having to explain the system and its application programming interfaces (APIs) to others can be a valuable source of insights. If your aim is to encourage adoption by oth-ers, and you plan to put the so/f_tware in the public domain, then doing a ‚Äúclean room install‚Äù helps ‚Äúquantify the magic‚Äù and tacit knowledge that the systems‚Äô own developers are able to apply when using and installing the system. Documenting this type of information (e.g., as installation and maintenance guides) in a wiki associated with the so/f_tware can help smooth adoption and also provide a resource for continuity if there are changes of personnel in the project team over the longer term.Deploying systems for people to use is always a costly process. Designing a system that meets peoples‚Äô expectations, and indeed, helping set those expectations requires great care and expertise. /T_he key is, of course, iden-tifying the stakeholders and involving them in discussions from an early stage. How to design with users, known as participatory design, is a major topic for discussion in its own right; so we direct the interested reader to such texts as that published by Schuler and Namioka (1993). See also Chapter 6 for further discussion on participatory design.Ubiquitously deploying technologies inevitably implies that, at some point, technologies must move out of the research laboratory and into the 
FIGURE 2.5 Cooltown beacon that enabled the physical environment to be augmented with digital information (top edge, just 3.3 centimeters wide).
93606_Book.indb   688/26/09   1:38:42 PM Ubiquitous Computing Systems  /UIstop  69‚Äúreal world.‚Äù Experience has shown that with this comes a number of real-world constraints and practical concerns that may be unexpected and are certainly worth being highlighted (Fox et al., 2006; see Table 2.1)./T_here are many issues due to the real world and organizational settings that can catch the unwary developer by surprise (Hansen et al., 2006; Storz et al., 2006). For example, 1. /T_he need to comply with health and safety or disabilities legislation, which can constrain the citing of equipment and place certain usability requirements for disabled users (for guidance on how to design inclu-sively for all users and design assistive technologies for those with dis-abilities in particular, the reader is referred to Clarkson et al., 2003). 2. To be sensitive to data protection legislation, which may impact what data you can store, whether users have the right to opt-in, opt-out, or declare (e.g., with notices) that the system is in operation. Public deployments are by their very nature public, so you should prepare to be accountable for your system and prepare yourself, your team, and your work for public scrutiny. 3. Environmental factors (including weather, pollution, etc.) can have a devastating eÔ¨Äect on equipment that is not adequately protected. It is worth doing test installs before your main deployment to uncover unexpected issues due to environmental factors (particularly impor-tant for external and outdoor deployments). 4. Privacy and organizational sensitivity. /T_he nature of putting technol-ogies into real-world situations can potentially open vulnerabilities (perceived or actual) to expose private information or interfere with existing systems or processes. /T_his is particularly true for organiza-tions managing sensitive data or in high-pressure situations, such as healthcare and emergency services. It is always worth approaching such situations responsibly and involving and addressing the con-cerns of local experts.With any system, there is an ongoing cost in supporting the system that is proportional to the length of the deployment. Robust engineering and clever design can help mitigate this cost, but it is a research challenge in itself to drive this to zero and make the system self-maintaining. To keep down the impact of remote maintenance and support, you should 
93606_Book.indb   698/26/09   1:38:42 PM 70  /UIstop  Jakob Bardram and Adrian FridayTABLE 2.1 Self-Check Questions to Consider before Undertaking a Real-World Deployment$BUFHPSZ*TTVFT2VFTUJPOTHardware Cost, Security, Environment, Power, Network, Space, Safety issuesWhat will implementation cost? Will scaling up the system aÔ¨Äect the price? Is special equipment needed? Is the equipment secure? Is there a risk of the/f_t? Does the environment pose special requirements on the equipment? Is the system going to be used outdoors? Can it handle vandalism? Can it withstand being dropped or cleaned? Does the system require a power plug? How long can it run without being recharged? Do the batteries run /f_lat if radio communication is used excessively? How do you recharge the system? How will the device communicate? Does it require an Ethernet connection? Is the wireless infrastructure in place? Do you need to transmit data in an external network? How much physical space does the system use? Is there space on the wall for large wall displays? Is there table space for another computer? Do the doctors have enough room in their pockets for another device? Is there space on the dashboard for another display? Will a system malfunction aÔ¨Äect safety issues? What is the contingency plan in case of a full system crash? Will the system interfere with other systems? Can the system pose a threat to the user?So/f_tware Deployment and updates, Debugging, Security, Integration, Performance and scalability, Fault tolerance, HeterogeneityHow is the so/f_tware transferred to the device? Does the deployment mechanism scale to a large number of devices? Can you update the system? How do you update the diÔ¨Äerent devices? Are the devices accessible a/f_ter deployment? If the system malfunctions, how do you /f_ind the error? Does the system store debugging information? How do you detect serious errors in the system? How is logging done? Does the system need to be secure? How does it keep information con/f_idential and secure? Is there a concrete security risk? Is the deployed system stand-alone? Does it need to communicate with other deployed systems or integrate with third party systems? Is there a public API and converters for communicating between systems? How does the system perform? Is system performance acceptable in the real-world setting? How many devices are needed for deployment? Does the system scale? What happens when an error occurs? Can the system recover automatically? Can the daily system users bring the system back up to a running state? Is the developer team noti/f_ied about errors? Is the system con/f_igured for remote support? Does the system run in a heterogeneous environment? Do heterogeneous elements need to communicate?
93606_Book.indb   708/26/09   1:38:42 PM Ubiquitous Computing Systems  /UIstop  71User settingUsability, Learning, Politics, Privacy, Adaptation, Trust, SupportWill end users use the system? If so, how many? Can the average user use the system? Does the interface pose problems? Does the system‚Äôs overall usability match the average user? How do the users learn to use the system? Is it individual instruction or group lessons? Does the system need superusers? Is a manual or help function needed? How does the user get support? Who controls the system? Does the system change the power balance in the user setting? Who bene/f_its from the system? Is the person that bene/f_its from the system the same as the person that provides data to the system? Does the system require extra work from users? Does the system reveal private information? What kind of personal information does the system distribute and to whom? Is the organization ready for the system? Is there organizational resistance? Will the system change formal or informal structures in the organization? Does the user trust the system? Is the information given to users reliable? Who sends the information? Will the developers support the system? Does the support organization have remote access to the system?4PVSDF Hansen et al. (2006), *&&&1FSWBTJWF $PNQVUJOH, 5(3): 24‚Äì31. With permission.
93606_Book.indb   718/26/09   1:38:42 PM 72  /UIstop  Jakob Bardram and Adrian Fridayensure that it is possible to remotely monitor it, ideally as the user per-ceives it (remote cameras and microphones can be extremely valuable, but are unpopular in many deployment settings). Remote access via the network is also important for resolving problems, especially if the system is inaccessible or far removed from the project team: it is easy to assume that the system will need less ongoing maintenance than perhaps it does, in fact, require, especially in the early phases of the project. If the system is physically inaccessible, then this is likely to cause problems going for-ward. Particularly in unsupervised deployments, there is always a chance of unexpected or accidental intervention. Equipment that is installed and le/f_t in working order can sometimes /f_ind itself unplugged unexpectedly (e.g., by cleaners looking for a power socket or due to a power outage). You should realize that you cannot mitigate against all eventualities, but if your system requires complex manual setup or cannot be diagnosed and maintained remotely, then you are asking for trouble!3VOUJNF0SDIFTUSBUJPOPGUIF"NCJFOU8PPEAmbient wood was an augmented ‚Äúubicomp woodland‚Äù (Figure 2.6) designed to promote learning about woodland environments (Rogers et al., 2004). Mobile sensor devices allowed children to 
FIGURE 2.6 Children using a situated ‚Äúperiscope‚Äù to overlay augmented reality information onto the woodland.
93606_Book.indb   728/26/09   1:38:43 PM Ubiquitous Computing Systems  /UIstop  73collect geo-tagged light and moisture readings; installed informa-tion appliances allowed information concerning tagged objects to be explored. /T_he system also used a mesh of wirelessly connected devices installed in the wood to generate ambient sounds based on sensed contextual triggers. Technically, all devices synchronized their data to a shared dataspace (‚ÄúEquip‚Äù middleware), allowing interactions in the woodland to later be visualized during super-vised teaching sessions. /T_his system was not designed for unsuper-vised operation or for longitudinal deployment. To maintain the quality of the experience for end users, a degree of orchestration was required to address any problems that arose during each teach-ing session in the wood. To help make orchestration easier (e.g., to introduce a new object representing a sound or piece of informa-tion, inspect readings being sent from devices, etc.), the developers integrated a multiuser dungeon (MUD) into the system to provide another interface onto the Equip data. Each area of the augmented woodland was represented in the MUD as a ‚Äúvirtual room.‚Äù /T_he team could easily use this interface and MUD metaphors to inter-actively ‚Äúwalk around‚Äù the representation of the experience and to remotely control it by inspecting, picking up, and dropping virtual objects. Orchestration of the con/f_iguration of hardware and so/f_tware beyond the game was still largely a laborious manual process.2.4.2.1  Expect the UnexpectedIn all deployments, the unexpected is the hardest thing to prepare for. Volatility is unfortunately endemic to the real world and hence to your ubicomp system (Coulouris et al., 2005). As a thought experiment and ideally during predeployment testing, consider how your system will react toPresence or use by unknown userstUnrecognized devices (e.g., new phones and laptops)tChanges to the wireless environment (new wireless networks)tDevices being power cycledtBatteries failing (particularly hard to tell on embedded devices with tno moving parts or LEDs!)
93606_Book.indb   738/26/09   1:38:43 PM 74  /UIstop  Jakob Bardram and Adrian FridayYou not being there (it is easy to forget that the developer is present tduring development and testing, potentially impacting the sensing, wireless connectivity, etc.)Improper use (developers can quickly learn which interactions t‚Äúbreak‚Äù the system and almost subconsciously adapt to avoid exer-cising these paths)Anticipating these types of conditions, testing for them, and ideally having a strategy to deal with them will serve you well, particularly for longer-term deployments. Even something as simple as logging unex-pected conditions to a persistent store can help with the posthoc diagnosis of ‚Äúmysterious‚Äù system misbehavior.2.4.3  SummaryConstructing ubicomp systems that not only meet the objectives and ambi-tion of your project, but that are also suÔ¨Éciently robust to be deployed for evaluation purposes, and in extremis, long-term use is very challeng-ing. OÔ¨Ä-the-shelf hardware and so/f_tware can be an expedient means of building ambitious systems more quickly, but do not come without strings attached: careful, quali/f_ied, and dispassionate evaluation of the choices and implications of those choices is called for. /T_he end game as we strive for ubicomp ‚Äúfor real,‚Äù has to be moving toward daily and widespread use of ubicomp systems. Deployments, however, are not to be undertaken lightly; diligent preparation based on, for example, the above anticipated issues presented from past deployment-led projects will help you avoid many of the more common pitfalls. /T_he next section concentrates on how to evaluate and learn from your built system.2.5  EVALUATING AND DOCUMENTING UBICOMP SYSTEMSIn this section, we shall look more closely into how ubicomp systems can be evaluated and how the insight from your research can be documented and communicated.2.5.1  Evaluating Ubicomp SystemsEvaluation of ubicomp systems and/or their smaller subcomponents needs to be carefully designed from the outset of a research project; dif-ferent types of research contributions o/f_ten need to be evaluated diÔ¨Äer-ently. For example, routing protocols and their applicability under given 
93606_Book.indb   748/26/09   1:38:43 PM Ubiquitous Computing Systems  /UIstop  75circumstances can o/f_ten be evaluated using network simulation tools, whereas systems support for smart room technologies would o/f_ten involve real-world testing with end users. It is particularly important to ensure a tight coupling between the DMBJNT you make about your system and the evaluation methods that you use to demonstrate that these claims hold. If, for example, you claim that your network protocol scales to many nodes, a simulation is a reasonable evaluation strategy; but if you claim that the protocol supports biologists to easily pair devices in a deployment situa-tion, this claim needs to be evaluated with biologists using the nodes (and their protocol) in a deployment /f_ield study.Now, the observations above may seem trivial and obvious. Unfortunately, however, our experience is that it is exactly the discrep-ancy between claims made by researchers and their evaluation strategy, approach, and methods that o/f_ten leads to criticisms of the designed sys-tems. Generally speaking, there are a number of approaches to evaluating ubicomp systems with varying degrees of ambition and required eÔ¨Äort. A few important ones are introduced below.2.5.1.1  Simulation/T_he design of a system can be modeled and subsequently simulated. For example, simulation is the research tool of choice for a majority of the MANET community. A survey of MANET research published in the premiere conference for the MANET community shows that 75% of all papers published used simulation to evaluate their research, and that the most widely used simulator is the Network Simulator (NS-2) (Kurkowski et al., 2005).Once a system or a systems feature has been implemented, simulations can also be used to evaluate properties of the implementation. Simulations are typically used to evaluate nonfunctional systems qualities such as scal-ability, performance, and resource consumption. For example, the systems qualities of a ubicomp infrastructure for a smart room may be simulated by deploying it in a test setup where a number of test scripts are simulat-ing the use of the infrastructure according to a set of evaluation scenarios. While running the test scripts, the technical behavior of the infrastruc-ture is gauged with respect to responsiveness, load balancing, resource utility, and fault tolerance. Such a technical simulation of a complicated piece of system infrastructure is extremely valuable in systems research, and helps discover and analyze various technical issues to be mitigated in further research. It is, however, important to recognize that this type 
93606_Book.indb   758/26/09   1:38:43 PM 76  /UIstop  Jakob Bardram and Adrian Fridayof technical simulation says absolutely nothing about the infrastructure‚Äôs functional ability to, for example, support the creation of smart rooms, or about the usefulness and usability of the application built on top of it. To verify claims about the usefulness and usability of a system, you would need to make user-oriented evaluations.2.5.1.2  Proof-of-ConceptJust as Marc Weiser coined the concept VCJRVJUPVTDPNQVUJOH, he also described how these technologies were designed at Xerox Palo Alto Research Center (PARC) by building and experimenting with so-called QSPPGPGDPODFQUT. A proof-of-concept (PoC) was de/f_ined as/T_he construction of working prototypes of the necessary infra-structure in suÔ¨Écient quality to debug the viability of the system in daily use; ourselves and a few colleagues serving as guinea pigs./parenleft.capWEISER, 1993/parenright.capA PoC is a rudimentary and/or incomplete realization of a certain tech-nical concept or design to prove that it can actually be realized and built, while also to some degree demonstrating its feasibility in a real imple-mentation. A PoC is not a theoretical (mathematical) proof of anything; it is merely a proof that the technical idea can actually be designed, imple-mented, and run. In analogy, even though Jules Verne introduced the con-cept of traveling to the moon in his famous 1865 novel, 'SPNUIF&BSUIUPUIF.PPO, the actual PoC was not designed, built, and run until a century later.Creating PoCs is the most prevalent evaluation strategy in ubicomp sys-tems research. /T_he original work on the pad, tab, and wall sized ubicomp devices and their infrastructure at Xerox PARC is the classic example of this. But a wide range of other PoC examples exists, including ABC infra-structures for hospitals (Bardram and Christensen, 2007), diÔ¨Äerent PoC for tour guiding systems such as GUIDE (Cheverst et al., 2000) and the San Francisco Museum Guide system (Fleck et al., 2002), home-based ubi-comp systems such as EasyLiving (Brumitt et al., 2000), and ubicomp sys-tems for smart rooms such as Gaia (Roman and Campbell, 2000), iRoom (Borchers et al., 2002), and iLand (Streitz et al., 1999).However, looking at it from a scienti/f_ic point of view, a PoC is a somewhat weak evaluation strategy. A PoC basically shows only that the technical 
93606_Book.indb   768/26/09   1:38:43 PM Ubiquitous Computing Systems  /UIstop  77concept or idea can be implemented and realized. Actually, however, a PoC tells us very little about how well this technical solution meets the overall goals and motivation of the research. For example, even if sev-eral PoCs of an ABC infrastructure have been implemented, this actually only tells us that it is possible to build and run a technical implementa-tion of the underlying concepts and ideas. A PoC, however, does not tell us anything about whether it actually meets any of the functional and/or technical goals. For example, does the ABC framework support the highly mobile and collaborative work inside hospitals? Moreover, the PoC does not tell us anything about the nonfunctional aspects of the infrastructure: Does it scale to a whole hospital? Is the response time adequate for the life- and time-critical work in a hospital? Is it extensible in a manner that would allow clinical applications to be built and deployed on top of it? All of these questions can only be answered if the PoC is put under more rigorous evaluation.2.5.1.3  Implementing and Evaluating ApplicationsA stronger evaluation approach is to build end user applications using ubicomp systems component and infrastructures, and then put these applications into subsequent evaluation. For example, the Context Toolkit was used to build several applications such as the In/Out Board and the DUMMBO Meeting Board. /T_hese applications can then be evaluated by end users in either a simulated environment or in a real-world deploy-ment. For example, the ABC framework was used to implement a series of clinical applications, which was subsequently evaluated in a test setup where a hospital was simulated (Bardram and Christensen, 2007)./T_his evaluation approach is strong in several respects. First, using underlying systems technologies such as components, toolkits, or mid-dleware infrastructures to build real applications, demonstrates that the systems components are indeed useful for building systems. Second, the act of building these applications helps the systems researcher to judge whether their building blocks actually help the application developer meet his or her application goals. For example, how easy is it to model, capture, and distribute context information using the Context Toolkit? /T_hird, once the application is built and put into use, this provides a test bed for the underlying systems components and helps you answer more nonfunctional questions, such as: How well does the system scale, per-form, and handle errors? For example, the implementation of clinical applications on top of the Java Context-Awareness Framework (JCAF) 
93606_Book.indb   778/26/09   1:38:43 PM 78  /UIstop  Jakob Bardram and Adrian Friday
framework and the subsequent evaluation sessions helped the creators inspect how well the context-aware technology scaled to multiple con-current users, and what happened when clients lost network connec-tivity. /T_he infrastructure and the application were put into pilot use in a hospital and evaluated over a 6-month period (Hansen et al., 2006). Figure 2.7 shows the use of context-aware public displays and smart phone in use.However, as pointed out by Edwards et al. (2003), this evaluation strat-egy has its pitfalls and drawbacks. Essentially, if not carefully designed, the application and the subsequent evaluation may tell us little, if any-thing, about the systems aspect of the whole application. It is important to be absolutely clear about what your test application will tell you about your systems components, infrastructure, or toolkit. It is easy to get distracted by the demands of building useful and usable application in themselves and lose sight of the real purpose of the exercise, which may purely be to understand the pros and cons of the systems part. Moreover, whether or not the evaluation of an application turns out to be extremely successful may have very little to do with the systems properties of the application. For example, an application may fail simply because of poor usability, or because it is so novel that users have a hard time actually using it. /T_his failure, on the other hand, may say very little about the usefulness of the underlying systems support.
FIGURE 2.7 Context-aware technology deployed inside a hospital. (From Hansen et al., *&&&1FSWBTJWF$PNQVUJOH5(3), 24‚Äì31, 2006. With permission.)
93606_Book.indb   788/26/09   1:38:44 PM Ubiquitous Computing Systems  /UIstop  792.5.1.4  Releasing and Maintaining Ubicomp Systems/T_he strongest evaluation of ubicomp systems components is to release them for third party use, for example, as open source. In this manner, the system research is used and evaluated by other than its original designers, and the degree to which the systems components helps the application programmers to achieve their goals directly re/f_lects the qualities of the system components. One may even argue that there is a direct correlation between the number of application developers and researchers using the system in their work, and the value and merits of the work.Releasing and maintaining systems so/f_tware does, however, require a substantial and continuing eÔ¨Äort. Releasing systems building blocks such as hardware platforms, operating systems, toolkits, infrastructures, middleware, and programming APIs entail a number of things such as a stable and well-tested code base, technical, and API documentation; tuto-rials helping programmer to get started; example code and applications; and setting up licensing policies. And once the system has been released for third party use, issues of bug reporting and /f_ixing, support, general maintenance, and new system releases need to be considered./T_his is a real dilemma in systems research and evaluation. On the one hand, the best way to evaluate your systems research is to implement the idea in suÔ¨Écient quality for the rest of the world to use it, and then con-tinuously document, support, maintain, and evolve the technology. /T_he degree to which the world adopts your technology is a direct indicator of its usefulness. On the other hand, this limits the amount of systems research that you can do within your career to a few contributions, and there seems to be an internal and external pressure for continuously moving on to new systems research challenges. But‚Äîwithout a doubt‚Äîdesigning, implementing, documenting, releasing, and evolving systems contributions for third party use is the golden bar in systems research and is a goal pursued and reached by many researchers. Section 2.6 provides pointers on released ubicomp systems research, which can be used in fur-ther research.2.5.2  Learning from What You BuildAll ubicomp systems are complex and time consuming to design, imple-ment, and deploy. It is easy to expend all eÔ¨Äorts of the project on creating, deploying, and evaluating the system, while neglecting to dedicate suf-/f_icient resources to communicating your /f_indings and experiences (both positive and negative) to others. As attributed to Plutarch between AD 46 
93606_Book.indb   798/26/09   1:38:44 PM 80  /UIstop  Jakob Bardram and Adrian Fridayand 120, ‚ÄúResearch is the act of going up alleys to see if they are blind.‚Äù If we do not communicate, then others will be doomed to repeat our mis-takes and not learn from our innovations. It is important not to waste your eÔ¨Äorts by sharing so/f_tware, datasets, and knowledge for others to build on (or even contribute to).2.5.2.1  Communicating Your Findings/T_here are many ways to communicate with the community at large, and comparatively recent innovations such as open-source so/f_tware projects and contributory resources such as ‚Äúwikis‚Äù make it easier to put work online and marshal interested parties around initiatives. Still, it takes work to engage with a community and provide the resources they will need to be able to work with and/or contribute to your system. For this purpose, there are several approaches to use: 1. Making your system available enables others to try, critique, com-pare, adopt, and potentially contribute to your project (e.g., the iRos interactive workspaces so/f_tware (Borchers et al., 2006) and equip rapid prototyping toolkit (Greenhalgh and Egglestone, 2005) are both available in source form). If you do not just put materials online, but try to make the initiative open source, then it‚Äôs important that you remain responsive and keep the information up-to-date, at least while the project is in active development. 2. Publishing datasets is another eÔ¨Äective means of providing resources for the community to build on and also invites the scienti/f_ic practice of experimental validation through repeatability and comparative analysis of approaches (the CRAWDAD wireless traces (Kotz and Henderson, 2009) and Massachusetts Institute of Technology (MIT) PlaceLab Datasets (Intille et al., 2006) are good exemplars of this approach). 3. Publishing (e.g., online) schematics, instructions, and documenta-tion also provides critical insight into how to reconstruct experi-ments and follow on from your work [e.g., Multitouch table (Schmidt, 2009), Smart-Its (Smart-ITs, 2001)]. 4. Traditional academic routes of dissemination (papers, magazine articles, demonstrations, workshop participation, etc.), which pro-vide a means to obtain valuable peer feedback on your work.
93606_Book.indb   808/26/09   1:38:44 PM Ubiquitous Computing Systems  /UIstop  81As with any packaging of the work, be it open source or commercial-ization activities, any such eÔ¨Äort should be undertaken advisedly. It takes eÔ¨Äort to seed these initiatives, for example, creating documentation, put-ting up example code, instructions and tutorials, making public versions, choosing appropriate licenses, etc. However, one has to question whether it is valid to undertake the research without considering and budgeting for evaluating it and communicating your /f_indings.2.5.2.2  Rigor and ScientiÔ¨Åc CommunicationUbicomp systems are always diÔ¨Écult to describe due to their complex-ity and wide-ranging lessons that one accrues during a typical project. Not everything that becomes a time sink is worth communicating; con-versely, it is easy to forget the many problems and compromises that have been overcome or bypassed that may hint at important research questions worth detailing. Keeping a laboratory notebook as you progress can be a valuable resource when writing papers and dissertations.Academic forms of dissemination (e.g., papers) do not always value experience reports or negative results as much as they should. /T_his, in turn, has a tendency to encourage some researchers to focus on positive contributions of their work and why it is new or diÔ¨Äerent from existing approaches at the expense of objectivity; it is far more common in other disciplines to repeat experiments and validate the work of other scien-tists, rather than focus on novelty and diÔ¨Äerentiation. Your work should be grounded in the literature; it is de/f_initely acceptable to learn and build on the work of others, and it is acceptable to stress the commonalities as well as the diÔ¨Äerences. If there is genuinely nothing new to learn from your proposed project, then you have to question whether your objectives are correct; an early search of the literature is particularly important for this reason. For a thought-provoking discussion of experimental meth-ods in Computer Science, the interested reader is directed to Feitelson (2005).2.5.3  Documenting Ubicomp Systems/T_his last section shall present what, in our experience, is the best way to document ubicomp systems research and what needs to be addressed. /T_his may work as an outline of your technical documentation as well as some 
93606_Book.indb   818/26/09   1:38:44 PM 82  /UIstop  Jakob Bardram and Adrian Fridaybasic directions for writing good ubicomp systems papers for the research community.Explain the speci/f_ic (systems) tRVFTUJPOBOEDIBMMFOHF that you are addressing.Enumerate and explain the tBTTVNQUJPOT you make‚Äîboth technical as well as any assumptions on the developers‚Äô and users‚Äô behalf.Carefully tSFMBUFZPVSXPSL to others, paying special attention to where your work extends the work of others, and where it diÔ¨Äers. Your work may diÔ¨Äer in several areas, but it is important to highlight a few sig-ni/f_icant diÔ¨Äerences that constitute your main contributions.Divide documentation intotTechnical documentation‚Äîcontains all the technical details on tthe system, its implementation, and evaluation.Research paper describing the overall research approach, ques-ttions, contribution, concepts, and technical innovation‚Äîalways be careful not to include trivia or irrelevant implementation details; refer to the technical document if necessary.Describe your evaluation‚Äîespecially why the system was evaluated tin the manner with which it was conducted‚Äîaddressing the follow-ing issues:Evaluation strategy and overall approach.t/T_he aim of the evaluation, including a description of how to mea-tsure it. Outline evaluation criteria and how to measure success.Evaluation setup, including technical setup, con/f_iguration, run-ttime environment, simulation parameters, users, their back-ground, the physical setup, etc.Results of the evaluation, including measurable results such as ttime measurements of performance, throughput, and resource contribution, as well as qualitative results such as user feedback based on interviews, observations, and questionnaires.Discuss the contribution of the system as related both to the results tof the evaluation as well as to the results from others.
93606_Book.indb   828/26/09   1:38:45 PM Ubiquitous Computing Systems  /UIstop  83In technical and scienti/f_ic documentation, it is important to maintain objectivity and honesty when reporting results and /f_indings. Try to avoid unnecessary adjectives and provide a prosaic description. Carefully present and discuss what can be learned from your research and the results you have obtained. Documenting and reporting on apparently negative results may entail a contribution in itself; it may be an inspiration for others to try to address this particular challenge or it may be associated with a /f_law in the evaluation setup, which can be /f_ixed once discovered.2.5.4  CorollaryOn a /f_inal note, it is worth keeping the scienti/f_ic mindset to the fore in order to cultivate a scienti/f_ic and balanced approach in describing your work. Scientists should be uncertain, open-minded, skeptical, cautious, and ethical‚Äîreaders will question your work and will be cautious to accept your claims without appropriate evidence and grounding with respect to other approaches. Balanced and objective self-re/f_lective analy-sis and evaluation of your work is crucial to its acceptability by others and particularly by the best quality conferences and journals. Evaluations must be methodologically sound and include adequate explanation of how they were conducted, because this is important for con/f_idence in the qual-ity of the results and trustworthiness of the inferences drawn from them. Results and lessons should also be clearly and concisely presented. Try, if possible, to ‚Äúquantify the magic‚Äù (Barton and Pierce, 2006) that made your system work for the setting and users you chose; understanding the scope and limitations of your system and how seriously these might impact the generalization of your work is important for setting the boundaries and research questions for further work in that area.A simple guiding principle is: ‚ÄúWhat does the reader learn from read-ing my paper?‚Äù If a paper lacks useful insight, lessons, or results, then it is highly likely to be rejected.2.6  GETTING STARTEDIf I have seen further than others, it is by standing upon the shoul-ders of giants.ISAAC NEWTON, LETTER TO ROBERT HOOKE FEBRUARY 5, 1675
93606_Book.indb   838/26/09   1:38:45 PM 84  /UIstop  Jakob Bardram and Adrian FridayMany ubicomp systems research projects have put tools, toolkits, and datasets into the public domain. Here are a few examples of tools that we, as experimental scientists and designers of next-generation ubicomp systems, can download and evaluate. /T_hese can provide a quick route to getting your ideas up and running and allowing low-cost experimenta-tion with ubicomp systems. You should feel positively encouraged to oÔ¨Äer feedback to the creators, contribute to projects and dataset archives, and objectively compare your work with others in the domain; as a matter of principle, we can only bene/f_it as a community from trying out each other‚Äôs systems and paradigms, and working together to address the many chal-lenges ubicomp poses. In general, there are diÔ¨Äerent types of technology that can help you realize your system and prototype your ideas: 1. Rapid prototyping tools for creating situated or mobile ubicomp systems 2. Libraries that can form components of your system, for example, handling computer vision, gesture recognition, processing sensor data, handling context 3. Hardware components including wireless sensors for augmenting artifacts or forming sensor networksGiven the typical lifetime of the average research project or these types of technology, this section merely aims to serve as an indicator of the types of systems available to you. More up-to-date resources should be kept in the public domain where they can be added to by active researchers, such as yourself (e.g., see http://ubisys.org).2.6.1  Prototyping Your Ideas/T_here are many hardware and so/f_tware platforms available to assist with deploying test ubicomp infrastructures to test your ideas and novel forms of interaction. Tools such as ActivityStudio (Li and Landay, 2008), exem-plar (Hartmann et al., 2007), and iStuÔ¨Ä Mobile (Ballagas et al., 2007) sup-port the creation of low-/f_idelity functional prototypes that can be used to experiment with diÔ¨Äerent ubicomp application designs. Each has a diÔ¨Äer-ent focus: ActivityStudio provides an environment for moving from /f_ield notes, through a storyboarding and visual programming step through to simulation and in situ deployment of a Web-based prototype; exemplar encourages demonstration of sensor-based interactions (e.g., gestures) 
93606_Book.indb   848/26/09   1:38:45 PM Ubiquitous Computing Systems  /UIstop  85that are then /f_iltered and transformed using a visual development envi-ronment to trigger other applications; and iStuÔ¨Ä Mobile provides a visual programming interface for novel mobile phone‚Äìbased interfaces (an oth-erwise notoriously diÔ¨Écult platform to develop for).Systems such as the EQUATOR Component Toolkit (ECT) (Greenhalgh and Egglestone, 2005) and Wiring (Barrag√°n, 2006) provide programmatic glue for constructing ubicomp systems that integrate sensing (input from sensors such as phidgets, motes, and d.tools boards), actuation (of physi-cal actuators including X10 modules, output to Internet applications, etc.). ECT uses a visual graph-based editor to allow runtime interconnection of modules. /T_he underlying EQUIP instances can support multimachine and distributed con/f_igurations. Wiring oÔ¨Äers a high-level language based on the popular open-source visualization language Processing (Fry and Reas, 2001). Similar data/f_low-like graphing metaphors are also exploited in Max/MSP (Zicarelli, 1997), a commercial system used by artists and designers to create interactive installations. Max uses a powerful graphical wiring met-aphor (an interesting and /f_lexible design in its own right) for connecting input and output components with channels that communicate messages. PureData (Puckette, 1996) and jMax (Cecco et al., 2008) are open-source derivatives of Max. Extensions to these (e.g., Digital Image Processing with Sound for jMax) allow real-time processing and transformation of video suitable for use in video-based installations and art pieces./T_he Context Toolkit (Salber et al., 1999), Java Context-Awareness Framework (Bardram, 2005), and Context Aware Toolkit (CAT) (Prideau, 2002) allow sensors of context to be decoupled from higher level context reasoning in applications. Whereas the Context Toolkit and JCAF support ubicomp applications based on the integration of distributed context sen-sors, CAT does a similar job for embedded wearable devices.Topiary (Li et al., 2007) and MyExperience (Froehlich, 2009) use context in a mobile environment to trigger interactions with the user. However, the aim of the two systems is quite diÔ¨Äerent: Topiary‚Äôs focus is low-/f_idelity contextual presentation of interactive design sketches to the user, whereas MyExperience is designed to ask the user a contextually relevant set of questions to survey them in situ (a methodology known as the experience sampling method).2.6.2  Smart Room in a BoxIf your aim is to create a smart environment populated with multiple displays and interaction devices, then Stanford‚Äôs interactive work-spaces spin oÔ¨Ä iROS (Borchers et al., 2006) is available as open source. 
93606_Book.indb   858/26/09   1:38:45 PM 86  /UIstop  Jakob Bardram and Adrian FridayA meta-operating system for creating interactive rooms, iROS includes a set of core middleware (Event Heap, DataHeap, iCra/f_ter) for unifying machines and displays together to form larger interactive surfaces. /T_he MeetingMachine (Barton et al., 2003; Barton, 2003) repackages iROS to create a shared networked appliance supporting the exchange, discussion, and collation of electronic documents in a meeting setting. Radically dif-ferent approaches are taken by Plan B (Ballesteros et al., 2008), where smart environments are built on the Bell Labs Plan 9 operating system (Pike et al., 2003) and PCOM (Rothermel et al., 2006), a peer-to-peer component middleware for constructing pervasive applications.2.6.3  Public Domain Toolkits/T_here are many useful libraries that can provide solutions to well-known algorithmic or integration problems, for example, integrating computer vision or detecting human activities.2.6.3.1  Vision and Augmented RealityA very common requirement is to integrate computer vision systems. OpenCV (OpenCV, 2009) provides over 500 algorithms for real-time vision processing. CANTag (DTG Research Group, 2005) supports the tracking of /f_iducial tags including their orientation and rotation, enabling a range of possible interaction gestures. Using a similar technique, the popular augmented and mixed-reality ARToolkit (Lamb et al., 2007) has been used to great eÔ¨Äect for overlaying 3-D graphics onto similar /f_iducials. Building on this, the Designers Augmented Reality Toolkit (Macintyre et al., 2005) integrates this into an experience design environment based on Macromedia Director, simplifying augmented reality experience design.2.6.3.2  SensingUbicomp systems are o/f_ten required to interpret sensor data to identify user interactions or human activities. Weka (Frank et al., 2008) is a col-lection of machine learning algorithms for preprocessing, classi/f_ication, processing, and visualizing of data. Sensor networks increasingly underlie many ubicomp installations, particularly in the healthcare and emergency services domains. For example, DexterNet (Kuryloski et al., 2008) is an open framework for integrating wearable sensors for medical applica-tions. It provides support for communicating with medical sensors (e.g., ECG), network support for communicating readings from the device, and a higher layer toolkit called SPINE (Giannantonio et al., 2008; Gravina  
93606_Book.indb   868/26/09   1:38:45 PM Ubiquitous Computing Systems  /UIstop  87et al., 2008), which helps simplify code development for embedded wear-able sensors and deployment on arrays of sensor nodes.2.6.3.3  HardwareMany of the toolkits described above have been adapted to allow the inte-gration of commodity hardware and tangible prototyping tools. Common ones includeWireless sensor nodes such as Motes (Crossbow, 2008), SunSpots t(Sun Microsystems Laboratories, 2004), jStamps (Systronix, 2009), and /uni03BCParts (Beigl et al., 2005)Interface prototyping boards such as the popular Phidgets (Phidgets, t2009), Arduino (Arduino, 2009), and d.tools (Hartmann et al., 2006) kitsWearable sensor boards for medical applications, for example, tHarvard‚Äôs CodeBlue (Welsh et al., 2008) and University of Alabama in Huntsville‚Äôs Wearable Health Monitoring Systems (WHMS) (Otto et al., 2008)Most of these have active communities developing tutorial materials and examples.2.6.4  DatasetsA positive side eÔ¨Äect of the standardization of some of these components (particularly sensor platforms) is that it becomes possible to repeat experi-ments and validate other people‚Äôs /f_indings. Datasets from such platforms are being increasingly collected online and are o/f_ten open to contributions from other researchers. Examples of useful datasets already in the public domain include: 1. MIT‚Äôs House_n PlaceLab (Intille et al., 2006) includes traces of human activity that have been used by the community to develop activity detection algorithms. 2. Intel‚Äôs Place Lab (Hightower et al., 2006; Lamarca et al., 2005) pro-vides a freely available system for mobile localization, together with contributed location traces, which have been used to look at destina-tion prediction, context-aware assistive technologies, and privacy.
93606_Book.indb   878/26/09   1:38:45 PM 88  /UIstop  Jakob Bardram and Adrian Friday 3. Dartmouth‚Äôs CRAWDAD (Kotz and Henderson, 2009) is a commu-nity archive of wireless network traces that have been used for a wide range of uses including developing improved MAC layer protocols and location prediction. 4. Berkeley‚Äôs Wearable Action Recognition Database (Yang et al., 2008) and WHMS (Otto et al., 2008) activity traces for developing human action recognition systems based on wearable motion sensors./T_he appearance and growth of initiatives such as these can help us collectively identify and solve common systems problems in ubicomp, enabling the /f_ield to move forward more rapidly.2.6.5  SummaryPrototyping your ideas using available prototyping and smart room tools is a laudable approach for exploring the ubicomp design space and solicit-ing feedback. /T_hese types of tools help us commodify ubicomp systems, simplifying rapid creation of prototypes and broadening ubicomp experi-ence. Ubicomp systems researchers are to be encouraged to use, re/f_ine, contribute to these initiatives, and start new ones as needed, to continue the technological dialogue that helps support our community. Exploiting and contributing new tools and datasets in the public domain can only serve to stimulate further research activity and promote increased adop-tion of scienti/f_ic practices such as repeatability and comparison.2.7  CONCLUSIONSystems research is central to ubicomp research and provides the fun-damental building blocks for moving the /f_ield forward in terms of new applications and user experiences. As a research /f_ield, ubicomp must continue to build and evaluate systems components that ease the design, implementation, deployment, and maintenance of real-world ubicomp applications./T_his chapter has outlined the special challenges pertaining to ubicomp systems and applications, including issues of designing systems that have to run in resource-constrained, volatile, and heterogeneous execution environments. But, in addition to these technical challenges to ubicomp systems design, the chapter has also tried to highlight that the special char-acteristics of ubicomp applications force systems researchers to address a whole new set of systems challenges, including the need to design for 
93606_Book.indb   888/26/09   1:38:45 PM Ubiquitous Computing Systems  /UIstop  89/f_luctuating environments and circumstances, and invisible computing. To a large degree, the assumptions that contemporary personal and client-server computing relies on, breaks down in a ubicomp environment./T_he chapter then moved on to discuss how to create ubicomp systems, putting emphasis on the experimental nature of systems design and imple-mentation. Advice on how to implement and deploy ubicomp systems was given with reference to concrete ubicomp technologies and projects. Special emphasis was placed on evaluating and documenting ubicomp systems research; it is essential for the research community that ubicomp systems research is properly evaluated and documented in order to move the /f_ield forward. Evaluation of ubicomp systems is far from easy, and the chapter oÔ¨Äers advice on how to conduct evaluation under speci/f_ic condi-tions, including the use of simulation, proof-of-concepts, end user appli-cation building and evaluation, and technology releases to the research community. Similar advice is oÔ¨Äered on how to document ubicomp sys-tems research, both technically and scienti/f_ically.With this chapter, we hope that researchers are motivated to engage in creating systems support for the ubicomp application area and, with the chapter in hand, have some speci/f_ic pointers and tools for engaging in this research. A/f_ter all, the ubicomp systems research /f_ield is still in its infancy, and there is ample space for new exciting systems innovations.REFERENCESBalan, R., Flinn, J., Satyanarayanan, M., Sinnamohideen, S., and Y ang, H., 2002, /T_he case for cyber foraging, in 1SPDFFEJOHTPGUIFUI8PSLTIPQPO"$.4*(014&VSPQFBO8PSLTIPQ, ACM, New Y ork, NY , pp. 87‚Äì92.Bardram, J. E., and Christensen, H. B., 2007, Pervasive computing support for hos-pitals: An overview of the activity-based computing project. *&&&1FSWBTJWF$PNQVUJOH 6(1): 44‚Äì51.Bardram, J. E., Baldus, H., and Favela, J., 2006, Pervasive computing in hospitals, in 1FSWBTJWF)FBMUIDBSF3FTFBSDIBOE"QQMJDBUJPOTPG1FSWBTJWF$PNQVUJOHJO)FBMUIDBSF, CRC Press, Boca Raton, FL, pp. 49‚Äì78.Bardram, J. E., and Schultz, U. P ., 2004, Contingency management, Palcom Working Note #30, Technical report, Palcom Project IST-002057.Bardram, J. E., 2004, Applications of context-aware computing in hospital work‚Äîexamples and design principles, in 1SPDFFEJOHTPGUIF"$.4ZNQPTJVNPO"QQMJFE$PNQVUJOH, pp. 1574‚Äì1579.Barton, J., and Pierce, J., 2006, Quantifying magic in ubicomp system scenarios, in 6CJTZT4ZTUFN4VQQPSUGPS6CJRVJUPVT$PNQVUJOH8PSLTIPQ, 8th Annual Conference on Ubiquitous Computing (Ubicomp 2006), Orange County, CA, USA, September 17‚Äì21.
93606_Book.indb   898/26/09   1:38:45 PM 90  /UIstop  Jakob Bardram and Adrian FridayBenford, S., Seagar, W ., Flintham, M., Anastasi, R., Rowland, D., Humble, J., Stanton, D., Bowers, J., Tandavanitj, N., Adams, M., Farr, R. J., Oldroyd, A., and Sutton, J.‚Äö 2004, /T_he error of our ways: /T_he experience of self-reported position in a location-based game‚Äö in 1SPDFFEJOHTPGUIFUI*OUFSOBUJPOBM$POGFSFODFPO6CJRVJUPVT$PNQVUJOH	6CJ$PNQ
, Nottingham, September, pp. 70‚Äì87.Borchers, J., Ringel, M., Tyler, J., and Fox, A., 2002, Stanford interactive workspaces: A framework for physical and graphical user interface prototyping, 8JSFMFTT$PNNVOJDBUJPOT*&&& (see also *&&&1FSTPOBM$PNNVOJDBUJPOT) 9(6): 64‚Äì69.Boucher, A., Steed, A., Anastasi, R., Greenhalgh, C., Rodden, T., and Gellersen, H., 2003, Sensible, sensable and desirable: A framework for designing physical interfaces, Technical report, Technical Report Equator-03-003.Brumitt, B., Meyers, B., Krumm, J., Kern, A., and Shafer, S., 2000, EasyLiving: Technologies for intelligent environments, in 1SPDFFEJOHT PG UIF 4FDPOE*OUFSOBUJPOBM4ZNQPTJVNPO)BOEIFMEBOE6CJRVJUPVT$PNQVUJOH, Bristol, UK, 25‚Äì27 September, pp. 12‚Äì29.Chalmers, M., MacColl, I., and Bell, M., 2003‚Äö Seamful design: Showing the seams in wearable computing, *&&&4FNJOBS%JHFTUT (10350), 11‚Äì16.Cheverst, K., Davies, N., Mitchell, K., Friday, A., and Efstratiou, C.‚Äö 2000, Experiences of developing and deploying a context-aware tourist guide: /T_he GUIDE project‚Äö 6th Annual International Conference on Mobile Computing and Networking (MobiCom 2000), Boston, MA, August, ACM Press, New Y ork, NY , pp. 20‚Äì31.Clarkson, P . J., Coleman, R., Keates, S., and Lebbon, C., 2003, *ODMVTJWF%FTJHO%FTJHOGPSUIF8IPMF1PQVMBUJPO, Springer, London.Coulouris, G., Dollimore, J., and Kindberg, T., 2005, %JTUSJCVUFE4ZTUFNT$PODFQUTBOE%FTJHO, 4th ed., Addison-Wesley, Reading, MA.Demers, A., Greene, D., Hauser, C., Irish, W ., Larson, J., Shenker, S., Sturgis, H., Swinehart, D., and Terry, D., 1987, Epidemic algorithms for replicated database maintenance, in 10%$1SPDFFEJOHTPGUIFUIBOOVBM"$.4ZNQPTJVNPO1SJODJQMFTPG%JTUSJCVUFE$PNQVUJOH, ACM Press, New Y ork, NY , pp. 1‚Äì12.Edwards, W . K., Bellotti, V ., Dey, A. K., and Newman, M. W ., 2003, Stuck in the middle‚Äî/T_he challenges of user-centered design and evaluation for infra-structure, in $)*1SPDFFEJOHTPGUIF4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT, ACM Press, New Y ork, NY , pp. 297‚Äì304.Feitelson, D. G., 2005, Experimental computer science: /T_he need for a cultural change, Technical report, School of Computer Science and Engineering, Hebrew University, Jerusalem.Fleck, M., Frid, M., Kindberg, T., O‚ÄôBrien-Strain, E., Rajani, R., and Spasojevic, M., 2002, Rememberer: A tool for capturing museum visits, in 1SPDFFEJOHTPG6CJ$PNQ6CJRVJUPVT$PNQVUJOH, pp. 379‚Äì385.Flintham, M., Anastasi, R., Hemmings, T., Crabtree, A., Greenhalgh, C., and Rodden, T., 2003‚Äö 8IFSF0O-JOF.FFUTPOUIF4USFFUT&YQFSJFODFTXJUI.PCJMF.JYFE3FBMJUZ(BNFT, ACM Press‚Äö New Y ork, NY , pp. 569‚Äì576.Floyd, S., Jacobson, V ., Liu, C.-G., McCanne, S., and Zhang, L., 1997, A reliable multicast framework for light-weight sessions and application level framing‚Äö *&&&"$.5SBOTBDUJPOTPO/FUXPSLJOH 5(6): 784‚Äì803.
93606_Book.indb   908/26/09   1:38:45 PM Ubiquitous Computing Systems  /UIstop  91Fox, A., Davies, N., de Lara, E., Spasojevic, M., and Griswold, W ., 2006, Real-world ubicomp deployments: Lessons learned, *&&&1FSWBTJWF$PNQVUJOH 5(3): 21‚Äì23.Friday, A., Roman, M., Becker, C., and Al-Muhtadi, J., 2005‚Äö Guidelines and open issues in systems support for ubicomp: Re/f_lections on ubisys 2003 and 2004, 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 10: 1‚Äì3.Friday, A., Davies, N., Seitz, J., and Wade, S., 1999, Experiences of using gen-erative communications to support adaptive mobile applications, ,MVXFS%JTUSJCVUFEBOE1BSBMMFM%BUBCBTFT4QFDJBM*TTVFPO.PCJMF%BUB.BOBHFNFOUBOE"QQMJDBUJPOT 7(3): 319‚Äì342.Garlan, D., Siewiorek, D. P ., Smailagic, A.and Steenkiste, P ., 2002, Project Aura: Toward distraction-free pervasive computing, *&&&1FSWBTJWF$PNQVUJOH 2(1): 22‚Äì31.Gaver, W . W ., Beaver, J., and Benford, S., 2003, Ambiguity as a resource for design, in $)*1SPDFFEJOHTPGUIF4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT, ACM Press, New Y ork, NY , pp. 233‚Äì240.Hansen, T. R., Bardram, J. E., and Soegaard, M., 2006, Moving out of the lab: Deploying pervasive technologies in a hospital, *&&&1FSWBTJWF$PNQVUJOH 5(3): 24‚Äì31.Hightower, J., and Borriello, G., 2001, Location systems for ubiquitous computing, $PNQVUFS 34(8): 51‚Äì66.Kephart, J. O., and Chess, D. M., 2003, /T_he vision of autonomic computing, *&&&$PNQVUFS 36(1): 41‚Äì50.Kindberg, T., and Fox, A., 2002, System so/f_tware for ubiquitous computing, 1FSWBTJWF$PNQVUJOH*&&& 1(1): 70‚Äì81.Kindberg, T., Barton, J., Morgan, J., Becker, G., Caswell, D., Debaty, P ., Gopal, G., Frid, M., Krishnan, V ., Morris, H., Schettino, J., Serra, B., and Spasojevic, M., 2002‚Äö People, places, things: Web presence for the real world, .PCJMF/FUXPSLTBOE"QQMJDBUJPOT 7: 365‚Äì376.Kistler, J. J., and Satyanarayanan, M., 1992‚Äö Disconnected operation in the coda /f_ile system, "$.5SBOTBDUJPOTPO$PNQVUFS4ZTUFNT 10(1): 3‚Äì25.Kurkowski, S., Camp, T., and Colagrosso, M., 2005, MANET simulation scenar-ios: /T_he incredibles, "$..PCJMF$PNQVUJOHBOE$PNNVOJDBUJPOT3FWJFX	.$3
 9(4): 50‚Äì61.Lamarca, A., Chawathe, Y ., Consolvo, S., Hightower, J., Smith, I., Scott, J., Sohn, T.,  Howard, J., Hughes, J., Potter, F., Tabert, J., Powledge, P., Borriello, G., and  Schilit, B., 2005, Place Lab: Device positioning using radio beacons in the wild, in 1SPDFFEJOHTPGUIFSE*OUFSOBUJPOBM$POGFSFODFPO1FSWBTJWF$PNQVUJOH, May.Langheinrich, M., 2001, Privacy by design  ‚Äîprinciples of privacy-aware ubiquitous systems, in 6CJDPNQ6CJRVJUPVT$PNQVUJOHvol. 2201,-FDUVSF/PUFTJO$PNQVUFS4DJFODF pp. 273‚Äì291, Springer V erlag, Berlin.Ponnekanti, S., Johanson, B., Kiciman, E., and Fox, A.‚Äö 2003, Portability, extensi-bility and robustness in iROS‚Äö in 1SPDFFEJOHTPGUIF'JSTU*&&&*OUFSOBUJPOBM$POGFSFODFPO1FSWBTJWF$PNQVUJOHBOE$PNNVOJDBUJPOT	1FS$PN
, March, pp. 11‚Äì19.Rogers, Y ., 2006, Moving on from Weiser‚Äôs vision of calm computing: Engaging ubi-comp experiences, 6CJ$PNQ6CJRVJUPVT$PNQVUJOH 4206: 404‚Äì421.
93606_Book.indb   918/26/09   1:38:46 PM 92  /UIstop  Jakob Bardram and Adrian FridayRogers, Y ., Price, S., Fitzpatrick, G., Fleck, R., Harris, E., Smith, H., Randell, C.,Muller, H., O‚ÄôMalley, C., Stanton, D., /T_hompson, M., and Weal, M. J., 2004‚Äö Ambient wood: Designing new forms of digital augmentation for learn-ing outdoors, /T_hird International Conference for Interaction Design and Children (IDC 2004), ACM Press, New Y ork, NY , pp. 1‚Äì9.Roman, M., and Campbell, R. H., 2000‚Äö Gaia: Enabling active spaces, in &81SPDFFEJOHTPGUIFUI8PSLTIPQPO"$.4*(014&VSPQFBO8PSLTIPQ, ACM Press, New Y ork, NY , pp. 229‚Äì234.Roman, R., Hess, C., Cerqueira, R., Ranganathan, A., Campbell, R. H., and Nahrstedt, K., 2002, A middleware infrastructure for active spaces, *&&&1FSWBTJWF$PNQVUJOH 1(4): 74‚Äì83.Satyanarayanan, M., 2001, Pervasive computing: Vision and challenges, 1FSTPOBM$PNNVOJDBUJPOT*&&& 8(4): 10‚Äì17.Salber, D., Dey. A. K., and Abowd, G. D., 1999, /T_he context toolkit: Aiding the development of context-enabled applications, $)*1SPDFFEJOHTPGUIF4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT ACM Press, New Y ork, NY , pp. 434‚Äì441.Schuler, D., and Namioka, A. (Eds.), 1993, 1BSUJDJQBUPSZ%FTJHO1SJODJQMFTBOE1SBDUJDFT, Erlbaum Associates, Hillsdale, NJ.Storz, O., Friday, A., Davies, N., Finney, J., Sas, C., and Sheridan, J., 2006‚Äö Public ubiquitous computing systems: Lessons from the e-campus display deploy-ments‚Äö *&&&1FSWBTJWF$PNQVUJOH 5: 40‚Äì47.Streitz, N. A., Geissler, J., Holmer, T., and Konomi, S., 1999, ILand: An interac-tive landscape for creativity and innovation‚Äö in 1SPDFFEJOHTPGUIF"$.$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT$)*, ACM Press, New Y ork, NY , pp. 120‚Äì127.Terry, D. B., /T_heimer, M. M., Petersen, K., Demers, A. J., Spreitzer, M. J., and Hauser, C. H., 1995, Managing update con/f_licts in bayou, a weakly connected repli-cated storage system, in 40411SPDFFEJOHTPGUIFUI"$.4ZNQPTJVNPO0QFSBUJOH4ZTUFNT1SJODJQMFT, ACM Press, New Y ork, NY , pp. 172‚Äì182.Weiser, M., 1991, /T_he computer for the 21st centur y, 4DJFOUJ“áD"NFSJDBO 265(3): 66‚Äì75.Weiser, M., 1993, Some computer science issues in ubiquitous computing, $PNNVOJDBUJPOTPGUIF"$. 36(7): 74‚Äì84.Zambonelli, F., Jennings, N. R., and Wooldridge, M., 2003, Developing multiagent systems: /T_he Gaia methodology, "$.5SBOTBDUJPOTPO4P/f_twBSF&OHJOFFSJOHBOE.FUIPEPMPHZ 12(3): 317‚Äì370.URLsArduino Project, 2009, Arduino: An Open-Source Electronics Prototyping Platform, http://arduino.cc/.Ballagas, R., Memon, F., Reiners, R., and Borchers, J., 2007, iStuÔ¨Ä mobile: Rapidly Prototyping New Mobile Phone Interfaces for Ubiquitous Computing, http://research.nokia.com/people/tico_ballagas/istuÔ¨Ä_mobile.html.Ballesteros, F. J., Soriano, E., Guardiola, G., de las Heras, P ., de Mingo Gil, S., Higuera, O., Lalis, S., and Garcia, R., 2008, Plan B: An Operating System for Distributed Environments‚Äö http://lsub.org/ls/planb.html.
93606_Book.indb   928/26/09   1:38:46 PM Ubiquitous Computing Systems  /UIstop  93Bardram, J. E., 2005, JCAF: /T_he java context-awareness framework‚Äö http://www. daimi.au.dk/~bardram/jcaf/.Barrag√°n, H., 2006, Wiring‚Äö http://wiring.org.co/.Barton, J. J., 2003, /T_he MeetingMachine: Interactive Workspace Support for Nomadic Users‚Äö http://home.comcast.net/~johnjbarton/ubicomp/mm/.Barton, J. J., Hsieh, T., Johanson, B., Vijayaraghavan, V ., Fox, A., and Shimizu, T., 2003, /T_he MeetingMachine: Interactive workspace support for nomadic users, in 5th IEEE Workshop on Mobile Computing Systems and Applications (WMCSA 2003), Monterey, CA, USA, pp. 2‚Äì12, IEEE Computer Society, October.Beigl, M., Decker, C., Krohn, A., Riedel, T., and Zimmer, T., 2005, /uni03BCParts: Low Cost Sensor Networks at Scale‚Äö http://particle.teco.edu/upart/.Borchers, J., Ringel, M., Tyler, J., and Fox, A., 2006, iROS Meta-Operating system for Interactive Rooms‚Äö http://sourceforge.net/projects/iros/.Cecco, M. D., Dechelle, F., and Maggi, E., 2008, jmax phoenix‚Äö http://sourceforge.net/projects/jmax-phoenix/.Crossbow, 2008, Motes Wireless Modules‚Äö http://www.xbow.com.DTG Research Group, 2005, Cantag Machine Vision Framework‚Äö http://www.cl.cam.ac.uk/research/dtg/research/wiki/Cantag.Frank, E., Hall, M., and Trigg, L., 2008, Weka 3: Data Mining So/f_tware in Java‚Äö http://www.cs.waikato.ac.nz/ml/weka/.Froehlich, J., 2009, MyExperience: A Context-Aware Data Collection Platform‚Äö http://myexperience.sourceforge.net/.Fry, B., and Reas, C., 2001, Processing‚Äö http://processing.org/.Giannantonio, R., Bellifemine, F., and Sgroi, M., 2008, ‚ÄúSPINE (Signal Processing in Node Environment)‚Äö http://spine.tilab.com/.Gravina, R., Guerrieri, A., Iyengar, S., Bonda, F. T., Giannantonio, R., Bellifemine, F., Pering, T., Sgroi, M., Fortino, G., and Sangiovanni-Vincentelli, A., 2008, Demo: Spine (Signal Processing in Node Environment) Framework for Healthcare Monitoring Applications in Body Sensor Networks, in 5th European Conference on Wireless Sensor Networks 2008 (EWSN ‚Äô08), Bologna, Italy, Jan 30‚ÄìFeb 1.Greenhalgh, C., and Egglestone, S. R., 2005, Equip and Equator Component Toolkit (ECT)‚Äö http://equip.sourceforge.net.Hartman, B., Abdulla, L., Klemmer, S., and Mittal, M., 2007 Exemplar: Authoring Sensor Based Interactions‚Äö http://hci.stanford.edu/exemplar/.Hartmann, B., Klemmer, S., Abdulla, L., Mehta, N., Bernstein, M., Burr, B., Robinson-Mosher, A. L., and Gee, J., 2006, d.tools: Enabling Rapid Proto-typing for Physical Interaction Design‚Äö http://hci.stanford.edu/dtools/.Hightower, J., LaMarca, A., and Smith, I., PlaceLab: A Privacy-Observant Location System‚Äö http://www.placelab.org/.Intille, S. S., Larson, K., Munguia Tapia, E., Beaudin, J., Kaushik, P ., Nawyn, J., and Rockinson, R., 2006, Using a Live-in Laboratory for Ubiquitous Computing Research, in 1SPDFFEJOHTPG1&37"4*7&, vol. LNCS 3968, Fishkin, K. P ., Schiele, B., Nixon, P ., and Quigley, A. (Eds.), Springer-V erlag, Berlin, pp. 349‚Äì365, http://architecture.mit.edu/house_n/data/PlaceLab/PlaceLab.htm.
93606_Book.indb   938/26/09   1:38:46 PM 94  /UIstop  Jakob Bardram and Adrian FridayKotz, D., and Henderson, T., 2009, CRAWDAD: Community Resource for Archiving Wireless Data at Dartmouth‚Äö http://crawdad.cs.dartmouth.edu/.Kuryloski, P ., Giani, A., Giannantonio, R., Gilani, K., Gravina, R., Seppa, V .-P ., Seto, E., Shia, V ., Wang, C., Y an, P ., Y ang, A., Hyttinen, J., Sastry, S. S., Wicker, S., and Bajcsy, R., 2008, Dexternet: An Open Platform for Heterogeneous Body Sensor Networks and Its Applications, Tech. Rep. UCB/EECS-2008-174, EECS Department, University of California, Berkeley, December, http://www.eecs.berkeley.edu/Pubs/TechRpts/2008/EECS-2008-174.html.Lamb, P ., Looser, J., Grasset, R., Pintaric, T., Woessner, U., Piekarski, W ., and Seichter, H., ARToolKit: A So/f_tware Library for Building Augmented Reality (AR) Applications‚Äö http://www.hitl.washington.edu/artoolkit/.Li, Y ., and Landay, J., 2008, ActivityStudio: Design and Testing Tools for Ubicomp Applications‚Äö http://activitystudio.sourceforge.net/.Li, Y ., Hong, J., and Landay, J., 2007, Topiary: A Tool for Prototyping Location-Enhanced Applications‚Äö http://dub.washington.edu:2007/topiary/.Macintyre, B., Bolter, J. D., Gandy, M., and Dow, S., 2005, DART: /T_he Designers Augmented Reality Toolkit‚Äö http://www.cc.gatech.edu/dart/.OpenCV Project, 2009, OpenCV (Open Source Computer Vision)‚Äö http://opencv.willowgarage.com/wiki/.Otto, C., Milenkovic, A., Sanders, C., and Jovanov, E., 2008, WHMS: Wearable Health Monitoring Systems‚Äö http://www.ece.uah.edu/~jovanov/whrms/.Phidgets Inc., 2009, Phidgets: Products for USB Sensing and Control‚Äö http://www.phidgets.com/.Pike, R., Presotto, D., Dorward, S., Flandrena, B., /T_hompson, K., Trickey, H., and Winterbottom, P ., 2003, Plan 9 from Bell Labs., http://plan9.bell-labs.com/plan9/.Prideau, J., 2002, CAT: Context Aware Toolkit‚Äö http://www.cs.uoregon.edu/research/wearables/CAT/.Puckette, M. S., 1996, Puredata (PD)‚Äö http://puredata.info/.Rothermel, K., Becker, C., Schiele, G., Handte, M., Wacker, A., and Urbanski, S., 2006, 3PC: Peer 2 Peer Pervasive Computing‚Äö http://3pc.info.Schmidt, D., 2009, Multi-Touch Table, http://eis.comp.lancs.ac.uk/~dominik/cms/, accessed Feb. 27, 2009.Smart-ITs, 2001, http://www.smart-its.org/, accessed Feb. 27, 2009.Sun Microsystems Laboratories, 2004, Sun SPOT: Sun Small Programmable Object Technology‚Äö http://www.sunspotworld.com/.Systronix Inc., 2009, JStamp: Java Embedded Processor‚Äö http://jstamp.systronix.com/.Welsh, M., Wei, P . G.-Y ., Moulton, S., Bonato, P ., and Anderson, P ., 2008, CodeBlue: Wireless Sensors for Medical Care‚Äö http:///f_iji.eecs.harvard.edu/CodeBlue.Y ang, A., Kuryloski, P ., and Bajcsy, R., 2008, W ARD: A Wearable Action Recognition Database‚Äö http://www.eecs.berkeley.edu/~yang/so/f_tware/W AR/.Zicarelli, D., 1997, Max/msp/jitter‚Äö http://www.cycling74.com/.
93606_Book.indb   948/26/09   1:38:46 PM 3CHAPTER Privacy in Ubiquitous ComputingMarc LangheinrichCONTENTS3.1 Introduction 963.1.1 Why a Privacy Chapter in a Ubicomp Book? 973.1.2 Isn‚Äôt Privacy the Same as Security? 973.1.3 What Is in /T_his Chapter? 983.1.3.1 Conclusions 983.2 Understanding Privacy 983.2.1 De/f_ining Privacy 1013.2.1.1 Conclusions 1073.2.1.2 Further Reading 1083.2.2 Motivating Privacy: Do People Care about Privacy? 1083.2.2.1 Conclusions 1133.2.2.2 Further Reading 1143.2.3 Legal Background 1143.2.3.1 Conclusions 1183.2.3.2 Further Reading 1183.2.4 Interpersonal Privacy 1193.2.4.1 Conclusions 1213.2.4.2 Further Reading 1213.3 Technical Solutions for Ubicomp Privacy 1213.3.1 Novel Ubicomp Challenges to Privacy 1223.3.1.1 Collection Scale 1233.3.1.2 Collection Manner 124
93606_Book.indb   958/26/09   1:38:46 PM 96  /UIstop  Marc Langheinrich
3.1  INTRODUCTIONPrivacy is by no means a recent addition to the ubiquitous computing (ubi-comp) research curriculum. In his 1991 4DJFOUJ“áD"NFSJDBO article, Mark Weiser already identi/f_ied it as one of its biggest challenges: ‚ÄúPerhaps key among [the social issues that embodied virtuality will engender] is privacy: hundreds of computers in every room, all capable of sensing people near them and linked by high-speed networks, have the potential to make totalitarianism up to now seem like sheerest anarchy.‚Äù (Weiser, 1991). It would be nice if by now, almost two decades later, we would have a standardset of solutions that we could easily prescribe for any ubicomp system (or any computer system in general): ‚Äúin order to protect privacy, implement subroutines A, B, and C.‚ÄùUnfortunately, privacy is such a complex issue that there is no single solu-tion, no recipe for success, no silver bullet (or set of silver bullets) that will /f_ix a system for us so that it is ‚Äúprivacy-safe.‚Äù What exactly does it mean anyway, for a system to be privacy-safe? Whose privacy does it protect, when, and to what extent? None of these questions can be answered in general. Instead of a simple one-size-/f_its-all recipe, one needs to look into each single system 3.3.1.3 Data Types 1253.3.1.4 Collection Motivations 1263.3.1.5 Data Accessibility 1273.3.2 /T_he Basics: Privacy Enhancing Technologies 1283.3.3 Example: Protecting Smart Spaces 1313.3.4 Example: Protecting RFID Tags 1343.3.4.1 Communication Con/f_identiality and Anticollision Protocols 1383.3.4.2 Access Control/Tag Deactivation 1403.3.4.3 Proxies 1423.3.5 Example: Protecting Location Information 1453.3.5.1 Conclusions 1493.3.5.2 Further Reading 1503.4 How to Address Privacy in Your Ubicomp Work 1513.4.1 Understand Your Application (Consider Users and Use) 1513.4.2 De/f_ine the Problem (/T_hink Attacker Model in Security) 1523.4.3 Know Your Tools (Get the Technical Details Right) 1543.4.3.1 Conclusions 1553.4.3.2Further Reading 155Bibliography 156
93606_Book.indb   968/26/09   1:38:46 PM Privacy in Ubiquitous Computing  /UIstop  97and application in great detail, /f_irst understanding what the system does and what the implications of this are, and then working out how (and why) this needs to be changed in order to reach the right behavior./T_his chapter attempts to provide some guidance for this process: First, by explaining the concept of privacy in more detail, so one understands what it is that should be protected; second, by giving some examples on how technology can safeguard personal information in ubicomp systems. /T_his chapter is not meant as a cookbook that allows one to quickly /f_ind a solution for a particular problem, but rather as a starting point for recog-nizing and approaching privacy issues in one‚Äôs own design, development, or use of ubicomp systems and applications.3.1.1  Why a Privacy Chapter in a Ubicomp Book?Privacy might indeed be an important topic, but one could argue that it would be much better suited for a text on legal or social issues. Why include it in book about ubicomp technology? Privacy and technology are closely intertwined. Shi/f_ts in technology require us to rethink our attitude toward privacy, as suddenly our abilities to see, hear, detect, record, /f_ind, and manipulate others and their lives is greatly enhanced. Ubicomp rep-resents such a technology shi/f_t, and its widespread adoption will signi/f_i-cantly in/f_luence the way we handle personal information.One could still suggest putting this topic in front of people interested in databases or information retrieval in particular, rather than systems or usability evaluation in general. Is privacy not about the storage and processing of data, which in turn is really the job of database and information retrieval specialists? /T_he answer is yes and no. Clearly, the ability to store, process, and analyze information is at the heart of the privacy debate. However, in order to make meaningful choices within any system parameters, one needs to understand the entirety of the system and its applications: What type of information is collected and in what manner? Who needs to have access to such information and for what purpose? How long should this information be stored and in what format, with what levels of accuracy and precision? EÔ¨Äective privacy protection can only work if it addresses the entirety of the information life cycle in each individual ubicomp application.3.1.2  Isn‚Äôt Privacy the Same as Security?Security‚Äîthat is, the con/f_identiality, integrity, and authenticity of informa-tion‚Äîis o/f_ten a necessary ingredient to privacy, as it facilitates the control of information /f_lows (i.e., who gets to know what when?) and helps to ensure 
93606_Book.indb   978/26/09   1:38:46 PM 98  /UIstop  Marc Langheinrichthe correctness of data. However, it is possible to have high levels of secu-rity but no privacy (think surveillance state), or even some sort of privacy without security (e.g., a private table conversation in a busy restaurant). /T_he important insight is that simply implementing some form of security is not enough to ensure privacy. Ensuring the con/f_identiality and authenticity of a particular information does not say anything about how and when this particular piece of information will be VTFE by its designated recipient.3.1.3  What Is in This Chapter?/T_he main focus of this chapter is how ubicomp aÔ¨Äects privacy and what technical methods can be used to counter or mitigate this in/f_luence. However, this requires a clear understanding of what exactly should be pro-tected. A large part of this chapter is therefore dedicated to understanding the concept of privacy /f_irst. Only then can one discuss the particular eÔ¨Äects of ubicomp on privacy and the required technological countermeasures. Of course, privacy issues of ‚Äúregular‚Äù computer systems such as databases o/f_ten apply equally to ubicomp system, simply because most ubicomp appli-cations are built with such standard components. Including technical solu-tions for such computing systems in general would be beyond the scope of this book, so the discussion in this chapter is strictly limited to examples on how particular threats induced by ubicomp technology can be addressed.3.1.3.1  Conclusions 1. Data collection and processing are core components of ubicomp technology. Privacy issues are thus of utmost importance to ubicomp researchers, designers, service providers, and users. 2. Simply oÔ¨Äering strong security does not solve privacy issues. Although security is an integral part of any privacy solution, it fails to address questions such as scope, purpose and use, adequacy, lifetime, or access. 3. To build privacy-aware or privacy-compliant ubicomp systems, we need to understand the nature of privacy, its social and legal reali-ties, and the technical tools at our disposal. /T_his chapter attempts to introduce those three aspects in detail.3.2  UNDERSTANDING PRIVACYImagine your kitchen of the future (it might look like the one shown in Figure 3.1). All appliances‚Äîyour refrigerator, freezer, stove, microwave, but also cabinets, utensils, faucets, and lamps‚Äîare now ‚Äúsmart,‚Äù that is, 
93606_Book.indb   988/26/09   1:38:47 PM Privacy in Ubiquitous Computing  /UIstop  99
they are able to sense their environment and communicate: among them-selves, with you, and with other things and people via the Internet. /T_he famous *OUFSOFUGSJEHF monitors its contents and orders milk and other ingredients before they run out. Your microwave-grill combo interrogates the pizza package to make sure it properly heats and bakes your TV food to perfection. And your faucets, freezer, and stove coordinate the use of warm water and electricity with the local power plant to minimize your energy costs. Ubicomp heaven!Now imagine a few extras: your fridge not only orders milk and other staples if you run low, but also scouts for oÔ¨Äers and coupons from the supermarket. Interestingly enough, the oÔ¨Äers you receive are o/f_ten very diÔ¨Äerent from what your friend‚Äôs fridge receives, who regularly gets dis-counts for expensive organic products (you don‚Äôt). For your convenience, you have allowed your home insurer to periodically query your belong-ings in order to verify that you are suÔ¨Éciently covered. However, a/f_ter having had a number of visitors during the past few months, your insurer yesterday suddenly doubled your premium, claiming that the contents and activities in your kitchen indicated that you no longer have a single-person household. And just now, a police oÔ¨Écer stopped by, asking you to explain the large quantities of hydrogen peroxide stored in your shed 
FIGURE 3.1 /T_he smart kitchen of the future: spy in your home or ultra convenience? (Copyright Anton Volgger. Design by Meier + Steinauer Partner AG, Zurich, Switzerland. Image reprinted with permission.)
93606_Book.indb   998/26/09   1:38:47 PM 100  /UIstop  Marc Langheinrich(sensed by the chemical sensors that monitor its contents for /f_ire safety). Ever since the government passed the Preventing Irregularities through Smart Appliances Act, all household appliances are required by law to report suspicious items and activities directly to law enforcement agencies. Even though you showed the oÔ¨Écer the antique wooden sailboat in your backyard that you are planning to bleach with the hydrogen peroxide, he informed you that your name will be kept on a list used by pharmacies around the country, alerting the authorities of any additional products you buy that could be used for bomb making. Well, at least your appliances have not been broken into yet: Your chaotic neighbor forgot to renew the /f_irewall update for his fridge and promptly had a hacker monitor its use in order to detect longer absences. As soon as your neighbor had le/f_t for a business trip, his apartment address was traded on a local underground bulletin board that, for a small fee, would show ‚Äúinactive‚Äù households on a Google Maps mash-up. Ubicomp heaven?Whether any of the above examples make you question this brave new world of ubiquitous computing depends largely on your personal concep-tion of privacy. Is the automated creation of pro/f_iles for the purpose of oÔ¨Äering you discounts a good thing, even if it might oÔ¨Äer you worse deals than others? Is the detection of inaccurate statements on insurance appli-cations (and thus savings of several millions of dollars) a good thing, even if the system PDDBTJPOBMMZ gets it wrong? And what is so bad about smart appliances that report unlawful behavior to the police, if they stay silent otherwise? If you don‚Äôt do anything wrong, what have you got to hide? And if your data got stolen, maybe you did not protect it well enough?To build ubicomp systems that are privacy-aware or privacy-respecting, one obviously has to /f_irst de/f_ine what exactly is meant by QSJWBDZ. /T_here cer-tainly is no shortage of de/f_initions for privacy, yet no single one seems to work for all cases and disciplines. Section 3.2.1 brie/f_ly summarizes some of them and illustrate the changes the concept of privacy has undergone over time. Motivating privacy is an important part of such a de/f_inition, and Section 3.2.2 looks into current trends and surveys in order to understand what con-sumers and citizens expect in terms of privacy protection. Section 3.2.3 then gives a very short summary of the legal status of privacy protection, as any technical solution will most likely need to conform to local laws and regula-tions. However, not all interactions are governed by laws, in particular, if they do not involve companies or government agencies, but friends and families. Section 3.2.4introduces some concepts from social sciences and psychology that can help understand how people ‚Äúregulate‚Äù access to themselves.
93606_Book.indb   1008/26/09   1:38:47 PM Privacy in Ubiquitous Computing  /UIstop  1013.2.1  DeÔ¨Åning PrivacyPrivacy has been on people‚Äôs minds even before credit cards or the Internet came along. Everybody seems to have some sort of intuitive understanding of what privacy means on a case-by-case basis, yet it is diÔ¨Écult to PCKFDUJWFMZ de/f_ine what exactly it is. Legal scholars have long since grappled with such a de/f_inition, in order to write laws and regulations that describe what type of privacy protections should be granted, and they provide a good start for analyzing this complex topic.One of the earliest legal references to privacy is found in the 1361 +VTUJDFTPGUIF1FBDF"DU in England, which laid down sentences for peeping Toms and eavesdroppers. /T_he famous saying ‚ÄúMy home is my castle‚Äù dates back to the eighteenth century, where the British parliamentarian William Pitt said in a 1763 speech in Parliament: ‚Äú/T_he poorest man may in his cottage bid de/f_iance to all the forces of the Crown. It may be frail‚Äîits roof may shake‚Äîthe wind may blow through it‚Äîthe storm may enter‚Äîthe rain may enter‚Äîbut the King of England cannot enter‚Äîall his force dares not cross the threshold of the ruined tenement!‚Äù However, as old as the con-cept of privacy is, it stills seems unclear exactly what it means today.One of the most popular de/f_initions of privacy comes from two U.S. lawyers, Samuel Warren and Louis Brandeis (see Figure 3.2), who wrote 
FIGURE 3.2 Louis Brandeis, coauthor of /T_hF3JHIUUP1SJWBDZ. (Harris & Ewing, Collection of the Supreme Court of the United States. Image reprinted with permission.)
93606_Book.indb   1018/26/09   1:38:48 PM 102  /UIstop  Marc Langheinrichthe /f_irst legal article that framed privacy as a tort action, that is, a civil wrong that one could sue for compensation of injuries. In their 1890 )BSWBSE-BX3FWJFX paper, Warren and Brandeis (1890) described pri-vacy as ‚Äúthe right to be let alone,‚Äù a state of solitude and seclusion that would ensure a ‚Äúgeneral right to the immunity of the person, the right to one‚Äôs personality.‚ÄùIt is interesting to look into the particular circumstances that prompted Warren and Brandeis to write that article. In their introduction, they write ‚Äúnumerous mechanical devices threaten to make good the predic-tion that ‚Äòwhat is whispered in the closet shall be proclaimed from the housetops‚Äô.‚Äù What may sound like an accurate description of the new pos-sibilities of ubiquitous computing systems is actually a reference to the technical progress in the /f_ield of photography at that time. Before 1890, getting one‚Äôs picture taken usually required visiting a photographer in his studio and sitting still for a considerable amount of time, otherwise the picture would be blurred. But on October 18, 1884, George Eastman, the founder of the Eastman Kodak Company, received U.S. Patent #306 594 for his invention of the modern photographic /f_ilm (Figure 3.3). Instead of having to use the heavy glass plates in the studio, everybody could now take Kodak‚Äôs Camera out on the streets and take a snapshot of just about anybody without their consent. It was this rise of unsolicited pictures‚Äîpictures that started to appear more and more o/f_ten in the ever-expanding tabloid newspapers‚Äîthat prompted Warren and Brandeis to paint this dark picture of a world without privacy.Today‚Äôs developments of ‚ÄúSmart Labels,‚Äù ‚ÄúMemory Ampli/f_iers,‚Äù and ‚ÄúSmart Dust‚Äù seem to mirror the sudden technology shi/f_ts experienced by Warren and Brandeis, opening up new forms of social interactions that change one‚Äôs expectation of privacy. However, even the strong resemblance of technological progress cannot ignore the fact that their ‚Äúright to be let alone‚Äù looks hardly practicable today: With the multitude of interactions in today‚Äôs world, consumers /f_ind themselves constantly in need of dealing with people that do not know them in person, hence require some form of information from them in order to judge whether such an interaction would be bene/f_icial. From opening bank accounts, applying for credit, obtaining a personal yearly train pass, or buying books online‚Äîone con-stantly has to disclose part of one‚Äôs personal information in order to par-ticipate in today‚Äôs modern society. Preserving privacy through isolation is just not as much an option anymore as it was 100 years ago.
93606_Book.indb   1028/26/09   1:38:48 PM Privacy in Ubiquitous Computing  /UIstop  103
A more up-to-date de/f_inition thus comes from the 1960s, when automated data processing /f_irst took place on a national scale. Alan Westin, professor emeritus of public law and government at Columbia University, de/f_ined privacy in his groundbreaking book 1SJWBDZBOE'SFFEPN (Westin, 1967) as follows:Privacy is the claim of individuals, groups, or institutions to deter-mine for themselves when, how, and to what extent information about them is communicated to others./T_his de/f_inition is o/f_ten described as JOGPSNBUJPOQSJWBDZ, contrasting it to Warren and Brandeis‚Äô de/f_inition of privacy as solitude, of being ‚Äúlet alone.‚Äù Whereas solitude might be an eÔ¨Äect of information privacy, Westin stressed the fact that ‚Äúthe individual‚Äôs desire for privacy is never absolute, since participation in society is an equally powerful desire.‚Äù However, as 
FIGURE 3.3  /T_he Kodak camera suddenly allowed anybody to take and instant photograph. (Eastman Kodak Company. Images printed with permission.)
93606_Book.indb   1038/26/09   1:38:49 PM 104  /UIstop  Marc LangheinrichWarren and Brandeis‚Äô de/f_inition suggests, being in control of one‚Äôs per-sonal data is only one facet of privacy. Back in the nineteenth century, the protection of the home‚Äîor UFSSJUPSJBMQSJWBDZ‚Äîwas the most preva-lent aspect of privacy protection. Equally important was the idea of CPEJMZQSJWBDZ, the protection from unjusti/f_ied strip searches or medical tests or experiments (e.g., drug testing). /T_hese two facets are also o/f_ten called local privacy or physical privacy. And with the invention of the telegraph and telephone in the late nineteenth century, the rise of modern telecommuni-cation required reevaluation of the well-known concept of DPNNVOJDBUJPOQSJWBDZ, previously manifested in the secrecy of sealed letters.Over the past 200 years, the focus of privacy has thus shi/f_ted from things that one could perceive directly with one‚Äôs own eyes and ears (bodily pri-vacy and territorial privacy) to more ‚Äúremote‚Äù forms of privacy such as communication privacy and information privacy, where the privacy viola-tions are undertaken at a distance. It is interesting to note, however, that ubicomp has made those seemingly long-solved issues of bodily and ter-ritorial privacy become highly relevant again: Smart appliances, wearable computers, and activity recognition algorithms allow one to invade the bodily and territorial privacy of another person‚Äînot with one‚Äôs own eyes and ears, but from a distance that had previously constituted the realm of communication and information privacy. A smart fridge might disclose the activities in a home to a grocery distributor, whereas a smart shirt would send a stream of vital signs to a remote health center or insurance provider./T_he limitation of both Warren and Brandeis‚Äô and Westin‚Äôs de/f_inition of privacy is that they do not specify exactly how one‚Äôs privacy should be protected. In order to better understand how to build technology that safeguards privacy, one needs to look at how one‚Äôs privacy can be violated. /T_his is important because privacy, just as security, is o/f_ten not a goal in itself, not a service that people want to subscribe to, but rather an expec-tation of being in a state of protection without having to actively pursue it. For example, most users would prefer systems without passwords or similar access control mechanisms, as long as they would not suÔ¨Äer any disadvantages from this. Only if any of their data are maliciously deleted or illegally copied, users will regret not having any security precautions in place. So what would be the analogy to a break-in from a privacy point of view?Gary T. Marx, professor emeritus for sociology at the Massachusetts Institute of Technology, has done extensive research in the areas of privacy 
93606_Book.indb   1048/26/09   1:38:50 PM Privacy in Ubiquitous Computing  /UIstop  105and surveillance, identifying QFSTPOBMCPSEFSDSPTTJOHT as a core concept: ‚ÄúCentral to our acceptance or sense of outrage with respect to surveillance‚Ä¶are the implications for crossing personal borders‚Äù (Marx, 2001). Marx dif-ferentiates between four such border crossings that are perceived as privacy violations:Natural borders‚ÄîPhysical limitations of observations, such as walls tand doors, clothing, darkness, but also sealed letters and telephone calls. Even facial expressions can form a natural border against the true feelings of a person.Social borders‚ÄîExpectations about con/f_identiality for members of tcertain social roles, such as family members, doctors, or lawyers. /T_his also includes expectations that your colleagues will not read personal fax messages addressed to you, or material that you le/f_t  lying around the photocopy machine.Spatial or temporal borders‚Äî/T_he usual expectations of people that tparts of their life, both in time and social space, can remain sepa-rated from each other. /T_his would include a wild adolescent time that should not interfere with today‚Äôs life as a father of four, or diÔ¨Äer-ent social groups, such as your work colleagues and friends in your favorite bar.Borders due to ephemeral or transitory eÔ¨Äects‚Äî/T_his describes what tis best known as a /f_leeting moment, an unre/f_lected utterance or action that one hopes gets forgotten soon, or old pictures and letters that one puts out in the trash. Seeing audio or video recordings of such events later, or observing someone si/f_ting through our trash, will violate one‚Äôs expectations of being able to have information sim-ply pass away unnoticed or hopefully forgotten.Whenever your personal information crosses any of these borders with-out your knowledge, your potential for possible actions‚Äîyour decisional privacy‚Äîgets aÔ¨Äected. When someone at the oÔ¨Éce suddenly mentions family problems that you have at home, or if circumstances of your youth suddenly are being brought up again even though you assumed that they were long forgotten, you perceive a violation of your zonal, informational, or communication privacy. /T_his violation is by no means an absolute mea-sure, but instead depends greatly on the individual circumstances, such as the type of information transgressed, or the speci/f_ic situation under which 
93606_Book.indb   1058/26/09   1:38:50 PM 106  /UIstop  Marc Langheinrich
the information is disclosed. /T_he eÔ¨Äects such border crossings have on people‚Äôs lives, as well as the chances that they actually happen, are there-fore a highly individual assertion.In a similar fashion, Solove (2006) has attempted to create a QSJWBDZUBYPOPNZ, that is, an overview of the activities that might lead to privacy problems. He groups such activities into four sets (see Figure 3.4): informa-tion collection, information processing, information dissemination, and invasion. Starting from the aÔ¨Äected individual, the data subject, various entities collect information. Most of the time this will be voluntary, but hidden or forced collections lead to TVSWFJMMBODF or JOUFSSPHBUJPO activities that violate the data subject‚Äôs privacy. Once data holders process the data, that is, store, combine, search, or otherwise use it, they might engage in a number of activities that directly threaten the subject‚Äôs privacy: through BHHSFHBUJPO (multiple information sources might be linked that the sub-ject might prefer to be separated); JEFOUJ“áDBUJPO (which ties a particular information or activity to a person); acts of JOTFDVSJUZ (a failure to properly protect the stored information that leads to improper access); TFDPOEBSZVTF activities (using the collected data for a purpose other than what was agreed with the data subject); and FYDMVTJPO (the lack of letting the data subject know what data the holder has on /f_ile about her and how it is used). Information dissemination activities then propagate the information InformationProcessingDataHoldersInformationDisseminationBreach of ConÔ¨ÅdentialityDisclosureExposureIncreased AccessibilityBlackmailAppropriationDistortionInvasionsIntrusionDecisional InterferenceInformationCollectionSurveillanceInterrogationAggregationIdentiÔ¨ÅcationInsecuritySecondary UseExclusion
FIGURE 3.4 Solove‚Äôs privacy taxonomy. (From D.J. Solove. 6OJWFSTJUZPG1FOOTZMWBOJB-BX3FWJFX(3), 477‚Äì560. With permission of the author.)
93606_Book.indb   1068/26/09   1:38:50 PM Privacy in Ubiquitous Computing  /UIstop  107outward from the data holder: a CSFBDIPGDPO“áEFOUJBMJUZ is breaking a promise of keeping information con/f_idential; EJTDMPTVSF means the pub-lication of truthful facts about a person that might aÔ¨Äect the person‚Äôs reputation; FYQPTVSF involves revealing private details, for example, nude pictures or bodily disabilities; JODSFBTFEBDDFTTJCJMJUZ concerns the publica-tion of, for example, telephone numbers or email addresses; CMBDLNBJM is the threat of disclosing information; BQQSPQSJBUJPO is the use of the data subject‚Äôs identity to serve someone else‚Äôs interest; and EJTUPSUJPOactivities concern the dissemination of false or misleading information about the data subject. Solove also lists JOUSVTJPO into one‚Äôs life and EFDJTJPOBMJOUFSGFSFODFas privacy problems, even though they do not necessarily involve the use of personal information (but they o/f_ten do).Although Solove has drawn up the framework primarily to aid in discussing legal protections in the domain of privacy and tort law, his taxonomy is nevertheless also useful for technologists. Given his compre-hensive list of privacy-related wrongdoings, one can systematically analyze whether a particular piece of so/f_tware and/or technology might increase the chances of such problem occurring, and how to mitigate it.3.2.1.1  Conclusions 1. Privacy has a long history and is by no means a fad of modern times. 2. Technological shi/f_ts o/f_ten open up new ways of how privacy can be aÔ¨Äected, thus prompting the need to reassess one‚Äôs understanding of what privacy is and how it should be protected. With the advent of modern telecommunication and computers, society‚Äôs focus changed from bodily and territorial privacy to communication and informa-tion privacy. Ubicomp‚Äôs embedded and ubiquitous sensors now reas-sert the importance of bodily and territorial privacy. 3. A /f_inal de/f_inition of privacy is diÔ¨Écult. Privacy is related to, but not identical with, secrecy, solitude, liberty, autonomy, freedom, inti-macy, and personhood. 4. Privacy violations can be seen as involuntary border crossings, that is, whenever information permeates barriers without our help (or contrary to our eÔ¨Äorts)‚Äîbarriers such as sealed letters, closed doors, the trust of con/f_identiality with a close friend, or the passage of time.
93606_Book.indb   1078/26/09   1:38:50 PM 108  /UIstop  Marc Langheinrich3.2.1.2 Further ReadingKen Gormley: One hundred years of privacy. 8JTDPOTJO-BX3FWJFX, 1335, 1992.Examines the evolution of privacy law in the United States, with a particu-lar focus on the varying de/f_initions of privacy over time. Available from: http://cyber.law.harvard.edu/privacy/Gormley--100%20Y ears%20of%20Privacy.htmPaul Sieghart: 1SJWBDZBOE$PNQVUFST. Latimer, London, UK, 1976.One of the earliest books on modern information privacy and still an insight-ful read about the consequences of computerized data processing.Daniel Solove: 6OEFSTUBOEJOH1SJWBDZ. Harvard University Press, Cambridge, MA, 2008.Solove oÔ¨Äers detailed legal analyses of various privacy problems, based on his taxonomy (cf. Figure 3.4). /T_he book is based on an earlier journal article (Solove, 2006), which is freely available for download: http://papers.ssrn.com/sol3/papers.cfm?abstract_id=6676223.2.2  Motivating Privacy: Do People Care about Privacy?De/f_ining privacy might be a fruitless endeavor if its goals remain unclear. Why is it important to protect one‚Äôs privacy? What can be gained by pro-viding privacy, what would be at stake if it was lost?Another way of diÔ¨Äerentiating the various conceptions of privacy can be found by distinguishing the various eÔ¨Äects privacy has on people‚Äôs lives, grouping them around the three functional concepts of zonal, rela-tional, and decisional privacy. Zonal privacy protects certain spaces, such as one‚Äôs home, workplace, or car. Relational privacy protects the relation-ships in an individual‚Äôs life, such as intimate family relations between hus-band and wife, or between mother and child. Decisional privacy is what Beate R√∂ssler, professor for philosophy at the University of Amsterdam, calls ‚Äúsecuring the interpretational powers over one‚Äôs life,‚Äù the freedom to decide for oneself ‚Äúwho do I want to live with; which job to take; but also: what clothes do I want to wear‚Äù (R√∂ssler, 2001).*Privacy is thus needed for the autonomy of the individual, to protect one‚Äôs independence in making choices central to personhood. Without privacy, such personal choices would inevitably have to be done in the open, with society at large (e.g., friends, family, neighbors, colleagues, superiors, and subordinates) scrutinizing and judging them, thus leaving no margin for error. Privacy provides us with room to experiment, a space to explore choices and values, in order to /f_ind the right balance between * Quote translated from the original German text by the author.
93606_Book.indb   1088/26/09   1:38:51 PM Privacy in Ubiquitous Computing  /UIstop  109our own goals and society‚Äôs expectations. Westin (1967) describes this as follows:Each person is aware of the gap between what he wants to be and what he actually is, between what the world sees of him and what he knows to be his much more complex reality. In addition, there are aspects of himself that the individual does not fully understand but is slowly exploring and shaping as he develops.Westin‚Äôs allegory of playing roles in everyday life has its roots in the interaction theory of sociologist Erving GoÔ¨Äman, who described the fact that people routinely disclose and withhold information about them-selves in a very selective fashion in order to maintain diÔ¨Äerent fronts, or GBDFT, for diÔ¨Äerent audiences. /T_his also connects with what Westin calls the emotional release functionality of privacy, moments oÔ¨Ä stage, where an individual can be himself, /f_inding relief from the various roles he plays on any given day (Westin, 1967): ‚Äústern father, loving husband, car-pool comedian, skilled lathe operator, union steward, water-cooler /f_lirt, and American Legion committee chairman.‚Äù Equally important in this respect is the ‚Äúsafety-value‚Äù function of privacy, for example, the ‚Äúminor non-compliance with social norms,‚Äù and to ‚Äúgive vent to their anger at ‚Äòthe system,‚Äô ‚Äòcity hall,‚Äô the boss‚Äù:/T_he /f_irm expectation of having privacy for permissible deviations is a distinguishing characteristic of life in a free society./parenleft.capWESTIN, 1967/parenright.capOne important aspect of motivating privacy is, of course, to ask the data subjects directly. What type of information about yourself do you consider private? What type of actions would you consider to be privacy invasive? /T_here are and have been many such surveys, the most prominent ones per-haps by Alan Westin, who has conducted more than 30 such surveys in the United States since 1978. In most of these surveys, Westin provided a sum-mary that classi/f_ied the respondents into three categories‚Äîprivacy funda-mentalists, privacy pragmatists, and privacy unconcerned‚Äîbased on their replies. Westin described privacy fundamentalists as ‚Äúgenerally distrustful of organizations that ask for their personal information‚Äù and ‚Äúworried about the accuracy of computerized information and additional uses made of it.‚Äù 
93606_Book.indb   1098/26/09   1:38:51 PM 110  /UIstop  Marc LangheinrichPragmatists instead would ‚Äúweigh the bene/f_its to them of various consumer opportunities and services, protections of public safety or enforcement of personal morality against the degree of intrusiveness of personal infor-mation sought and the increase in government power involved,‚Äù whereas unconcerned would be ‚Äúgenerally trustful of organizations collecting their personal information, comfortable with existing organizational procedures and uses, and ready to forego privacy claims to secure consumer service bene/f_its or public order values.‚Äù Westin measured the distribution of these three types over the years, typically /f_inding about 55‚Äì60% pragmatists, 25‚Äì30% fundamentalists, and 10‚Äì20% unconcerned (see Figure 3.5).As to the actual data that are considered private, answers similarly dif-fer. In a November 1998 survey (see Figure 3.6), administered among 381 Internet users in the United States on comfort levels for disclosing per-sonal information online, Cranor et al. (1999) found that large numbers Pragmatists64%Fundamentalists26%Unconcerned10%
199920002001200310266483458632512202555Pragmatists FundamentalistsUnconcerned
FIGURE 3.5 Westin Core Privacy Orientation Index, diÔ¨Äerentiating bet-ween privacy pragmatists, fundamentalists, and unconcerned. (Data from Westin, as cited by Kumaraguru and Cranor, 2005.)(a)
(b)
93606_Book.indb   1108/26/09   1:38:52 PM Privacy in Ubiquitous Computing  /UIstop  111
were always or usually comfortable with disclosing their email address (76%), but only half would be comfortable giving out their full name (54%) or postal address (44%). Few said they would be comfortable giving out their telephone number (11%). A 2007 poll* among 1200 U.S. adults also found strong diÔ¨Äerences in privacy perception between diÔ¨Äerent age groups. For example, only 35.6% of 18- to 24-year-olds consider someone posting a picture of them in a swimsuit to be an invasion of their privacy, compared to 65.5% of other respondents, and only 19.6% of 18- to 24-year-olds consider the publication of their dating pro/f_iles to be an invasion of their privacy, compared to 54.6% of other respondents.At the same time, however, there is ample evidence that people value their privacy far less than they indicate in their survey replies. In Germany, recent polls show that some 64% of all citizens carry at least one consumer loyalty card with them at all times, with 34% of respondents using it for almost every purchase (TNS Emnid, 2006). Obviously, many of today‚Äôs consumers are willing to disclose detailed shopping records in return for * What is Privacy? Poll Exposes Generational Divide on Expectations of Privacy, Zogby/Congressional Internet Caucus Advisory Committee Survey. January 31, 2007 (http://www.zogby.com/search/ReadNews.dbm?ID=1244).Respondents Who Are Always or UsuallyComfortable Providing InformationFavorite TV showFavorite snackEmail addressAgeComputer infoFull namePostal addressMedical infoIncomePhone numberCredit card #Social security #82%80%76%69%63%54%44%18%17%11%3%1%FIGURE 3.6 Results of a 1998 survey among 381 U.S. Internet users regard-ing the disclosure of personal information online. (Data from Cranor, Reagle, and Ackerman, 1999.)
93606_Book.indb   1118/26/09   1:38:52 PM 112  /UIstop  Marc Langheinrichsavings of o/f_ten less than 0.5%. Several surveys found that users of (imagi-nary or prototypical) location-based services would not mind sharing this information widely with companies or other interested parties, given a small remuneration (Danezis et al., 2005). Some scholars have called for a ‚Äúprivacy as property‚Äù approach, where personal data becomes a commod-ity that people can sell, arguing that market forces might do a better job in protecting privacy than laws and regulations alone.* And the recent rise of publicly available personal information on blogs and social network-ing sites continues to astonish sociologists and legal scholars alike (Solove, 2007).‚Ä†Should people be allowed to sell large parts of their personal data, maybe even on a lifetime contract? Is there a bene/f_it to having privacy, even if the data subject does not want it? One important alternative moti-vation for privacy goes beyond the value for the individual, and sees pri-vacy as a social good necessary for the functioning of a democratic society. Representative of this paradigm shi/f_t was the so-called ‚Äúcensus-verdict‚Äù of the German federal constitutional court (Bundesverfassungsgericht) in 1983, which extended the existing right to privacy of the individual (Pers√∂nlichkeitsrecht) with the right of TFMGEFUFSNJOBUJPOPWFSQFSTPOBMEBUB (informationelle Selbstbestimmung). /T_he judgment reads as follows:/T_hose who cannot with suÔ¨Écient surety be aware of the personal information about them that is known in certain parts of their social environment, and who cannot judge the amount of informa-tion that potential communication partners may know about them, can be seriously inhibited in their freedom to plan and decide in a self-determined manner. A society, in which the individual cit-izen would not be able to /f_ind out who knows what when about them, would not be reconcilable with the right of self-determination over personal data. /T_hose who are unsure if deviant attitudes and actions are ubiquitously noted and permanently stored, processed, or distributed, will try not to stand out with their behavior. [‚Ä¶] /T_his would not only limit the chances for individual develop-ment, but also aÔ¨Äect public welfare, since self-determination is an * See Litman (2000) for an overview and a critique.‚Ä† See, for example, http://www.davidhenderson.com/2009/01/21/key-online-in/f_luencer/ or http://www.seo-pr-tips.com/2009/01/26/facebook-new-big-brother/ for recent examples of online self-disclosure of personal information gone wrong.
93606_Book.indb   1128/26/09   1:38:52 PM Privacy in Ubiquitous Computing  /UIstop  113essential requirement for a democratic society that is built on the participatory powers of its citizens.*/T_he concept of self-determination over personal data constitutes an important part of modern privacy legislation with respect to ensuring the autonomy of the individual. First, it extended classical data protection principles with a participatory approach, which would allow the individual to decide beyond a ‚Äútake it or leave it‚Äù choice over the collection and use of his or her personal information. Second, it frames privacy protection no longer as only an individual right, but emphasizes its positive societal role. Privacy is thus seen not as an individual fancy, but as an obligation of a democratic society, as Julie Cohen (2000) notes‚Ä†:Prevailing market-based approaches to data privacy policy‚Ä¶treat preferences for informational privacy as a matter of individual taste, entitled to no more (and o/f_ten much less) weight than prefer-ences for black shoes over brown, or red wine over white. But the values of informational privacy are far more fundamental. A degree of freedom from scrutiny and categorization by others promotes important noninstrumental values, and serves vital individual and collective ends.3.2.2.1  Conclusions 1. Privacy plays an important role in human relationships, enabling us to create intimacy, as well as in personal development, supporting decisional autonomy. 2. Many people wish to control the /f_low of information about them-selves, but they o/f_ten diÔ¨Äer widely about what types of information they want to control. 3. Although public interest o/f_ten con/f_licts with the privacy of the indi-vidual, there is a strong societal bene/f_it in oÔ¨Äering its members at least some degree of freedom from scrutiny and categorization.* BVerfGE 65, 154. Translation by the author. See http://www.servat.unibe.ch/law/dfr/bv065001.html for the full text in German. /T_he quote comes from paragraph 154 (as indi-cated on the right-hand side of the page).‚Ä† As reprinted in the work of Solove, Rotenberg, and Schwartz (2006).
93606_Book.indb   1138/26/09   1:38:53 PM 114  /UIstop  Marc Langheinrich3.2.2.2 Further ReadingColin J. Bennett and Charles D. Raab: /T_hF(PWFSOBODFPG1SJWBDZ. MIT Press, Cambridge, MA, 2006.Gives an excellent overview on international privacy protection policy and examines regulatory instruments, particularly in light of technological change and globalization. Argues that privacy related problems are as much public policy issues as they are legal and technological ones.Simson Gar/f_inkel: %BUBCBTF/BUJPO. O‚ÄôReilly, Sebastopol, CA, 2000.A vivid illustration of the myriad data collections taking place today, and the danger these might pose to the individual.Daniel Solove: /T_hF'VUVSFPS3FQVUBUJPO. Y ale University Press, New Haven, CT. 2008.Discusses how recent trends in publishing personal information online‚Äîboth by ourselves and by our friends or enemies‚Äîcan seriously aÔ¨Äect personal freedom and self-development. /T_he full text is licensed under a creative commons and is freely available at http://docs.law.gwu.edu/facweb/dsolove/Future-of-Reputation/text.htm3.2.3  Legal BackgroundData protection and privacy laws provide an important aspect for under-standing both the ‚ÄúWhy?‚Äù as well as the ‚ÄúHow?‚Äù of privacy protection. Laws and regulation mirror a social process that de/f_ines, for a particular culture, a set of practices that are acceptable and unacceptable. Looking at privacy laws thus helps us understand what society envisions privacy to be. At the same time, laws are also tools that may complement, support, or in turn rely on technical privacy tools./T_he work of Warren and Brandeis in 1890 argued for a ‚Äúright to pri-vacy‚Äù in the realm of UPSUMBX, a part of the law that provides remedies for civil wrongs. In the 1960s, William L. Prosser described a set of four QSJWBDZUPSUT that have since become established legal concepts (cf. with Solove‚Äôs extended taxonomy in Figure 3.3): 1. Intrusion upon seclusion or solitude, or into private aÔ¨Äairs 2. Public disclosure of embarrassing private facts 3. Publicity that places a person in a false light in the public eye 4. Appropriation of name or likenessWhereas tort law addresses con/f_licts between two private parties, QSJWBDZMBX or EBUBQSPUFDUJPOMBX regulates how the government and compa-nies can collect and process personal information. /T_he basis for all modern 
93606_Book.indb   1148/26/09   1:38:53 PM Privacy in Ubiquitous Computing  /UIstop  115privacy laws are the Fair Information Principles, which were drawn up in the early 1980s by the Organization for Economic Cooperation and Development (OECD) and which describe eight practical measures aimed at harmonizing the processing of personal data in its member countries. By setting out core principles, the organization hoped to ‚Äúobviate unnec-essary restrictions to trans-border data /f_lows, both on- and oÔ¨Ä-line.‚Äù /T_he eight principles are as follows:* 1. $PMMFDUJPO-JNJUBUJPO1SJODJQMF. /T_here should be limits to the collec-tion of personal data and any such data should be obtained by lawful and fair means and, where appropriate, with the knowledge or con-sent of the data subject. 2. %BUB2VBMJUZ1SJODJQMF. Personal data should be relevant to the pur-poses for which they are to be used, and, to the extent necessary for those purposes, should be accurate, complete, and kept up-to-date. 3. 1VSQPTF4QFDJ“áDBUJPO1SJODJQMF. /T_he purposes for which personal data are collected should be speci/f_ied no later than at the time of data collection and the subsequent use limited to the ful/f_illment of those purposes or such others as are not incompatible with those purposes and as are speci/f_ied on each occasion of change of purpose. 4. 6TF-JNJUBUJPO1SJODJQMF. Personal data should not be disclosed, made available, or otherwise used for purposes other than those speci/f_ied in accordance with the 1VSQPTF4QFDJ“áDBUJPO principle except (a) With the consent of the data subject or (b) By the authority of law 5. 4FDVSJUZ4BGFHVBSET1SJODJQMF. Personal data should be protected by reasonable security safeguards against such risks as loss or unauthor-ized access, destruction, use, modi/f_ication, or disclosure of data. 6. 0QFOOFTT1SJODJQMF. /T_here should be a general policy of openness about developments, practices, and policies with respect to personal data. Means should be readily available of establishing the existence and nature of personal data, and the main purposes of their use, as well as the identity about usual residence of the data controller.* See http://www.oecd.org/document/18/0,2340,en_2649_34255_1815186_1_1_1_1,00.html.
93606_Book.indb   1158/26/09   1:38:53 PM 116  /UIstop  Marc Langheinrich 7. *OEJWJEVBM1BSUJDJQBUJPO1SJODJQMF. An individual should have the right to (a) Obtain from a data controller, or otherwise, con/f_irmation of whether the data controller has data relating to him (b) Have communicated to him, data relating to him i. Within a reasonable time ii. At a charge, if any, that is not excessive iii. In a reasonable manner iv. In a form that is readily intelligible to him (c) Be given reasons if a request made under subparagraphs (a) and (b) is denied, and to be able to challenge such denial (d) Challenge data relating to him and, if the challenge is successful, to have the data erased, recti/f_ied, completed, or amended 8. "DDPVOUBCJMJUZ1SJODJQMF. A data controller should be accountable for complying with measures that give eÔ¨Äect to the principles stated above.Even though the OECD principles carry no legal obligation, they nevertheless constitute an important international consensus that has substantially in/f_luenced national privacy legislation in the years since. Consequently, they provide a good starting point to measure any ubicomp application against, in order to assess its privacy compliance: Is the col-lection limitation principle adequately addressed? Can data quality be ensured? Are reasonable security safeguards in place? And how are data subject participation and data controller accountability supported in the system?In practice, it depends on national legislation how these principles are incorporated into actual regulations. In today‚Äôs legal landscape, two main approaches to privacy legislation exist: the sectorial approach, favored in the United States, and the omnibus approach in Europe. U.S. legislation features strong, overarching privacy laws only for the federal government, whereas state governments and private organizations are regulated on an ‚Äúas-needed‚Äù basis with a variety of highly focused laws, such as the Driver‚Äôs Privacy Protection Act of 1994, which safeguards an individual‚Äôs 
93606_Book.indb   1168/26/09   1:38:53 PM Privacy in Ubiquitous Computing  /UIstop  117motor vehicle record, or the Video Privacy Protection Act of 1988, which limits access to customers‚Äô video rental records. Laws protecting /f_inan-cial (Financial Modernization Act, also known as Gramm‚ÄìLeach‚ÄìBliley Act) and health records (Health Insurance Portability and Accountability Act) are limited and only went into eÔ¨Äect in 2001 and 2003, respectively. Probably most relevant to ubicomp applications are recent eÔ¨Äorts in several U.S. states to address radio frequency identi/f_ication (RFID) technology* and several rulings involving location privacy,‚Ä† although traditional pri-vacy law that addresses privacy at home, at school, or at work, is of course equally relevant (see, e.g., Solove and Schwartz, 2009, for an overview).On the other side of the Atlantic, Europe has long since favored over-arching frameworks that apply to both governments and commercial enti-ties. Probably the most in/f_luential pieces of privacy legislation in recent years is the 1995 ‚ÄúDirective 95/46/EC of the European Parliament and of the Council of 24 October 1995 on the protection of individuals with regard to the processing of personal data and on the free movement of such data‚Äù‚Ä° (o/f_ten called the Data Protection Directive or ‚Äúthe Directive‚Äù for short). It requires all member states of the European Union (EU)¬ß to enact national law that oÔ¨Äers the same level of privacy protections as those set forth in the Directive, in eÔ¨Äect harmonizing privacy law across all EU member states and thus ensuring the free /f_low of information that the OECD had in mind with their fair information principles. /T_he Directive was complemented by Directive 1997/66/EC¬∂ and later Directive 2002/58/EC** (which replaced 1997/66/EC) to oÔ¨Äer speci/f_ic guidelines on ‚Äúthe processing of personal data and the protection of privacy in the electronic communications sector‚Äù (called the ‚Äúe-Privacy Directive‚Äù for short). Although directive 1995/46 sets * See, for example, the Identity Information Protection Act of 2007 (SB30) in California (www.eÔ¨Ä.org/issues/r/f_id/sb30facts), the New Hampshire House Bill 478 (r/f_idlawblog.mckennalong.com/2009%20NH%20H%20478.pdf) and the recently proposed New York Assembly Bill A275 (r/f_idlawblog.mckennalong.com/archives/privacy-new-york-assembly-bill-a275.html). At least 12 U.S. states have already introduced RFID legislation, see www.ncsl.org/programs/lis/privacy/r/f_id05.htm for an overview.‚Ä† See, for example, the recent ruling in Pennsylvania on mobile phone tracking (www.eÔ¨Ä.org/press/archives/2008/09/11) or GPS tracking in 64WT+POFT (www.eÔ¨Ä.org/cases/us-v-jones).‚Ä° See http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=CELEX:31995L0046:EN:HTML ¬ß As of 2009, the EU has 27 member states: Austria, Belgium, Bulgaria, Cyprus, the Czech Republic, Denmark, Estonia, Finland, France, Germany, Greece, Hungary, Ireland, Italy, Latvia, Lithuania, Luxembourg, Malta, the Netherlands, Poland, Portugal, Romania, Slovakia, Slovenia, Spain, Sweden, and the United Kingdom.¬∂ See http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=CELEX:31997L0066:EN:HTML.** See http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=CELEX:32002L0058:EN:HTML.
93606_Book.indb   1178/26/09   1:38:53 PM 118  /UIstop  Marc Langheinrichout general guidelines, it is Directive 2002/58 that details their implemen-tation in the telecommunications and networking sector, containing, for example, provisions for calls, communications, traÔ¨Éc data, and location data. By 2009, the 2002 e-Privacy Directive has again become dated and a review of the e-Privacy Directive is currently underway that attempts to take recent technological developments into account, for example, the rise of semipublic and private networks such as WiFi hotspots, which are not covered by the 2002 directive. In addition, the European Commission is also evaluating whether speci/f_ic regulations for the ‚ÄúInternet of /T_hings,‚Äù in particular the rise of RFID technology, will be required.*3.2.3.1  Conclusions 1. Data collection and processing does not happen in a legal vacuum. Most countries have laws in place that speci/f_ically address privacy issues, both for institutions (i.e., government or industry) and pri-vate persons. Ubicomp systems must at least be compliant with these national laws. 2. Laws also help to further understand privacy issues as they provide an overview of negative consequences of data collection practices (see, e.g., privacy torts). 3. /T_he fair information principles are at the core of most modern pri-vacy laws. /T_hey require that data subjects be informed of a data collection taking place, give their consent, and have access to the collected data. Security safeguards must be in place and data must only be used for the purpose it was collected under.3.2.3.2 Further ReadingElectronic Privacy Information Center & Privacy International (Eds.): 1SJWBDZBOE)VNBO3JHIUT3FQPSU"O*OUFSOBUJPOBM4VSWFZPG1SJWBDZ-BXTBOE%FWFMPQNFOUT Electronic Privacy Information Center, Washington, D.C., 2006.An annual report that provides an overview of key privacy topics and reviews the corresponding legislation and state of privacy around the world. Full text of latest available edition should be online at the Privacy International Web site (see ‚ÄúKey PI Resources‚Äù): http://www.privacyinternational.org/.Christopher Kuner: &VSPQFBO%BUB1SPUFDUJPO-BX$PSQPSBUF3FHVMBUJPOBOE$PNQMJBODF, 2nd Edition. Oxford University Press, Oxford, UK, 2007.* See http://ec.europa.eu/information_society/policy/r/f_id/index_en.htm.
93606_Book.indb   1188/26/09   1:38:53 PM Privacy in Ubiquitous Computing  /UIstop  119/T_he de/f_inite (corporate) reference on EU data protection law. With a he/f_ty price tag of ¬£140, and more details on corporate compliance than you ever cared to know, this book is probably not what you want for your home bookshelf. But if you have a law faculty close-by, their library might hold a copy!Daniel J. Solove, and Paul M. Schwartz: *OGPSNBUJPO1SJWBDZ-BX, 3rd Edition. Aspen, New Y ork, NY , 2009.A fascinating read that, despite its dry title, manages to vividly illustrate the many challenges and issues of modern (U.S.) information privacy law. With the help of many examples, the book provides a comprehensive overview that does not require a law degree nor law school attendance to understand.3.2.4  Interpersonal PrivacyLaws and the Fair Information Principles are important tools in de/f_ining the roles of institutionalized data collectors such as companies or govern-ment agencies. However, they do not help if privacy issues arise between private parties, that is, between neighbors, friends, or family members. Neither does the law require parents to announce that they are monitoring the time that their children come home, nor do friends exchange privacy policies with each other before allowing continuous access to their instant messenger status. Clearly, the fair information principles are only of lim-ited applicability when it comes to social etiquette and social norms.Although tort law provides remedies for some privacy violations, such as intrusion or disclosure, these seem to be only last resorts when all friendship, neighborliness, or family bonds have already ended. How can ubicomp applications that oÔ¨Äer ubiquitous information exchange between peers be designed in order to avoid having to go to court to ensure one‚Äôs privacy? What aspects of privacy matter for people when they are not deal-ing with faceless companies or agencies, but with acquaintances, friends, and family?In the 1970s, psychologist Irwin Altman looked at how people regu-late their environmental privacy, that is, being alone versus joining social interactions (Altman, 1975). Instead of the simple view of privacy as a state of solitude, Altman saw it as a dynamic boundary negotiation process that encompassed the entire spectrum of social interactions, a ‚Äúselective con-trol of access to the self or to one‚Äôs group.‚Äù For Altman, the optimum level of privacy is reached when the BDIJFWFE level of privacy reaches the EFTJSFE level of privacy (i.e., the level of contact with others). Having more pri-vacy than desired leads to the feeling of loneliness, having less than what is desired leads to annoyance and the feeling of being crowded. Privacy 
93606_Book.indb   1198/26/09   1:38:53 PM 120  /UIstop  Marc Langheinrichregulation, in Altman‚Äôs sense, is thus the control of one‚Äôs openness and closedness to others in response to one‚Äôs desires and one‚Äôs environment.As a psychologist, Altman looked at behavioral mechanisms that sup-port such privacy regulation: verbal interactions with others (‚Äúinputs and outputs‚Äù) as well as spatial interactions (‚Äúpersonal space and territory‚Äù). /T_hese mechanisms are the tools by which one regulates one‚Äôs privacy, by listening to others (input), talking to others (output), positioning oneself in relationship to others (personal space, i.e., distance, angle, etc.), and choosing one‚Äôs location (territory).Although Altman developed his theory for real-world interactions, there is much that can be learned from this theory, even in the context of ubicomp privacy:Privacy as a nonmonotonic function. By conceptualizing privacy tnot simply as one end of the social interaction spectrum (i.e., being alone), but applying it to the entire range of interactions, Altman shows that more privacy is not always better. Both ‚Äúcrowding‚Äù and ‚Äúisolation‚Äù are suggested as ‚Äúexamples of privacy regulation gone wrong‚Äù (Palen and Dourish, 2003).Privacy as a social process. Humans do not use one-oÔ¨Ä policies and trules to manage their everyday, interpersonal privacy. Instead, they continually adjust their accessibility along a spectrum of ‚Äúopenness‚Äù and ‚Äúclosedness‚Äù with a variety of mechanisms, in order to match the achieved privacy state to the desired one.Dourish and Anderson (2006) summarize it succinctly: ‚ÄúPrivacy is not simply a way that information is managed but how social relation-ships are managed.‚Äù Ubicomp systems that facilitate communication and awareness between peers must thus provide similar tools to allow users to dynamically adjust their inputs and outputs, their levels of openness and closedness, their personal space and territory so that they can achieve their desired level of privacy with respect to other users. In ubicomp sys-tems, Altman‚Äôs privacy regulation mechanisms of verbal, paraverbal (e.g., personal space or territoriality), and nonverbal communication need to be augmented with (or replicated by) explicit and implicit controls that allow in situ adjustments, rather than a simple con/f_iguration panel that allows one to set the desired privacy level to high or low. Privacy is thus not so much a particular state of being, but a tool for social discourse.
93606_Book.indb   1208/26/09   1:38:53 PM Privacy in Ubiquitous Computing  /UIstop  1213.2.4.1  Conclusions 1. Interpersonal privacy cannot be approached by requiring purpose speci/f_ications and recipient lists. Between individuals, privacy is a tool for social discourse that allows one to manage peer groups. 2. In this context, privacy is an ongoing boundary negotiation process and not a monotonic function where more secrecy translates to more privacy. Yes, you can have too much privacy (resulting in isolation). 3. Privacy tools must support in situ adjustments, rather than separat-ing con/f_iguration and action (e.g., in a separate control panel).3.2.4.2 Further ReadingPaul Dourish and Ken Anderson: Collective information practice: Exploring privacy and security as social and cultural phenomena. )VNBOo$PNQVUFS*OUFSBDUJPO, Vol. 21, Lawrence Erlbaum, pp. 319‚Äì342, 2006.Dourish and Anderson argue that the commonly formulated abstract goals of attaining privacy and security should be replaced by thinking about information practices‚Äîcommon understandings of the ways how infor-mation should be shared, managed, and withheld. /T_hey oÔ¨Äer a range of pointers to ethnographic studies that illustrate how privacy is used as a boundary regulation process between social groups.Battya Friedman, Peter H. Kahn Jr., and Alan Borning: Value sensitive design and information systems. In: P . Zhang and D. Galletta (Eds.), )VNBO$PNQVUFS*OUFSBDUJPOJO.BOBHFNFOU*OGPSNBUJPO4ZTUFNT'PVOEBUJPOT M.E. Sharp, New Y ork, NY , pp. 348‚Äì372, 2006.V alue sensitive design is a process that explicitly prompts designers to think about and incorporate human values in a principled and comprehensive manner. In the context of privacy, this process may help to understand the reasons behind and the mechanisms of existing and planned information sharing practices.Leysia Palen and Paul Dourish: Unpacking ‚ÄúPrivacy‚Äù for a Networked World. 1SPDFFEJOHTPGUIF4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT	$)*
, Ft. Lauderdale, FL, April 5‚Äì10, 2003. ACM Press, New Y ork, NY , pp. 129‚Äì136, 2003.Based on Altman‚Äôs theory, Palen and Dourish de/f_ine a framework of privacy in the context of modern information systems and point out tensions that govern interpersonal privacy regulation in everyday life.3.3  TECHNICAL SOLUTIONS FOR UBICOMP PRIVACYBy /f_irst understanding what privacy is and what we are trying to solve, we can now set out to design and implement privacy features in ubicomp applications. /T_he previous section illustrated the underlying legal and 
93606_Book.indb   1218/26/09   1:38:54 PM 122  /UIstop  Marc Langheinrichsocial aspects of information collection and sharing, thus helping ubi-comp application developers to properly formulate their privacy goals. /T_his section attempts to illustrate various technical solutions to common ubicomp privacy challenges. We focus in particular on three examples: smart spaces (Section 3.3.3), RFID (Section 3.3.4), and location-based ser-vices (Section 3.3.5). Obviously, these three areas do not fully capture the variety of challenges presented in ubicomp (as discussed in Section 3.3.1), but they hopefully serve as useful examples. Also, since many ubicomp privacy issues apply to information systems in general, additional con-text can be found from the /f_ields of computer networking, databases, and information retrieval (see Section 3.3.2).3.3.1  Novel Ubicomp Challenges to PrivacyPrivacy and data protection have always been closely related to what is tech-nically feasible. At the end of the nineteenth century, it was the invention of modern photography that prompted Warren and Brandeis to rethink the concept of legal privacy protection. At the beginning of the twentieth century, laws had to be reinterpreted again to take into account the pos-sibilities of modern telecommunication (again, then Supreme Court Judge Brandeis played a large part in that). And in the 1960s and 1970s, it was the implementation of eÔ¨Écient government through the use of modern databases that required yet another update of privacy laws, resulting in the /f_irst of today‚Äôs modern data protection laws with their focus on data self-determination. In each instance, technology changed what was possible in the everyday setting and thus prompted‚Äîif sometimes with considerable delay‚Äîa realignment of our notion of privacy.A/f_ter the rise of Internet e-commerce in the 1990s had initiated the last round of updates, the dawn of ubiquitous computing promises the next revolution of smart things. Even though many ubiquitous comput-ing visions sound like arti/f_icial intelligence revisited, applications such as the ‚Äúintelligent car‚Äù or the ‚Äúsmart home‚Äù might not face the same fate as the dreams of intelligent machines that some 20 years ago research-ers thought of being just around the corner. Ubiquitous computing o/f_ten solves a much more mundane yet important problem, namely, crossing media boundaries. Using miniature sensors, cheap microchips, and wire-less communication, computer technology can penetrate our everyday lives in a completely unobtrusive manner. Similarly, real-world facts and phenomena can be mapped on a computer with an unprecedented reliabil-ity and eÔ¨Éciency. /T_he boundary between the real and virtual world seems 
93606_Book.indb   1228/26/09   1:38:54 PM Privacy in Ubiquitous Computing  /UIstop  123to disappear‚Äîit will soon be possible to comprehensively track real-world interactions in real time on a computer system, making it look like a game simulation (think SimCity¬ê).*Data protection and privacy are all about these mappings: translating facts of the real world into bits of information that can be stored for later retrieval. Ubiquitous computing is about the digitalization of information about our lives in order to allow computer systems to automatically pro-cess it. It comes as no surprise that ubiquitous computing has the potential to yet again change our perception of privacy in a signi/f_icant manner. /T_his qualitative quantum leap can be traced along /f_ive aspects of ubiquitous computing systems: the collection scale, the manner and the motivation, as well as the data types and the data accessibility.3.3.1.1  Collection Scale/T_he conscious surveillance of the actions and habits of our fellow men is prob-ably as old as mankind. In the ‚Äúgood old times,‚Äù when people lived in small villages and close-knit social circles, this type of observation was implicit in our daily interactions: Everybody knew everybody else, and local news and gossip spread fast. Noncompatible people o/f_ten preferred to move out into the large cities, in which the large number of citizens and their high variance rendered this classical method of direct social monitoring impractical.With the rise of automated data processing, machines began to take over the role of the curious neighbor. At /f_irst only available to governments, auto-mated data processing soon found its way into commerce, in both cases facil-itating a much more eÔ¨Écient management by providing detailed population or inventory information. However, although our neighbors would quickly note anything out of the ordinary, machines were now used to actually deter-mine what was ordinary: Not the deviations of the norm were noticed and tracked, but the average citizen and his or her ordinary everyday.‚Ä†With ubiquitous computing, real life monitoring‚Äîthe surveillance of the ordinary‚Äîwill extend beyond today‚Äôs credit card transaction, tele-phone connection records, and Web server logs. Even without assuming a single homogeneous surveillance network such as Orwell‚Äôs Big Brother, the sheer applicability of ubiquitous computing technology in diverse * See, for example, Sandy Pentland‚Äôs SenseNetworks for a taste of what is to come: http://www.sensenetworks.com/.‚Ä† See, for example, Partridge and Golle (2008) for a description of several large-scale activity studies in the United States.
93606_Book.indb   1238/26/09   1:38:54 PM 124  /UIstop  Marc Langheinrichareas such as hospitals and nurseries, kindergartens, schools, universities, oÔ¨Éces, restaurants, public places, homes, cars, shopping malls, and elderly care facilities, will create a comprehensive set of data trails that will cover us anywhere we would go./T_he ‚Äúalways on‚Äù vision of ubiquitous computing‚Äîalleviating us from laboriously switching various devices on and oÔ¨Ä as everything stands ready to our attention, right when we need it‚Äîwill drastically extend this cov-erage over time. Instead of the spotty trails that can be obtained through our Internet logs when we are online, say, a/f_ter work for an hour or two, smart homes and intelligent environments will not be switched oÔ¨Ä at night or while we are gone for lunch. In fact, it might not be even possible to turn such devices oÔ¨Ä, as they would not feature a corresponding on-oÔ¨Ä switch, but would sleep most of the time to preserve energy and wake up on their own whenever something of interest happens to them. /T_he digital coverage of our lives will be anywhere and anytime, from sunrise to sunset, from cra-dle to grave, 24 hours a day, seven days a week. As Grudin (2001) points out, the actual selection of data that is captured and stored will at the same time signi/f_icantly alter the value of that information: ‚ÄúAnything that is recorded instantly achieves a potential pervasiveness and immortality that it did not have before ‚Ä¶ Anything that does not ‚Äòmake the cut‚Äô‚Ä¶ is invisible to some-one inspecting the digital record at a diÔ¨Äerent location or time.‚Äù3.3.1.2  Collection MannerWhen little children play hide and seek, they o/f_ten cover their eyes with their hands assuming that if they cannot see, others will not see them in turn. Although they will learn eventually that the principle of reciprocity does not hold in this case, this apparent childish belief is much more dif-/f_icult to unlearn than we might want to believe. Even years a/f_ter playing their last game of hide and seek, many will assume that if they cannot see anybody else around, their actions will go unnoticed.In the old days, this principle of reciprocity was actually a reasonable approximation of the collection manner in which people‚Äôs actions were observed. Only when one was out in public, were others able to see and draw their inferences. Once we entered the sanctuary of our own homes or those of others, we were shielded from the prying eyes of the public. /T_his dichotomy of public and private was closely associated with the realities of space‚Äîthe archi-tecture of walls, windows, and doors, or the natural environment of woods and dense thickets: /T_he presence and quality of a physical boundary provided an immediate indicator of the (potential) quality of privacy. With the rise of 
93606_Book.indb   1248/26/09   1:38:54 PM Privacy in Ubiquitous Computing  /UIstop  125electronic transactions, day-to-day actions such as talking to a friend (over the phone) or buying groceries (using a credit card) became noticeable beyond such physical boundaries. /T_he presence or absence of others was not a good approximation of privacy anymore, as the digital trace of a transaction could be observed, stored, and retrieved from potentially anywhere in the world./T_he deployment of ubiquitous computing technology will make it even more diÔ¨Écult to diÔ¨Äerentiate between public and private actions. As ubiqui-tous computing tries to hide the use of technology, to make computers practi-cally invisible, the level of awareness for such electronic transactions will drop drastically from today‚Äôs implicit awareness through the use of physical tokens such as credit cards or mobile phones. In a fully computerized environment, potentially any item could take /f_ingerprints and wire them halfway around the world, take pictures, measure body temperature, or observe one‚Äôs gait in order to draw far-reaching conclusions about a person‚Äôs physical and mental state. Neither data collection nor continuous surveillance activities will have recognizable markers that would indicate the publicity of actions‚Äîultimately requiring us to assume that at any point in time, in any location, any of our actions could potentially be recorded electronically and thus made public.3.3.1.3  Data TypesWith ubiquitous computing, also the type of information that is collected will change. /T_he village gossip was based on the observation of neigh-bors and fellow citizens and on a person‚Äôs discussions with others. /T_his information was by de/f_inition ‚Äúso/f_t‚Äù information, that is, it was based on an individual‚Äôs personal reception and more o/f_ten that not, two diÔ¨Äerent people observing the same fact would retell widely diÔ¨Äerent accounts of it. Although this would o/f_ten result in rather exaggerated claims, it neverthe-less retained some level of deniability.Modern data processing seems far away from the village gossip of old. It concerns itself with ‚Äúhard‚Äù information‚Äîwith facts, rather than hearsay. Instead of capturing the individual (and error-prone) human perception, it collects factual information such as names, birth dates, addresses, income levels, or lists of purchases. Using statistical models, this information can subsequently be used to draw inferences on a person‚Äôs life based on his or her residence and shopping preferences.Ubiquitous computing will extend this selection of hard facts beyond traditional information types: smart shirts and underwear will be able to record health data such as blood pressure, heart rate, perspiration, or glu-cose levels in real time; smart supermarket shelves will not only know 
93606_Book.indb   1258/26/09   1:38:54 PM 126  /UIstop  Marc Langheinrichwhat items a person bought, but also in what order and how long he or she hesitated before reaching out; mobile phones with global positioning sys-tem (GPS) locator already allow friends and family to know one‚Äôs where-abouts at anytime‚Äîin the future this will be standard unless one decides to turn the service oÔ¨Ä and /f_ind a good excuse for doing so.Data mining technology will allow researchers, politicians, and market-ers to make sense of this ever-increasing stream of minute details, by cor-relating widely disparate information such as chocolate consummation and shower habits (e.g., to infer the beginning of a new relationship) and through comparing information from hundreds of similar people in order to discern broad population patterns. /T_his also has signi/f_icant implications for the ano-nymization of such data, as perceived information such as one‚Äôs location over the course of a day, or the particular way of walking as registered by /f_loor pressure sensors, or one‚Äôs individual breathing pattern, might turn out to be easily identi/f_iable even if collected in a completely anonymous manner.With a wide array of new sensors and collection mechanisms, ubiqui-tous computing technology will potentially allow inferring the ‚Äúso/f_t‚Äù gos-sip of old, based on the ‚Äúhard‚Äù facts of today, thus not only giving it new credibility (by being based on facts, not hearsay) but also eventually inca-pacitating our own judgments about personal beliefs and feelings based on computerized self-assessments, for example, inferring our emotional attachment to our partner based on our heart rate and eye blinking rate.3.3.1.4  Collection MotivationsAs we have seen in the previous section on privacy and its motivations, incen-tive (i.e., the ‚ÄúWhy?‚Äù) plays an important role when it comes to facilitating or preventing data collection. And just as the reasons for wanting privacy have changed over the years, so have the motivations for collecting this data.Our neighbor‚Äôs eyes and ears looked for the unusual, the out-of- ordinary events that would make for attractive gossip. Consequently, people who were adept at ‚Äúblending in,‚Äù those who hardly attracted attention due to their ordinary lives and average physical features, would get the least scru-tiny. With automated data processing, attention shi/f_ted from the unusual to the ordinary: Governments tried to make better policies by having better data on whom they governed, and that meant /f_inding out what the aver-age citizen did, liked, or feared. Companies tried to /f_ind out what goods consumers wanted (or did not yet know they wanted). Questionnaires were used (and still are) to solicit the preferences of the masses, in order to better understand what products would work and which would not. 
93606_Book.indb   1268/26/09   1:38:54 PM Privacy in Ubiquitous Computing  /UIstop  127With modern data analysis methods, large amounts of statistical informa-tion, such as family income, street address, or political preferences, can be statistically correlated in order to segment population groups and predict human behavior (e.g., a family moving into the suburbs might soon decide to buy a lawn mower, as most families living there own one already).Providing better services and/or better products will still be at the heart of many future ubiquitous computing systems, yet what data are neces-sary to predict this become less and less clear, as more diÔ¨Äerent types of information can be collected. With better data mining capabilities than ever before, virtually anything can be of importance, if only enough sta-tistical data on it can be collected. Context awareness is one of the main paradigms in ubiquitous computing, as it is thought to enable otherwise ‚Äúdumb‚Äù systems to predict the user‚Äôs needs and intents without involving any actual intelligence. Not surprisingly, the more such context informa-tion is available, the better these systems are expected to perform. Instead of targeted data collections of speci/f_ic information for a certain purpose, future ubiquitous computing systems could easily attempt to collect any and all information possibly available, thus maximizing their chances for correctly determining the user‚Äôs context and intent from it.3.3.1.5  Data AccessibilityInformation is only of worth if one can /f_ind it: collecting large amount of data without having eÔ¨Écient retrieval mechanisms in place suggests not collecting it in the /f_irst place. In the old days, retrieving gossip was typically limited to a particular village or neighborhood. By moving into a diÔ¨Äerent town or even into a larger, anonymous city, the previously assem-bled body of ‚Äúknowledge‚Äù would typically be rendered inaccessible for the newly acquired neighbors, requiring them to start out anew.With modern information networks, information can travel quickly around the globe, and modern database management systems allow for the eÔ¨Écient retrieval of minute details out of huge, federated databases from a wide variety of sources. However, even though standardized interface de/f_initions exist, integrating these sources is far from a trivial problem, as the large number of failed data integration projects in both government and industry have shown.In the vision of ubiquitous computing, such types of information sys-tems would not be primarily designed with humans in mind (and thus will lead to o/f_ten noninteroperable systems), but directly target machine-to-machine interactions: Smart things would ‚Äútalk‚Äù to other smart things in 
93606_Book.indb   1278/26/09   1:38:54 PM 128  /UIstop  Marc Langheinrichorder to collaboratively determine the current context, and large networks of autonomous sensor nodes would send sensor readings back and forth in order to arrive at a global state based on hundreds of individual sensor readings. Similarly, improved human-computer interfaces (see Chapter 6) would allow easy access to nontraditional data formats such as video and audio streams, for example, for automated diary applications that would document one‚Äôs everyday in a continuous multimedia format. Living in a world of smart cooperating objects, the freedom of movement for personal information would be greatly increased, both between humans and com-puters (How well can I search your memory?) and between cooperating artifacts (What is my artifact telling yours?).3.3.2  The Basics: Privacy Enhancing TechnologiesUsing (information) technology to protect privacy is as old as the /f_irst databases that appeared in the 1960s. Consequently, a number of tech-niques exist that form the general toolbox of privacy-compliant data processing, o/f_ten abbreviated as PETs‚Äîprivacy enhancing technologies. Many of them operate on the networking layer or databases, and as such might be readily applicable to ubicomp applications. Others are more reli-ant, for example, on traditional Web interfaces and thus require some sort of ‚Äúubicompi/f_ication‚Äù to be of use. Today‚Äôs PETs can be grouped roughly into two sets: transparency tools and opacity tools.0QBDJUZUPPMT describe the more traditional security approaches, namely, support for authentication and con/f_identiality. Traditional communication link encryption, for example, secure socket layers or secure shell, that pre-vent an attacker from learning the contents of a communication, can be complemented by VOPCTFSWBCJMJUZ tools that attempt to prevent attackers from even learning that a communication took place. /T_his line of research was instigated in the 1980s by David Chaum‚Äôs Mix-Net protocol (Chaum, 1981), in which email is not sent directly from sender to recipient, but is routed through a cascade of ‚Äúmixes‚Äù‚Äînetwork nodes that combine (delay) and forward messages in a seemingly random fashion. Using public key cryptography, the sender embeds the message‚Äîlike a Russian doll‚Äîin sev-eral layers of encryption. Each layer is readable to only one particular mix node and reveals only where to send the message next. An external observer will not be able to trace the /f_low of messages through the system, even if a signi/f_icant fraction of the mix nodes get compromised. 0OMJOF mixes carry this concept over to Internet traÔ¨Éc in general, allowing participants to route any Internet connection through a ‚Äúcloud‚Äù of mixes, making it impossible 
93606_Book.indb   1288/26/09   1:38:54 PM Privacy in Ubiquitous Computing  /UIstop  129for an attacker to associate, for example, Web site visits to a particular cli-ent.* A similar application is anonymous or pseudonymous payment, again pioneered by David Chaum in the late 1980s, where completely anonymous online payments can be made (Chaum, Fiat, and Naor, 1988).‚Ä†In the area of authentication, so-called JEFOUJUZ NBOBHFNFOU UPPMT attempt to disconnect identity from authority, that is, allowing a user to prove his or her authority to access a resource without revealing his/her identity. Although early commercial systems o/f_ten equated the term with simple ‚Äúsingle-sign-on‚Äù solutions where multiple logins would be seamlessly performed by a central login service, today‚Äôs systems such as Microso/f_t‚Äôs CardSpace (which is integrated into Microso/f_t Vista¬ê) use cryptography-based certi/f_icates to prove, for example, that one is older than 18 years, without the need for disclosing any identifying personal information.‚Ä° Figure 3.7 shows the Identity Selection Screen in Windows Vista¬ê.Maintainers of medical databases have long since identi/f_ied the need to anonymize their records, without changing important statistical proper-ties that might help researchers, for example, epidemiologists, to identify important patterns in the collected data. Research in so-called TUBUJTUJDBMEBUBCBTFT oÔ¨Äers guarantees on the viability of several statistical measures while anonymizing individual datasets. A common measure for the degree of anonymity achieved is L-BOPOZNJUZ, indicating that a particular record or piece of information could be from L possible people (Sweeney, 2002). /T_he higher the value of L, the higher the level of anonymity.Opacity tools are complemented by another set of PETs, so-called USBOTQBSFODZUPPMT, which in turn attempt to improve the data subject‚Äôs understanding and control of his or her data pro/f_ile. 8BUFSNBSLJOH sys-tems allow the visible or invisible marking of information in order to trace the origin of a particular piece of data. /T_his is already in widespread use * For commercial implementations see, for example, JonDo at https://www.jondos.de/en/ or Anonymizer.com at http://www.anonymizer.com/.‚Ä† Obviously, the majority of today‚Äôs online payments are not anonymous, which just goes to show that it takes more than good technology to change a multibillion dollar business (mar-ket forces and political preferences clearly dominate such developments).‚Ä° A Canadian company called Zero Knowledge Systems (now called Radialpoint) pioneered this approach in the late 1990s. /T_heir Freedom Network product allows paying customers to create several digital identities (called ‚Äúnyms‚Äù) that they could use to associate their Internet activity with. While the technology was impressive, the company ultimately failed to get consumers to pay for this (the product was discontinued in 2002). Clearly, the idea of ‚Äúchoos-ing a nym‚Äù in advance of each and every Internet session, and the added overhead of ‚Äúmanag-ing‚Äù one‚Äôs set of nyms (i.e., ‚Äúwhich one should I choose for this particular action?‚Äù) ultimately did not appeal to Internet users.
93606_Book.indb   1298/26/09   1:38:55 PM 130  /UIstop  Marc Langheinrich
in digital rights management system, for example, in digital photography, where the rights holder can use such watermarks to prove authorship/ownership of a particular image. Although such techniques can readily be used to tag personal pictures, the ability to watermark other personal data is limited. People have long since used spelling errors in names and addresses when signing up, for example, for mail-order catalogs, in order to track the origin of (real-world) spam mail. /T_he same approach can, of course, be used with one-time email addresses, but its use with other data items (e.g., preferences) is doubtful.1PMJDZUPPMT use a similar approach in storage systems in order to allow for the privacy-compliant data processing of personal information. All col-lected data are stored together with a set of metadata that describes the allowed recipients, uses, and storage duration. Each database operation requires operators to specify the identity of the requestor and the reason for the query (purpose). /T_his can then be used by the policy engine to return only those entries with a compatible privacy policy. If the requester is using a compatible system, the queried data in turn will carry metadata that allows further privacy-compliant processing. /T_his approach is some-times called the ‚Äústicky policy‚Äù paradigm (Casassa Mont et al., 2003) or 
FIGURE 3.7 Windows CardSpaceTM (built into Windows Vista¬ê) is an example of a modern identity management system. (Microso/f_t product screenshot reprinted with permission from Microso/f_t Corporation.)
93606_Book.indb   1308/26/09   1:38:55 PM Privacy in Ubiquitous Computing  /UIstop  131‚ÄúHippocratic databases‚Äù (Agrawal et al., 2002). With such a system in the background, data subjects can receive detailed information on the use and storage of their personal information, whereas both companies and data protection agencies can perform automated audits to verify the compliance with data protection law and regulations. Much work has also been under-taken in policy languages, that is, describing both the data processing guar-antees by data collectors and the privacy preferences by data subjects. /T_he Platform for Privacy Preferences (P3P) is probably the most prominent one: it uses XML syntax to describe both data processing policies and subject preferences‚Äîthe latter in an addendum speci/f_ication called ‚ÄúAPPEL‚ÄîA Privacy Preferences Exchange Language‚Äù (Cranor, 2002).Note that all of the above PETs are centered around traditional data pro-cessing and Web use. Although PETs are an important building block to any ubicomp privacy solution, they must be complemented and extended in order to be useful in ubicomp settings, as outlined in Section 3.3.1.3.3.3  Example: Protecting Smart SpacesSmart environments are probably the archetypical ubicomp application: a smart room or house that constantly detects the context and activities of its inhabitants and visitors, and seamlessly adapts its services and func-tions to provide the best possible experience. Initial work on ubicomp privacy has thus focused on both infrastructures that collect these data and on interfaces that allow data subjects to inspect and control the cor-responding information /f_lows.One prominent privacy-aware ubicomp infrastructure is the Confab Toolkit by Hong and Landay (2004). Data in Confab are managed in InfoSpaces, network-addressable logical storage units that store context information about a single entity, that is, a person, a location, a device, or a service. In- and out-/f_ilters manage data /f_lows between diÔ¨Äerent InfoSpaces, with JO“áMUFST only allowing the storage of data from trusted sensors or entities, and PVU“áMUFST enforcing access policies and adding privacy tags to all outgoing data (see Figure 3.8).Privacy tags are similar to the general ‚Äústicky policy‚Äù concept presented in Section 3.3.2, as they represent metadata that can be used to enforce* privacy-compliant usage and retention. However, Confab‚Äôs privacy tags are more custom tailored to the exchange of dynamic context data, featuring * Enforcement, of course, relies on the use of InfoSpaces throughout the entire data life cycle.
93606_Book.indb   1318/26/09   1:38:55 PM 132  /UIstop  Marc Langheinrich
elements that declare how many ‚Äúsightings‚Äù the other party may amass of a particular attribute (e.g., only retain the last /f_ive locations a person was in) and a ‚Äúgarbage collect‚Äù declaration that can contain data deletion trig-gers (e.g., deleting information if the data subject leaves a particular area). To provide plausible deniability, information that is deemed too sensitive to be released will simply be marked by out-/f_ilters as ‚Äúunknown,‚Äù making it indistinguishable from technical failures or lack of connectivity.Whereas Confab provides a framework for disseminating context information that data subjects collect themselves, the PawS system (Langheinrich, 2002) focuses on third-party data collection instead. PawS addresses smart environments that can communicate and enforce data collection practices for various optional and mandatory data collections. Based on a Hippocratic Database* in the back (privacy DB), it uses QSJWBDZQSPYJFT to control data collection and access for smart devices such as cameras or printers. 1SJWBDZCFBDPOT advertise the URLs of these proxies so that user devices can download information about a smart environment and then directly con/f_igure the available services as needed. Figure 3.9 shows an overview of the architecture, using the example of a smart room equipped with a camera and a publicly accessible printer.As the concept of privacy beacons illustrate, it is diÔ¨Écult to convey the act of a data collection taking place in smart environments, which should * Cf. transparency tools in Section 3.2.
My ComputerInvisible ModeEnforce AccessUser InterfacesGarbage CollectPeriodic ReportsOn OperatorsOut OperatorsLoggingCheck Privacy TagSourcesIn OperatorsLocNameInfoSpaceData StoreApp
FIGURE 3.8 Confab architecture. Personal data are stored in InfoSpaces that contain attribute tuples. Data /f_lows are governed by in- out-, and on-/f_ilters. (From Hong, J., 2004. Reprinted with permission from http://www.cs.cmu.edu/~jason/research.hml)
93606_Book.indb   1328/26/09   1:38:56 PM Privacy in Ubiquitous Computing  /UIstop  133
operate unobtrusively in the background. A handheld user device is needed in PawS to report the current ‚Äúsmartness‚Äù of a room to a data subject, and to give the data subject control over the respective data /f_lows and services. However, PawS does not address how to best present such information and controls to the user, which is further complicated through the use of small screens on mobile devices. What type of information is important to users in such smart environments? What aspects of such a user interface are the most critical?One of the earliest projects that tried to answer such questions was undertaken by Bellotti and Sellen (1993) at Xerox‚Äôs EuroPARC in the early 1990s. As part of an audio-video presence and collaboration environment called RAVE, cameras, monitors, microphones, and speakers were deployed in oÔ¨Éces to allow EuroPARC‚Äôs staÔ¨Ä to glance into other oÔ¨Éces (i.e., get a few seconds of video-only transmission), make WQIPOFDBMMT using both audio and video, or install a longer lasting oÔ¨Éce-share (i.e., a semipermanent v-phone call). Hong and Landay‚Äôs (2004) Confab toolkit also addresses user interface issues. Confab not only attempts to deliver 
Privacy DBPrivacy BeaconsPrivacy ProxiesPrivacy PolicyAccept/Decline
FIGURE 3.9 /T_he PawS System uses privacy beacons to advertise data collec-tions taking place. Data subjects can use privacy proxies to con/f_igure and control available devices. A PrivacyDB stores collected data using sticky policies. (From Langheinrich, M. (2002). 6CJRVJUJPVT $PNQVUJOH UI*OUFSOBUJPOBM$POGFSFODF1SPDFFEJOHT pp. 315‚Äì320. New York: Springer. With permission.)
93606_Book.indb   1338/26/09   1:38:57 PM 134  /UIstop  Marc Langheinrich
simple and appropriate controls, as well as clear and timely feedback of the current data collection status, but also incorporates the principle of QMBVTJCMFEFOJBCJMJUZ into its design.A sample application built with Confab was the ‚ÄúLemming Location-Enhanced Instant Messenger,‚Äù which allowed users to automatically and semiautomatically publish their current location to their contacts. Figure 3.10 shows an example prompt. /T_he large ‚Äú1‚Äù illustrates a one-oÔ¨Ä query and contrasts it with queries that seek to continuously track the user‚Äôs movements. If the user ignores the request, the Confab toolkit returns his or her location as ‚Äúunknown‚Äù to the requestor, which does not allow one to diÔ¨Äerentiate between network errors, system errors, and user decisions. Users can thus plausibly deny that they ever got the request.Common to all these examples is trust users need to have in the smart infrastructure surrounding them. Once personal data leave the protection that these spaces oÔ¨Äer, no guarantees can be made. Equally important is the challenge of properly con/f_iguring these spaces, so that the infrastruc-ture does what data subjects want them to do.3.3.4  Example: Protecting RFID TagsRFID tags (Figure 3.11) represent probably the most prominent ubicomp technology, at least when it comes to privacy issues. /T_heir increasing use, especially on consumer products in showcase supermarkets, as implants 
FIGURE 3.10 A location prompt in the Lemming Location-Enhanced Instant Messenger. If the user ignores the request, Confab reports back an ‚Äúunknown‚Äù location, thus facilitating the principle of ‚Äúplausible deniabil-ity.‚Äù (From Hong, J. Reprinted with permission.)
93606_Book.indb   1348/26/09   1:38:57 PM Privacy in Ubiquitous Computing  /UIstop  135
for entering ‚Äúin‚Äù-clubs, and as a security feature of electronic passports, have prompted widespread public concern over RFID privacy issues.* /T_he privacy challenges of RFID tags are fourfold: 1. Automation. Reading an RFID tag typically does not require the help of the person carrying the tag, nor any manual intervention on behalf of the reader. /T_hus, simple reader gates can easily scan large numbers of tags, making data acquisition much easier. 2. Identi/f_ication. /T_he ability to identify individual items instead of only whole classes of items signi/f_icantly improves the ability to identify an individual. /T_his would facilitate, for example, the creation of detailed consumer or citizen pro/f_iles. 3. Integration. Not only the act of reading a tag can be completely hid-den from the tag carrier (especially when operating at larger dis-tances), but also the fact that a tag is present in a particular product will be hard to ascertain for an individual without special detection equipment.* /T_here is a bewildering variety of technologies that are o/f_ten lumped together under the umbrella term ‚ÄúRFID.‚Äù /T_his section will focus on passive RFID tags, that is, those that do not come with their own power source (battery) but instead receive the energy to operate from the reader‚Äôs /f_ield. For the de/f_inite source on RFID technology, see Finkenzeller (2003).
FIGURE 3.11 Set of example RFID tags (all passive).
93606_Book.indb   1358/26/09   1:38:58 PM 136  /UIstop  Marc Langheinrich 4. Authentication. /T_he above points become especially critical given the increasing amount of sensitive information, for example, health information, payment details, or biometric data that are stored on or linked to tags used in authentication systems./T_hese four attributes of RFID applications threaten two classes of indi-vidual privacy: data privacy and location privacy. /T_he location privacy of a person is threatened if a tag ID that is associated with that person is spotted at a particular reader location. For example, by knowing that a person‚Äôs car has passed a certain toll station, or that a person‚Äôs shoes have entered a particular building, others might be able to infer (though not prove) the location and ultimately the activity of that person. /T_hese IDs do not need to be unique‚Äîcertain combinations of non-unique tags might still form unique constella-tions of items that can be used to identify an individual (Weis, 2003).Once tags carry more than just an identi/f_ier, but also a person‚Äôs name or account number, data privacy may be violated. /T_his happens if unau-thorized readers eavesdrop on a legitimate transaction, or if rogue read-ers trick a tag into disclosing its personal data. /T_hese types of attacks are typically called TLJNNJOH. A special case of data privacy are product IDs that disclose details of the (otherwise not visible) belongings of a person, for example, the types and brands of clothing one is wearing, the items in one‚Äôs shopping bag, or even the furniture in a house. Note that in the latter case, the actual identity of the victim might very well remain unknown‚Äîit might be enough to know that this person carries a certain item./T_here are three principal means of violating an individual‚Äôs data and/or location privacy: clandestine scanning, eavesdropping, and data leakage:Clandestine Scanning. /T_he tag data is scanned without the tag car-trier‚Äôs consent. /T_his might disclose personal information (data pri-vacy) either indirectly, for example, by revealing the contents of bags that one cannot see through otherwise, or directly, for example, by revealing personal data such as the name of a user or the date that a particular item was bought. If several clandestine scans are pooled, clandestine tracking can reveal a data subject‚Äôs movements along a tag reading infrastructure (location privacy).Eavesdropping. Instead of reading out a tag directly, one can also teavesdrop on the reader-to-tag channel (or even the tag-to-reader channel) and receive the IDs of the tags being read due to the used anticollision protocol (cf. Section 3.3.4.1).
93606_Book.indb   1368/26/09   1:38:58 PM Privacy in Ubiquitous Computing  /UIstop  137Data Leakage. Independent of the actual RFID technology is the tthreat of having applications read out more information from a tag than necessary, or storing more information than needed. /T_his, of course, is a threat common to all data gathering applications, although the envisaged ubiquity of RFID-based transactions renders it highly relevant in this context.Security is obviously the primary issue here, that is, ensuring the con-/f_identiality of the information stored on such tags so that only authorized parties are able to detect, read, and potentially write to such tags. Ensuring the con/f_identiality of information, both through the encryption of trans-missions and the use of authentication mechanisms to limit access to it, is an old problem and many solutions exist that make it virtually impossible for an attacker to succeed. However, RFID tags add two novel challenges to the problem that render many existing approaches infeasible:Limited resources. Like other small devices (e.g., sensor nodes) in ubi-tcomp, RFID tags are extremely limited in their computational capa-bilities. Implementing advanced encryption algorithms such as AES* or public key systems has, so far, been only feasible for high-end chips that are speci/f_ically engineered for security applications. Cheap mass market tags that are envisioned to be embedded in virtually all prod-ucts or product packages currently cannot be protected this way.Key selection. In order to authenticate an authorized party against an tRFID tag, some shared secret must exist between the two.‚Ä† /T_his, in itself, is no diÔ¨Äerent from securing, say, a computer with a password. However, with potentially hundreds or thousands of tags, knowing which partic-ular secret to use becomes a problem. /T_his is diÔ¨Écult because one typi-cally does not know which tag one is interacting with‚Äîa/f_ter all, being able to identify an RFID tag is exactly what one wants to prevent./T_he following sections will present a number of approaches that have been developed to enhance the privacy of RFID.* AES stands for Advanced Encryption Standard. It is a symmetric encryption algorithm (a ‚Äúblock cipher‚Äù chosen by the U.S. government in 2001 for encrypting all unclassi/f_ied information).‚Ä† A shared key assumes the use of symmetric encryption. Although public key cryptography does not require a shared key, the general principle remains, as one still needs to select the right public or private key.
93606_Book.indb   1378/26/09   1:38:58 PM 138  /UIstop  Marc Langheinrich3.3.4.1  Communication ConÔ¨Ådentiality and Anticollision ProtocolsEncrypting the wireless communication channel between an RFID tag and a reader is the obvious solution to eavesdropping attacks. A large body of work in the crypto community speci/f_ically targets low-power and low-complexity ciphers, and RFID chips used in ePassports or contact-less train passes typically use some sort of communication encryption. As pointed out above, however, key management is still critical and thus this approach is only usable for selected applications.However, even if tag communication is encrypted, the nature of RFID communication might still allow an attacker to track the tag. /T_his is because RFID readers /f_irst need to TJOHVMBSJ[F a tag before they can read from it; that is, it must determine which tags are present in its range and then address exactly one of them with a command.* To this end, many RFID protocols use a unique ID (UID), similar to the hardware MAC address of a WiFi card or a Bluetooth adapter, to aid tag singularization at a lower protocol level. If this UID is /f_ixed, rogue readers can simply per-form a round of singularization and thus be able to track individual tags, even if the tag payload (e.g., the name of a product and its product ID) is encrypted. /T_his process is called an BOUJDPMMJTJPO protocol.Some RFID anticollision protocols oÔ¨Äer variants where the UID is ran-domized upon every reader session; that is, whenever a tag enters the /f_ield of a reader, it chooses this UID anew and uses it only until it leaves the /f_ield again. /T_his, of course, drives up tag prices, as each tag needs to include a pseu-dorandom number generator (PRNG) for this. However, if this PRNG is well implemented, tracking tags by their UID is much harder, if not impossible.A particular attribute of RFID communication is the power asymmetry of the wireless link: although tag replies can only be read from up to a few meters or even centimeters, reader commands can typically be received from up to 100 meters away. /T_his is because the battery-less, passive tags are receiving their energy supply through the reader radio /f_ield, which thus needs to be very powerful. If any of the reader commands contain the ID (or UID) of an identi/f_ied tag, an attacker could obtain this information from a very large distance, even though the de/f_ined readout range of the tags is only several centimeters.Although this is not much of a problem if random UIDs are used, many high-performance RFID systems use /f_ixed UIDs in their anticollision * /T_he need for singularization stems from the fact that RFID tags are unable to detect the pres-ence of other tags. /T_hus, it is up to the reader to detect collisions between tags.
93606_Book.indb   1388/26/09   1:38:58 PM Privacy in Ubiquitous Computing  /UIstop  139protocols in order to lower readout times. In these so-called EFUFSNJOJTUJD anticollision protocols, readers probe for con/f_licting UIDs by system-atically querying for all possible pre/f_ixes, that is, ‚Äúall tags beginning with a 0,‚Äù ‚Äúall tags beginning with 1,‚Äù ‚Äúall tags beginning with 00,‚Äù ‚Äúall tags beginning with 01,‚Äù and so on. If the UIDs of two or more tags begin with a queried pre/f_ix, all of them will reply at the same time, causing a collision that the reader is able to detect. If this happens, the reader simply increases the length of the pre/f_ix by one digit (e.g., by adding a ‚Äú1‚Äù to it) and tries again, until only a single tag replies. A/f_ter it successfully singularized a single tag this way, it will /f_irst instruct this particular tag to be silent in the upcoming rounds, then backtrack and replace the last bit that it added with its inverse (e.g., if it added a ‚Äú1‚Äù before it will now use a ‚Äú0‚Äù instead) and continue. Should more collisions occur, it again increases the length of the pre/f_ix until it can singularize a tag, then backtrack. Such proto-cols are called CJOBSZUSFFXBMLJOHprotocols, as this behavior can be seen as traversing a binary tree, in which the individual bit positions are the branches and the tags are the leaves (see Figure 3.12 for an example).An attacker can overhear the pre/f_ixes sent from a reader to its tags and thus infer many partial UIDs of the tags present. A simple /f_ix for this is to have the reader traverse the tree one bit at a time, that is, the reader never explicitly sends any pre/f_ixes, but only uses the command ‚Äútransmit next bit.‚Äù Tags, in turn, only reply with the Oth bit of their UID, not with their full UID. As long as the corresponding bit positions of all available tags are identical, no collision occurs and the reader is able to clearly receive the common bit pre/f_ix, building it up incrementally. Once two or more tags 
101 100011 010 001 00000 010110 11110000 010 011
Read Tags ‚Äò011‚ÄôRead Tags ‚Äò010‚ÄôRead Tags ‚Äò010*‚ÄôRead Tags ‚Äò00*‚ÄôRead Tags ‚Äò0*‚ÄôRead Tags ‚Äò*‚ÄôCollision111
FIGURE 3.12 Binary tree walking protocol with three tags present. Note how the reader commands transmit the tag IDs in the clear.
93606_Book.indb   1398/26/09   1:38:59 PM 140  /UIstop  Marc LangheinrichdiÔ¨Äer at a particular position, the reader detects a collision and now has to branch into one of the two subtrees. Instead of explicitly naming the subtree that it wants to explore (i.e., sending ‚Äú0‚Äù or ‚Äú1‚Äù), the reader XORs its selection with the previous, error-free bit in the pre/f_ix. As the value of this bit was only sent from the tags to the reader, an attacker outside the tag‚Äôs communication range (but inside the reader‚Äôs forward channel) will not be able to know the true value of the next selected bit. /T_he tags, on the other hand, know their own ID, and accordingly the bit value at the previ-ously queried position, thus sharing a common secret with the reader that can be exploited for every con/f_licting bit position.3.3.4.2  Access Control/Tag DeactivationA simple solution to access control is to obstruct the reader signal via a metal mesh or foil that encloses the tag. With the inclusion of RFID tags into passports, a number of vendors now oÔ¨Äer coated sleeves for protect-ing the passport while not in use (Figure 3.13). Other options would be aluminum-lined shopping bags for groceries. However, tagged clothing or personal items can o/f_ten not be protected in this extreme manner.For tree-based anticollision protocols, researchers have proposed a spe-cially engineered ‚Äúblocker tag‚Äù to jam readers that attempt to traverse the UID tree. Such a blocker tag uses two antennas to simply send out both a ‚Äú0‚Äù and a ‚Äú1‚Äù for each reader query, thus creating a collision at each branch of the tree. 
FIGURE 3.13 Low-tech privacy solution‚Äîan electromagnetically shielded sleeve for ePassports. (Copyright 2009 Paraben Corporation. Image re -printed with permission from http://www.paraben-forensics.com/.)
93606_Book.indb   1408/26/09   1:39:00 PM Privacy in Ubiquitous Computing  /UIstop  141
/T_his creates the impression of trillions* of tags being present and will in eÔ¨Äect fully stall even the fastest reader. /T_he diÔ¨Éculty of this approach lies in control-ling the range of tags that are being blocked. Otherwise, a single blocker tag could accidentally disable any (tree-based) RFID system it comes close to.Alternatively, some form of password could be set on each tag, only allowing readers that use the right password to read out any data from the tag. /T_his could be realized in a very simple manner using so-called IBTIMPDLT An RFID tag is, by default, open and readable, but it can be locked by sending it a lock command with a password. /T_he tag then creates a hash of this password (which could simply be its true ID number) and hitherto only replies to a query if an unlock command is sent that, when hashed, matches the stored hash value (Figure 3.14).As elegant and simple as the solution is, it squarely falls into the LFZTFMFDUJPOissue mentioned above: how would a reader (or user) know which pass-word to use with which tag? Although individual passwords work well for single accounts or special items such as an RFID-based health card, it seems unlikely that one would be able to remember hundreds of passwords for the individual groceries one buys each day. If users have only a few tagged items, fast readers might simply try out all possible passwords until one of them eventually unlocks the tag. Clearly, such an approach does not scale well.One option might be to have locked tags always reply with the hashed password, but nothing else. /T_his would still protect the tag‚Äôs contents without disclosing the real password, while allowing authorized readers to * Fully simulating all possibilities of a, say, 64-bit ID would be actually more than just a few trillions. An (implausibly) fast reader able to read 100,000 tags per second would be busy for more than 4 billion years reading all 264 tags.
Product ID, Serial Number, ...Product ID, Serial Number, ...4. lock4. Unlock2. (h, ID)2. h?ID3. h = hash(ID)1. ID3. ID1. hhhhFIGURE 3.14 Example of an ID-based hash lock.
93606_Book.indb   1418/26/09   1:39:01 PM 142  /UIstop  Marc Langheinrichlookup the right password in a hash-to-password lookup table. However, such an approach might still protect the data privacy of the tag owner but fail miserably at protecting the location privacy, as static identi/f_iers can trivially be tracked. A number of researchers are thus investigating the use of IBTIDIBJOT, where a locked tag still replies with its stored hash but continually rehashes it a/f_ter each reply (Ohkubo et al., 2005). /T_his results in constantly changing hashes, which makes tracking much more diÔ¨Écult (although not impossible). Authorized readers that know the right pass-word can similarly follow such a chain and can thus properly predict the password to use. /T_he challenge of hash-chain schemes lies in synchroniz-ing the two, even in the presence of an attacker who might try to desyn-chronize them. Another important aspect of such schemes is their GPSXBSETFDVSJUZ; that is, if an attacker learns the current key of a tag, she is none-theless unable to identify previous outputs of the tag (e.g., in log /f_iles).Whether hash chains are used, the problem of managing various pass-words for a plethora of tagged items remains the biggest challenge in any access control scheme for RFID. In addition to the sheer number of items that need protection, it is also the number of ownership changes that chal-lenge traditional approaches: An item is shipped from a supplier to a dis-tributor to a retailer, who sells it to a consumer, who might later give it to a friend or even resell it. At each step along the way, the current password must either be passed along or some means for setting a new password must be given. /T_his problem of PXOFSTIJQUSBOTGFShas been the focus of several approaches, that is, allowing either the temporary delegation or full transfer of ownership to a product, without allowing the previous owner to know the new key or the new owner to know the old key (Molnar et al., 2005).3.3.4.3  ProxiesA common response to many of the problems detailed above has been the proposition of a powerful QSPYZEFWJDF that would locally manage one‚Äôs tagged items. By incorporating an RFID reader into a commodity con-sumer device such as a mobile phone or a wristwatch, this device could act as a proxy for all tag interaction: individually blocking or allowing access to its owner‚Äôs tagged items (i.e., acting like a smart blocker tag), set-ting individual passwords on items bought in the supermarket or resetting those of items given to others. Other proposed features are logging and alerting functions that would require readers to identify themselves and oÔ¨Äer links to machine-readable privacy policies that could be the basis for automatically regulating access to the owner‚Äôs tags.
93606_Book.indb   1428/26/09   1:39:01 PM Privacy in Ubiquitous Computing  /UIstop  143
Although such devices have been proposed several times in the literature, few actual implementations exist. One such example is the 1SJWBDZ(VBSEJBO at the Free University of Amsterdam (Rieback et al., 2006). A portable RFID reader in a 10 √ó 20 centimeter box is paired via Bluetooth with a control appli-cation running on a mobile phone (see Figure 3.15, le/f_t to right). Users can scan for tags in the vicinity, control access to them, and log readout attempts (and successes) of other readers. /T_he privacy guardian works similar to a blocker tag, jamming the channel whenever a third-party reader attempts to access a protected tag (see Figure 3.16). /T_his only works, however, for a 
  
FIGURE 3.15 Privacy Guardian reader hardware and user interface. (From Rieback M. Reprinted with permission.)(c)(b)(a)
93606_Book.indb   1438/26/09   1:39:02 PM 144  /UIstop  Marc Langheinrich
particular set of RFID protocols in which tag replies are deterministic, that is, where their UID determines when they will reply to a reader inquiry.As an alternative to control approaches based on powerful consumer proxy devices (which might imply a signi/f_icantly management overhead for individuals), several researchers have advocated password-less access control approaches. One of the earliest ideas was to have tags measure the signal strength of a reader signal and reply with diÔ¨Äerent levels of detail, depending on the inferred distance of the reader (Fishkin et al., 2005). To read out the highest level of detail, an attacker would need to come very close to a target and thus become noticed, making stealth skimming attacks very diÔ¨Écult. /T_he two main problems of this approach are the dif-/f_iculty of controlling one‚Äôs tags in this manner (‚ÄúHow close is enough for a level 3 disclosure, without reaching the too detailed level 2?‚Äù) and the costs and reliability of an integrated signal strength module on an RFID tag (an attacker could use a very high powered reader to simulate closeness).An alternative, password-less solution wraps tag data into several encryp-tion layers requiring continuous read access for signi/f_icant amounts of time, thus slowing down an attacker (Langheinrich and Marti, 2007). Together with small antennas that restrict tag read ranges to several centimeters, an attacker would not only need to come close but also stay there for, say, a few minutes. Based on Adi Shamir‚Äôs theory of shared secrets, the tag‚Äôs real ID is encoded into several pieces (‚Äúshares‚Äù) and these get stored on the tag instead. Due to the properties of Shamir‚Äôs theory, the original tag ID can only be reconstructed if all of those pieces are known. Although all shares are stored on the same tag, Tag 1Tag 2Tag 3Tag 4GuardianTimeslot:246810121416CollisionsFIGURE 3.16 Privacy Guardian blocking access to tag no. 2. (From Rieback, M. Reprinted with permission.)
93606_Book.indb   1448/26/09   1:39:03 PM Privacy in Ubiquitous Computing  /UIstop  145readout is complicated by allowing only a random trickle of bits from the tag. Toget her w it h a shor t read range, t his requires an attacker to spend a consid-erable amount of time in close proximity to the ‚Äútarget,‚Äù making quick unno-ticed readouts diÔ¨Écult. At the same time, however, legitimate owners are able to use simple caching strategies to identify their items instantaneously, as an initial burst of disclosed bits is enough to probabilistically identify a tag from a known set. To prevent the repeated querying of such a larger initial subset, which would give an attacker faster access to the entire key, tags use random temporary IDs for tag singularization, thus making it more diÔ¨Écult for an attacker to correlate two such bit strings across consecutive queries.3.3.5  Example: Protecting Location InformationKnowing when a particular person was at a particular point in time is at /f_irst no diÔ¨Äerent from knowing other facts about a person, for example, her age, place of birth, or favorite hobby. However, location information is typically associated with a particular place (e.g., home or pawn shop), which in turn o/f_ten implies an activity (e.g., visiting family or selling items) or a certain per-sonal interest (e.g., betting). As such, location information gives rise to a large number of implications, with more or less correlations. Moreover, knowing the USBKFDUPSZ of a person‚Äôs movements o/f_ten allows an observer to corrobo-rate such implications through causal connections (e.g., ‚Äúhe /f_irst went to a gun dealer and then to the victim‚Äôs home‚Äù). Knowing a person‚Äôs current or favorite location can moreover threaten her personal well-being (e.g., stalker attacks) or make her more susceptible to disturbances (e.g., spam).Location information is thus in many cases a particularly sensitive piece of personal data, even though people might not realize it (cf. survey results reported in Section 3.2.2). In particular, the problem of location privacy can be framed as the problem of separating three distinct pieces of informa-tion: Who? Where? When? Knowing only one or at most two of these pieces typically lowers the value of this data signi/f_icantly (but not in all cases). For example, knowing that someone entered a supermarket at 2:00 p.m. might not carry much value, but knowing that someone entered a particular bedroom at 3:00 a.m. might tell parents when their son came home on Friday night.Many technical systems for providing location privacy thus attempt to disassociate such time-identity-location tuples. One of the /f_irst location systems, the Active Badge System at Xerox‚Äôs Palo Alto Research Center (Spreitzer and /T_heimer, 1993), already separated location tracks from users with the help of two separate architectural entities: 6TFS"HFOUT and -PDBUJPO2VFSZ4FSWJDFT. Active Badges emitted a QTFVEPOZNPVT ID while 
93606_Book.indb   1458/26/09   1:39:03 PM 146  /UIstop  Marc Langheinrichbeing tracked by the location infrastructure. /T_he badge sighting for each place was managed by one Location Query Service, which would register all sightings of these pseudonyms without knowing the user‚Äôs identity. /T_he true identity behind such an ID was only known to the user‚Äôs personal User Agent, which would explicitly register an interest in a particular pseudonym with each Location Query Service. To query a user‚Äôs identity, one would need to contact the user‚Äôs User Agent, which could then handle the appropriate access control veri/f_ication./T_he location privacy of Active Badge users thus rested on the integrity of the location infrastructure: As long as an attacker does not have access to the full log /f_iles, the only way to /f_ind out about someone‚Äôs present and past whereabouts was through his or her personal User Agent. However, once the system is compromised, all static pseudonyms can be trivially associated with a user, instantly providing access to all past and future location traces. Even if an attacker gains only access to the pseudonymous logs, without being able to /f_ind the matching User Agents to resolve the pseudonyms, it might be trivial to infer the true identity behind each pseudonym, as movement pat-terns o/f_ten allow the inference of one‚Äôs home or oÔ¨Éce (see Figure 3.17).
010151922252729Time Spent (hours)31323335363738
H
FIGURE 3.17 Static pseudonyms can o/f_ten be trivially resolved if additional information is available. For example, the above location trace is most likely from the owner of oÔ¨Éce ‚ÄúH.‚Äù (From Beresford, A. -PDBUJPO1SJWBDZJO6CJRVJUPVT$PNQVUJOH. PhD dissertation, University of Cambridge, U.K. 2005. With permission.)
93606_Book.indb   1468/26/09   1:39:04 PM Privacy in Ubiquitous Computing  /UIstop  147Consequently, in order to truly decouple identity from location-time tuples, pseudonyms must frequently change. /T_his change cannot be simply changing one random number into another, as the two location tracks from these pseudonyms would be trivial to join again later. Instead, switching pseudonyms has to be done in a manner that prevents the location track of the new pseudonym to be associated with the previous one. Beresford and Stajano (2003) propose so-called NJY[POFT for this‚Äîareas in which no loca-tion tracking takes places and which are large enough so that at any point in time, a large enough number of targets are present that can be mixed. Figure 3.18 shows an example of three users entering a mix zone, using pseudonyms B, C, and D. With location tracking disabled inside the mix zone, it is diÔ¨Écult to infer who R, S, and T are. /T_he challenge of this approach is the proper de/f_inition of mix zones (would people mind those dead zones where no tracking is available?), as well as adjusting them dynamically to the actual traÔ¨Éc (late night traÔ¨Éc might require much larger zones in order to enclose enough users to mix). Algorithms that attempt to use the crossing of two or more location tracks in order to increase the chances that an attacker con-fuses the path of diÔ¨Äerent users are also called QBUIQFSUVSCBUJPO algorithms.One obvious solution to location privacy seems to be the use of TFMGQPTJUJPOJOHTZTUFNT, such as GPS, Cricket (Priyantha et al., 2000), or BlueStar (Quigley et al., 2004), where the infrastructure sends out posi-tioning information that clients can use to compute their own loca-tion. Although this obviously alleviates concerns that arise with a positioning infrastructure that tracks its clients, it might still disclose this information once a location-based service is used. For example, a 
(b) Timeline of movements(a) Plan view of the mix zoneqrsIngressEgresssqrabcTimeTimecaMix ZonebFIGURE 3.18 /T_hree users enter a mix zone; three diÔ¨Äerent ones exit it some time later. Who went where? (From Beresford, A.R. and Stajano, F. *&&&1FSWBTJWF$PNQVUJOH, 2(1), 46‚Äì55. With permission.)
93606_Book.indb   1478/26/09   1:39:05 PM 148  /UIstop  Marc LangheinrichGPS-enabled mobile phone that uses an online mapping tool to visualize its location obviously discloses its location to the online service.Instead of trying to separate identity from location and time, one can also try to PCGVTDBUF them, that is, lower their precision or accuracy. For location information, this could mean either to widen the area in which the subject is located in (e.g., from exact coordinates to street level to city level) or to oÔ¨Äset the reported position by some (seemingly random) value from the true position (see Figure 3.19). A related technique is to create additional queries from ‚Äúdummy positions‚Äù and to hide the true position in there. Identity information can similarly be obfuscated, meaning that one enlarges the pool of possible identities, for example, making it impos-sible for an attacker to distinguish between several potential senders of a location-based request. Because even anonymous location information might reveal an identity, given additional information about one‚Äôs home or oÔ¨Éce, this process of identity obfuscation thus necessarily implies loca-tion obfuscation as well.
(a) Original GPS data
(b) Additive Gaussian noise
(c) Discretized to points on grid
FIGURE 3.19 Obfuscation can simply mean adding some noise to the true position, or to discretize it. (Courtesy of J. Krumm.)
93606_Book.indb   1488/26/09   1:39:06 PM Privacy in Ubiquitous Computing  /UIstop  149It is important to realize how obfuscated location systems must be used in practice. One obvious option is the use of stored location tracks that are only of statistical or historical signi/f_icance. /T_his might prevent attackers from using such logs to their advantage, while still allowing, for example, statisti-cal inference over many such tracks. /T_heir online use is more problematic, because degrading the accuracy or precision of position information when using a location-based service might directly aÔ¨Äect the quality of the ser-vice, or increase the cost of its use (e.g., sending 19 false queries to hide one‚Äôs true location might incur 20 times as much service charge).An o/f_ten used measure for the strength of such an approach is using the above-mentioned concept of L-anonymity within the context of a location system: /T_he location infrastructure pools location requests from at least L users and changes all queries so that the location information given by each user is suÔ¨Éciently imprecise to make them indistinguishable from the L ‚àí 1 other users. /T_his pooling can also be done by the clients themselves, by using ad hoc communication and routing location requests among several peers /f_irst‚Äîsimilar to a mix network (see Section 3.3.2)‚Äîuntil an ‚Äúexit‚Äù node then actually sends oÔ¨Ä the request (using a properly adjusted location area that also comprises the original node).Kriplean et al. (2007) propose an access control system to stored loca-tion information that takes the past location information of the inquirer into account: queries are only executed on data that the inquirer could have seen herself at the time; that is, the returned data are centered around a small area of the inquirer‚Äôs own location trace. /T_his can still oÔ¨Äer useful services, for example, for /f_inding lost objects of the owner (‚ÄúWhere did I last see this item?‚Äù) or to refresh one‚Äôs own memory (‚ÄúWho did I meet this morning in the hallway that I wanted to send email to later?‚Äù). Obviously, users need to trust the infrastructure to properly enforce this concept of QIZTJDBMBDDFTTDPOUSPM. /T_hus, this solution is much more about how to give users control over who can access their data‚Äîin this case, a default rule would limit access to people who were colocated.3.3.5.1  Conclusions 1. Ubicomp challenges privacy due to its novel technical capabilities, large coverage (both in time and space), novel types of data col-lected, vague collection purposes, and envisioned data interchange. Although standard technological /f_ixes exist (PETs), they do not fully cover the many peculiarities of ubicomp applications.
93606_Book.indb   1498/26/09   1:39:06 PM 150  /UIstop  Marc Langheinrich 2. Research in privacy for smart environments attempts to uncover and control information /f_lows between data subjects and system opera-tors, and between users of the system. ‚ÄúSticky policies‚Äù allow for the propagation of use policies, but de/f_ining and adjusting such policies is a challenge for users. Smart environments require novel user inter-faces to allow for the inspection and control of their information /f_lows. 3. RFID applications envision highly automated environments that allow for the unobtrusive detection of tagged artifacts, and implic-itly the people carrying those. Due to the high number of items and the lack of user interface, oÔ¨Äering users to control who can read what tags is diÔ¨Écult. /T_he low resources available on passive RFID tags additionally challenge the use of traditional security protocols. 4. /T_he data created by location-based services can either be anony-mized or obfuscated to protect the identity of the data subject, yet with the help of some simple background information, attackers can circumvent much of this. /T_hese techniques also aÔ¨Äect service quality, as the /f_idelity of information is o/f_ten signi/f_icantly decreased. Even if the localization service is trusted, there still remains the problem of allowing users to simply control location disclosure to others.3.3.5.2 Further ReadingAlastair R. Beresford: Location Privacy in Ubiquitous Computing. PhD disser-tation, published as technical report UCAM-CL-TR-612, University of Cambridge, Cambridge, UK, January 2005.A good overview of the threats and issues in location privacy, and a detailed discussion of the concept of mix zones.Matt Duckham and Lars Kulik: A formal model of obfuscation and negotiation for location privacy. In: 1FSWBTJWF$PNQVUJOH. /T_hird International Conference, PERV ASIVE 2005, Munich, Germany, May 8‚Äì13, 2005. LNCS 3468, Springer, Berlin, pp. 152‚Äì170, 2005.Duckham and Kulik de/f_ine a formal model for obfuscation and outline methods for using obfuscation in practice.John Krumm: A survey of computational location privacy. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH, 13, 2009. Special Issue on Privacy in Ubiquitous Computing (forthcoming). A prior workshop submission with the same title is available at www.vs.inf.ethz.ch/events/uc07privacy/program.html.Provides a concise overview of the literature and serves as an excellent start-ing point.
93606_Book.indb   1508/26/09   1:39:06 PM Privacy in Ubiquitous Computing  /UIstop  1513.4  HOW TO ADDRESS PRIVACY IN YOUR UBICOMP WORKWhat is there to do if you want to accommodate privacy in your ubicomp system? How would you design your ubicomp application to make sure it respects and supports the privacy of its users? As noted in Section 3.1, there is no simple answer, no set of algorithms or routines that, when applied, will /f_ix the privacy issue once and for all.What the preceding sections hopefully illustrated is the TDPQF of the privacy problem (technical, legal, social), and that simply having a good /f_irewall or implementing strong 128-bit security are not enough. Instead, one needs to carefully analyze each and every ubicomp application: What is it supposed to do, and how does it do it? How are users using it in their daily routines? And what technical and organizational tools are available to support privacy and security under these circumstances? /T_he three steps described below try to illustrate the type of question you should be asking, in order to increase the chances of ‚Äúgetting it right.‚Äù3.4.1  Understand Your Application (Consider Users and Use)If there is no single answer, no single set of ‚Äúto do‚Äôs‚Äù that will ensure the pri-vacy of our users, then each solution must be more or less unique, depend-ing on the particular ubicomp system and application one wants to build. Consequently, you will /f_irst need to understand how this application (or the potential applications that are being built on top of this system) is supposed to work: What problem does it try to solve? How do people currently solve or work around this problem? How are people expected to use your appli-cation? And maybe also: How are people BDUVBMMZ using your system?/T_hese questions are, by no means, speci/f_ic to privacy, but simply good interaction design practices, as summarized, for example, by Reimann (2001):Interaction Design is a design discipline dedicated to de/f_ining the behavior of artifacts, environments, and systems (i.e., products) and therefore concerned with:De/f_ining the form of products as they relate to their behavior tand useAnticipating how the use of products will mediate human rela-ttionships and aÔ¨Äect human understandingExploring the dialogue between products, people, and contextst
93606_Book.indb   1518/26/09   1:39:07 PM 152  /UIstop  Marc LangheinrichUnderstanding users and their use of your application is critical for assessing the privacy implications (Lederer et al., 2004). As discussed in Section 3.2, privacy issues do not happen in a vacuum: privacy is not a monotonically behaving function (i.e., the more, the better), so one will need to understand when someone needs what access and what type of control to what type of data. Simply providing anonymity or access con-trol does not create ‚Äúprivacy.‚ÄùSmith et al. (2005) illustrate this point nicely in a /f_ield study involv-ing a location-aware mobile phone application called ‚ÄúReno.‚Äù Participants could use Reno to automatically or manually share their current location with their friends or family. Users who shared their location information were mostly spouses or close friends, so a high level of trust existed and thus the willingness to share one‚Äôs current location was high. However, users still reported incidents of perceived privacy violations, for example, when an automatic trigger that they con/f_igured suddenly noti/f_ied others of their location, but in a context that they did not anticipate:Participant g: ‚ÄúMy phone disclosed my location to [participant a] last night when I was out running an errand and was returning to my house ([a] has a trigger for my house). I‚Äôm now reconsidering that trigger because I felt weird about that one. I didn‚Äôt feel weird when he got noti/f_ied I was ‚Äúhome from work‚Äù but did about the late-night errand running.‚ÄùIn addition, Friedman et al. (2006) propose to explicitly incorporate WBMVFT into the design of information system, a process they call WBMVFTFOTJUJWFEFTJHO. Value sensitive design incorporates conceptual, empiri-cal, and technical investigations in order to identify both direct and indi-rect stakeholders, uncover their values and beliefs, describe the social context in which technology is used, and uncover the hidden values that are inherent in a particular technological solution. An example on how to apply this methodology in the context of ubicomp can be found in the work of Freier et al. (2005) or in the works of Camp and Connelly (2007).3.4.2  DeÔ¨Åne the Problem (Think Attacker Model in Security)Once you understand how your application is supposed to work, how you expect your users to interact with it, and what assumptions and values are 
93606_Book.indb   1528/26/09   1:39:07 PM Privacy in Ubiquitous Computing  /UIstop  153coded into the system design, you can start de/f_ining what needs protec-tion, that is, what type of privacy you want to provide to your users. If you do not know what you are trying to protect, and what you want to protect it against, how can you know when you are successful? De/f_ining privacy is a fractal problem and if you do not set out clear limits, you will /f_ind your-self endlessly chasing ‚Äúbut, what if ‚Ä¶?‚Äù situations.Felton (2003) discusses these types of questions as having a long tradi-tion in computer security, running under the term UISFBUNPEFM or BUUBDLFSNPEFM*:/T_he /f_irst rule of security analysis is this: understand your threat model. Experience teaches that if you don‚Äôt have a clear threat model‚Äîa clear idea of what you are trying to prevent and what technical capabili-ties your adversaries have‚Äîthen you won‚Äôt be able to think analyti-cally about how to proceed. /T_he threat model is the starting point of any security analysis.As we described in Section 3.2, privacy is not only about an active ‚Äúadversary‚Äù that is ‚Äúthreatening‚Äù your privacy (although this, of course, also happens). Privacy is also about opportunistic data use (i.e., data that has been given for one purpose is recycled for another) or involuntary disclosures (e.g., someone who is entitled to receive information JOHFOFSBM should not have gotten this information in a QBSUJDVMBS, unexpected situ-ation). Consequently, we will need to cast a slightly broader net and not only think about BUUBDLT on our data, but on PQQPSUVOJUJFT for unwanted disclosure, based on actual and potential information /f_lows (cf. Figure 3.4) within and between applications. Hong (2004) consequently prefers to talk about QSJWBDZSJTLNPEFMT instead of privacy UISFBU models.Hong and Landay (2004) propose to analyze personal information /f_lows in an application from two viewpoints: the TPDJBMBOEPSHBOJ[BUJPOBMcontext, and the UFDIOPMPHJDBM context. /T_he social and organizational context looks at application stakeholders and their use of the system (see Section 3.4.1), but with a particular focus on the actual information /f_low, for example, ‚ÄúWho are the EBUBTIBSFST, who are the EBUBPCTFSWFST?‚Äù or ‚ÄúWhat kind of data are shared and what is the value proposition for sharing it?‚Äù /T_he technological context then examines the mechanisms collecting * /T_here is actually a subtle but important diÔ¨Äerence between the two terms, but for our purposes this does not really matter. See, for example, McGraw (2006) for a discussion.
93606_Book.indb   1538/26/09   1:39:07 PM 154  /UIstop  Marc Langheinrichinformation (push vs. pull; one-time vs. continuous; granularity, accu-racy, precision), the means of solicitation (opt-in or opt-out; automatic or manual), and how storage and access are handled (retention, encryption, access control). /T_his analysis then forms the basis for privacy risk man-agement, where identi/f_ied privacy risks are prioritized and translated into design guidelines. Prioritization is based on a cost-bene/f_it analysis that factors the likelihood for an unwanted disclosure, the damage resulting from this, and the cost of protection.It is important to note that similar types of exercises have become com-mon in industrial and governmental projects involving the collection and processing of personal data. So-called QSJWBDZJNQBDUBTTFTTNFOUT are recommended by several data protection agencies to ensure legal com-pliance to national and international privacy laws, for example, by the Australian Privacy Commissioner* (Clarke, 2008) or the UK Information Commissioner.‚Ä†3.4.3  Know Your Tools (Get the Technical Details Right)Last but not least, you have tomake sure that you know the capabilities and limits of current security and access control technology, so that you neither reinvent the wheel nor prematurely assume a problem solved. /T_his is especially true if multiple technologies converge. Ubicomp applica-tions o/f_ten face severe technological challenges, both in terms of resources (energy, processing power, storage) and interfaces (e.g., small screens, ges-ture input). Relevant work includes security for wireless sensor networks (Perrig et al., 2004) or RFID (Juels, 2005), as well as security and privacy interfaces (Cranor, 2005)./T_he data collected in ubicomp applications also pose novel challenges to anonymization methods (Agrawal et al., 2002)‚Ä° and online subject access (Roussopoulos et al., 2008). As discussed in Section 3.3, even anonymous data collected in a ubicomp application may easily be deanonymized, for example, in the context of location privacy. /T_he problem of subject access¬ß * See http://www.privacy.gov.au/publications/pia06/.‚Ä† See http://www.ico.gov.uk/upload/documents/pia_handbook_html/html/foreword.html.‚Ä° See http://en.wikipedia.org/wiki/AOL_search_data_scandal and http://www.aolstalker.com/ for an example of how diÔ¨Écult it is to anonymize search records.¬ß Many privacy and data protection laws guarantee the data subject access to the data that are collected about him or her.
93606_Book.indb   1548/26/09   1:39:07 PM Privacy in Ubiquitous Computing  /UIstop  155is exacerbated by the latent identi/f_iabilty of anonymized human activity, physiognomic and movement data. /T_he rapidly growing area of SFBMJUZNJOJOH (Eagle and Pentland, 2006) might not only provide means to make sense of such sensor data, but also oÔ¨Äer clues as to their proper anonymization.3.4.3.1  Conclusions 1. ‚ÄúSolving‚Äù the problem of personal privacy in ubicomp applications requires the careful analysis of application use and users, informa-tion /f_lows and privacy risks, and technical options. 2. Privacy risk analysis and privacy impact assessments can help to identify privacy issues in actual and planned deployments of ubi-comp applications. 3. Traditional technology tools to provide security, anonymity, and pri-vacy need to take the special challenges of ubicomp applications into account, for example, resource-constraint operations and large-scale behavioral data sets.3.4.3.2  Further ReadingJames Waldo, Herbert S. Lin, and Lynette I. Millett, &OHBHJOH1SJWBDZBOE*OGPSNBUJPO5FDIOPMPHZJOB%JHJUBM"HF, Computer Science and Telecommuni-cations Board, National Academies Press, Washington, DC, 2007/T_he book is the result of a multiyear study committee on Privacy in the Information Age, sponsored by the Computer Science and Telecommunications Board of the U.S. National Research Council. It presents a comprehensive and multidisciplinary examination of privacy in the information age, not directly focusing ubicomp applications, but with a wide enough view that looks toward current and future technologi-cal developments. /T_he full text is available for free from http://books.nap.edu/catalog.php?record_id=11896#toc.David Wright, Serge Gutwirth, Michael Friedewald, Elena Vildjiounaite, and Yves Punie (Eds.), 4BGFHVBSETJOB8PSMEPG"NCJFOU*OUFMMJHFODF, Springer, Dordrecht, 2008.Based on the results of an EU research project with the same title (SW AMI for short) the book illustrates the threats and vulnerabilities of ubicomp applications via four ‚Äúdark scenarios. ‚Äù /T_he authors analyze and identify safeguards to counter the foreseen threats and vulnerabilities, and make recommendations to policymakers and other stakeholders on how to pro-tect privacy in future ubicomp scenarios.
93606_Book.indb   1558/26/09   1:39:07 PM 156  /UIstop  Marc LangheinrichBIBLIOGRAPHYAgrawal, R., Kiernan, J., Srikant, R., & Xu, Y . (2002). Hippocratic databases. 1SPDFFEJOHTPGUIFUI*OUFSOBUJPOBM$POGPO7FSZ-BSHF%BUBCBTFT	7-%#
, Hong Kong, China, pp. 143‚Äì154.Altman, I. (1975). /T_hF&OWJSPONFOUBOE4PDJBM#FIBWJPS1SJWBDZ1FSTPOBM4QBDF5FSSJUPSZBOE$SPXEJOH. Monterey, CA, USA: Brooks/Cole.Bellotti, V ., & Sellen, A. (1993). Design for privacy in ubiquitous computing environments. 1SPDFFEJOHT PGUIF /T_hJSE&VSPQFBO$POGFSFODFPO$PNQVUFS4VQQPSUFE$PPQFSBUJWF8PSL&$4$8, Milano, 13‚Äì17 September 1993, pp. 75‚Äì90, Kluwer.Beresford, A. R. (2005). -PDBUJPO1SJWBDZJO6CJRVJUPVT$PNQVUJOH Cambridge, UK: University of Cambridge.Beresford, A. R., & Stajano, F. (2003). Location privacy in pervasive computing. *&&&1FSWBTJWF$PNQVUJOH, (1), 46‚Äì55.Beresford, A. R., & Stajano, F. (2003). Mix Zones: User privacy in location-aware services. 1SPDFFEJOHTPGUIF'JSTU*&&&*OUFSOBUJPOBM8PSLTIPQPO1FSWBTJWF$PNQVUJOHBOE$PNNVOJDBUJPO4FDVSJUZ	1FS4FD
. Piscataway: IEEE.Camp, L. J., & Connelly, K. (2007). Beyond consent: Privacy in ubiquitous computing. In: A. Acquisti, S. De Capitani di Vimercati, S. Gritzalis, & C. Lambrinoudakis (Eds.), %JHJUBM1SJWBDZ/T_hFPSZ5FDIOPMPHJFTBOE1SBDUJDFT, pp. 327‚Äì346. Boca Raton, FL, USA: Auerbach Publications.Casassa Mont, M., Pearson, S., & Bramhall, P . (2003). Towards accountable man-agement of identity and privacy: Sticky policies and enforceable tracing ser-vices. 1SPDFFEJOHTPGUIFUI*OUFSOBUJPOBM8PSLTIPQPO%BUBCBTFBOE&YQFSU4ZTUFNT "QQMJDBUJPOT 	%&9" 
, September 1‚Äì5, 2003, Prague, Czech Republic, pp. 377‚Äì382. IEEE Society.Chaum, D. (1981). Untraceable electronic mail, return addresses, and digital pseudonyms. $PNNVOJDBUJPOTPGUIF"$.(2), 84‚Äì90.Chaum, D., Fiat, A., & Naor, M. (1988). Untraceable electronic cash. 1SPDFFEJOHTPGUIFUI"OOVBM*OUFSOBUJPOBM$SZQUPMPHZ$POGFSFODFPO"EWBODFTJO$SZQUPMPHZ	$3:150
-/$4, pp. 319‚Äì327. New Y ork: Springer.Clarke, R. (2008). Privacy impact assessment in Australian contexts. (L. Ralph, Ed.) F-BX+PVSOBM(1), 72‚Äì93.Cohen, J. E. (2000). Examined lives: Informational privacy and the subject as object. 4UBOGPSE-BX3FWJFX,, 1373‚Äì1438.Cranor, L. F., Reagle, J., & Ackerman, M. S. (1999). #FZPOE$PODFSO6OEFSTUBOEJOH/FU6TFST"UUJUVEFT"CPVU0OMJOF1SJWBDZ AT&T Labs Research.Cranor, L. (2005). 4FDVSJUZBOE6TBCJMJUZ Sebastopol, CA, USA: O‚ÄôReilly.Cranor, L. (2002). 8FC1SJWBDZXJUI11 Sebastopol, CA, USA: O‚ÄôReilly.Danezis, G., Lewis, S., & Anderson, R. (2005). How much is location privacy worth. Fourth Workshop on the Economics of Information Security, Harvard University.Dourish, P ., & Anderson, K. (2006). Collective information practice: Exploring privacy and security as social and cultural phenomena. )VNBO$PNQVUFS*OUFSBDUJPO(3), 319‚Äì342.
93606_Book.indb   1568/26/09   1:39:07 PM Privacy in Ubiquitous Computing  /UIstop  157Eagle, N., & Pentland, A. (2006). Reality mining: Sensing complex social systems. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH(4), 255‚Äì268.Felten, E. (2003). DRM, and the First Rule of Security Analysis. Retrieved January 30, 2009, from Freedom to Tinker: http://www.freedom-to-tinker.com/blog/felten/drm-and-/f_irst-rule-security-analysisFinkenzeller, K. (2003). 3'*%)BOECPPL (2nd ed.). Chichester, UK: Wiley & Sons.Fishkin, K., Roy, S., & Jiang, B. (2005). Some methods for privacy in RFID commu-nication. In: C. Castelluccia, H. Hartenstein, C. Paar, & D. WesthoÔ¨Ä (Eds.), &VSPQFBO8PSLTIPQPO4FDVSJUZJO"EIPDBOE4FOTPS/FUXPSLT	&4"4
 -/$4, pp. 42‚Äì53. Berlin: Springer.Freier, N. G., Consolvo, S., Kahn, P . H., Smith, I., & Friedman, B. (2005, April 3). "7BMVF4FOTJUJWF%FTJHO*OWFTUJHBUJPOPG1SJWBDZGPS-PDBUJPO&OIBODFE$PNQVUJOH (A. Light, P . J. Wild, A. Dearden, & M. Muller, Eds.) Retrieved January 30, 2009, from Workshop on Quality Value(s) and Choice: Exploring Wider Implications of HCI Practice (QVC) at CHI 2005, Portland, OR, USA. http://www.eng.cam.ac.uk/~pw308/workshops/QVC/papers.html.Friedman, B., Kahn, P . H., & Borning, A. (2006). Value sensitive design and information systems. In: P . Zhang, & D. Galletta (Eds.), )VNBO$PNQVUFS*OUFSBDUJPOJO.BOBHFNFOU*OGPSNBUJPO4ZTUFNT, pp. 348‚Äì372. New Y ork: M. E. Sharpe, Inc.Grudin, J. (2001). Desituating action: Digital representation of context. )VNBO$PNQVUFS*OUFSBDUJPO(2), 269‚Äì286.Hong, J. I. (2004). Privacy risk models for designing privacy-sensitive ubiquitous computing systems. 1SPDFFEJOHTPGUIFUI$POGFSFODFPO%FTJHOJOHJOUFSBDUJWF4ZTUFNT1SPDFTTFT1SBDUJDFT.FUIPETBOE5FDIOJRVFT	%*4
, Cambridge, MA, USA, August 1‚Äì4, 2004, pp. 91‚Äì100. New Y ork: ACM.Hong, J. I., & Landay, J. A. (2004). An architecture for privacy-sensitive ubiquitous computing. 1SPDFFEJOHTPGUIF4FDPOE*OUFSOBUJPOBM$POGFSFODFPO.PCJMF4ZTUFNT"QQMJDBUJPOTBOE4FSWJDFT	.PCJ4ZT
, June 6‚Äì9, 2004, Hyatt Harborside, Boston, Massachusetts, USA, pp. 177‚Äì189. New Y ork: ACM.Juels, A. (2005). RFID privacy: A technical primer for the non-technical reader. In: D. S. Raicu, & K. Strandburg (Eds.), 1SJWBDZBOE5FDIOPMPHJFTPG*EFOUJUZ"$SPTT%JTDJQMJOBSZ$POWFSTBUJPO, pp. 57‚Äì74. Berlin: Springer.Kriplean, T., Welbourne, E., Khoussainova, N., Rastogi, V ., Balazinska, M., Borriello, G., et al. (2007). Physical access control for captured RFID data. *&&&1FSWBTJWF$PNQVUJOH(4), 48‚Äì55.Krumm, J. (2008). A survey of computational location privacy. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH (Online First).Kumaraguru, P ., & Cranor, L. F. (2005). 1SJWBDZ*OEFYFT"4VSWFZPG8FTUJOT4UVEJFT Institute for So/f_tware Research International, School of Computer Science. Pittsburgh, PA, USA: Carnegie Mellon University.Langheinrich, M. (2002). A privacy awareness system for ubiquitous comput-ing environments. In: G. Borriello, & L.-E. Holmquist (Eds.), 1SPDFFEJOHT6CJRVJUPVT $PNQVUJOH UI *OUFSOBUJPOBM $POGFSFODF 	6#*$0.1 
 -/$4, G√∂teborg, Sweden, September 29‚ÄìOctober 1, 2002, pp. 237‚Äì245. New Y ork: Springer.
93606_Book.indb   1578/26/09   1:39:08 PM 158  /UIstop  Marc LangheinrichLangheinrich, M., & Marti, R. (2007). Practical minimalist cryptography for RFID Privacy. *&&&4ZTUFNT+PVSOBM4QFDJBM*TTVFPO3'*%5FDIOPMPHZ(2), 115‚Äì128.Lederer, S., Hong, J. I., Dey, A. K., & Landay, J. A. (2004). Personal privacy through understanding and action: Five pitfalls for designers. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH(9), 440‚Äì454.Litman, J. (2000). Information privacy/information property. 4UBOGPSE-BX3FWJFX(5), 1283‚Äì1313.Marx, G. T. (2001). Murky conceptual waters: /T_he public and the private. &UIJDTBOE*OGPSNBUJPO5FDIOPMPHZ(3), 157‚Äì169.McGraw, G. (2006). 4P/f_twBSF4FDVSJUZ#VJMEJOH4FDVSJUZ*O Amsterdam, /T_he Netherlands: Addison-Wesley Longman.Molnar, D., Soppera, A., & Wagner, D. (2005). A scalable, delegatable pseudo-nym protocol enabling ownership transfer of RFID tags. 4FMFDUFE"SFBTJO$SZQUPHSBQIZ¬â4"$,JOHTUPO$BOBEB"VHVTU -/$4, pp. 276‚Äì290. Heidelberg: Springer.Ohkubo, M., Suzuki, K., & Kinoshita, S. (2005). Cryptographic approach to ‚Äúprivacy-friendly‚Äù tags. In S. Gar/f_inkel, & B. Rosenberg (Eds.), 3'*%"QQMJDBUJPOT4FDVSJUZBOE1SJWBDZUpper Saddle, NJ: Addison-Wesley.Palen, L., & Dourish, P . (2003). Unpacking ‚Äúprivacy‚Äù for a networked world. 1SPDFFEJOHTPGUIF$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT$)*, Ft. Lauderdale, Florida, USA, April 5‚Äì10, 2003, pp. 129‚Äì136. New Y ork: ACM.Partridge, K., & Golle, P . (2008). On using existing time-use study data for ubiq-uitous computing applications. In: J. McCarthy, J. Scott, & W . Woo (Eds.), 6CJ$PNQ, September 21‚Äì24, 2008, Seoul, Korea, 344, pp. 144‚Äì153. New Y ork: ACM.Perrig, A., Stankovic, J., & Wagner, D. (2004). Security in wireless sensor networks. $PNNVOJDBUJPOTPGUIF"$.(6), 53‚Äì57.Priyantha, N. B., Chakraborty, A., & Balakrishnan, H. (2000). /T_he Cricket location-support system. 1SPDFFEJOHTPGUIFUI"OOVBM*OUFSOBUJPOBM$POGFSFODFPO.PCJMF$PNQVUJOHBOE/FUXPSLJOH	.PCJDPN
, pp. 32‚Äì43. New Y ork, NY: ACM.Quigley, A., Ward, B., Ottrey, C., Cutting, D., & Kummerfeld, R. (2004). BlueStar, a privacy centric location aware system. 1PTJUJPO-PDBUJPOBOE/BWJHBUJPO4ZNQPTJVN	1-"/4
, pp. 684‚Äì689. IEEE.Reimann, R. (2001). So Y ou Want To Be An Interaction Designer. Retrieved January 30, 2009, from Cooper Interaction Design: http://www.cooper.com/journal/2001/06/so_you_want_to_be_an_interacti.htmlRieback, M. R., Gaydadjiev, G., Crispo, B., Hofman, R., & Tanenbaum, A. (2006). A platform for RFID security and privacy administration. 1SPDFFEJOHTPGUIF 64&/*94"(& -BSHF *OTUBMMBUJPO 4ZTUFN "ENJOJTUSBUJPO $POGFSFODF, pp. 89‚Äì102. New Y ork: ACM.R√∂ssler, B. (2001). %FS8FSUEFT1SJWBUFO Frankfurt, Germany: Suhrkamp.Roussopoulos, M., Beslay, L., Bowden, C., Finocchiaro, G., Hansen, M., Langheinrich, M., et al. (2008). 5FDIOPMPHZ*OEVDFE$IBMMFOHFTJO1SJWBDZBOE%BUB1SPUFDUJPOJO&VSPQF European Network and Information Security Agency. Heraklion, Crete, Greece: ENISA.
93606_Book.indb   1588/26/09   1:39:08 PM Privacy in Ubiquitous Computing  /UIstop  159Smith, I., Consolvo, S., LaMarca, A., Hightower, J., Scott, J., Sohn, T., et al. (2005). Social disclosure of place: From location technology to communication prac-tices. In: H. W . Gellersen, R. Want, & A. Schmidt (Eds.), 1FSWBTJWF$PNQVUJOH1SPDFFEJOHT/T_hJSE*OUFSOBUJPOBM$POGFSFODF1&37"4*7&, -/$4, Munich, Germany, May 8‚Äì13, 2005, pp. 134‚Äì151. Berlin: Springer.Solove, D. J. (2006). A taxonomy of privacy. 6OJWFSTJUZPG1FOOTZMWBOJB-BX3FWJFX(3), 477‚Äì560.Solove, D. J. (2007). /T_hF'VUVSFPG3FQVUBUJPO(PTTJQ3VNPSBOE1SJWBDZPOUIF*OUFSOFU. New Haven, CT, USA: Y ale University Press.Solove, D. J. (2008). 6OEFSTUBOEJOH 1SJWBDZ Cambridge, MA, USA: Harvard University Press.Solove, D. J., Rotenberg, M., & Schwartz, P . M. (2006). 1SJWBDZ*OGPSNBUJPOBOE5FDIOPMPHZ New Y ork, NY , USA: Aspen.Solove, D. J., & Schwartz, P . M. (2009). *OGPSNBUJPO1SJWBDZ-BX, 3rd Edition. New Y ork, NY , USA: Aspen.Spreitzer, M., & /T_heimer, M. (1993). Providing location information in a ubiquitous computing environment. 1SPDFFEJOHTPGUIF'PVSUFFOUI"$.4ZNQPTJVNPO0QFSBUJOH4ZTUFNT1SJODJQMFT	4041‚Äô
, pp. 270‚Äì283. New Y ork, NY: ACM.Sweeney, L. (2002). L-Anonymity: A model for protecting privacy. *OUFSOBUJPOBM+PVSOBM PO 6ODFSUBJOUZ 'V[[JOFTT BOE ,OPXMFEHFCBTFE 4ZTUFNT (5), 557‚Äì570.TNS Emnid. (2006). ,VOEFOLBSUFO FUBCMJFSFO TJDI BMT GFTUF &JOLBVGTCFHMFJUFS. Bielefeld, Germany: TNS Emnid.Warren, S., & Brandeis, L. (1890). /T_he right to privacy. )BSWBSE-BX3FWJFX(5), 193‚Äì220.Weis, S. A., Sarma, S. E., Rivest, R. L., & Engels, D. W . (2003). Security and privacy aspects of low-cost radio frequency identi/f_ication systems. In: D. Hutter, G. Muller, W . Stephan, & M. Ullmann (Eds.), 4FDVSJUZJO1FSWBTJWF$PNQVUJOH pp. 50‚Äì59. Berlin: Springer.Weiser, M. (1991). /T_he computer for the 21st century. 4DJFOUJ“áD"NFSJDBO(3), 94‚Äì104.Westin, A. F. (1967). 1SJWBDZBOE'SFFEPN New Y ork, NY , USA: Atheneum.
93606_Book.indb   1598/26/09   1:39:08 PM 93606_Book.indb   1608/26/09   1:39:08 PM 4CHAPTER Ubiquitous Computing Field StudiesA. J. Bernheim BrushCONTENTS4.1 Introduction 1624.2 /T_hree Common Types of Field Studies 1644.2.1 Current Behavior 1654.2.2 Proof of Concept 1664.2.3 Experience Using a Prototype 1684.3 Study Design 1694.3.1 What Will Participants Do? 1694.3.1.1 Control Condition 1714.3.2 What Data Will You Collect? 1734.3.2.1 Logging 1744.3.2.2 Surveys 1754.3.2.3 Experience Sampling Methodology 1764.3.2.4 Diaries 1774.3.2.5 Interviews 1784.3.2.6 Unstructured Observation 1804.3.3 How Long Is Your Study? 1804.4 Participants 1814.4.1 Ethical Treatment of Participants 1814.4.2 Participant Pro/f_ile 1824.4.3 Number of Participants 1844.4.4 Compensation 185
93606_Book.indb   1618/26/09   1:39:08 PM 162  /UIstop  A. J. Bernheim Brush
4.1  INTRODUCTIONUbiquitous computing (ubicomp) weaves computing into our everyday environments and devices. People and their use of technology are at the center of this vision, necessitating an understanding both of people‚Äôs needs and their reactions to new ubicomp applications and experiences. /T_he 4.5 Data Analysis 1864.5.1 Statistics 1874.5.1.1 Descriptive Statistics 1874.5.1.2 Inferential Statistics: Signi/f_icance Tests 1894.5.2 Unstructured Data 1914.5.2.1 Simple Coding Techniques 1914.5.2.2 Deriving /T_hemes and Building /T_heory 1924.6 Steps to a Successful Study 1944.6.1 Study Design Tips 1944.6.1.1 Have a Clear Research Goal 1944.6.1.2 Create a Study Design Document 1944.6.1.3 Make Scripts for Participant Visits 1954.6.1.4 Pilot Your Study 1954.6.2 Technology Tips 1964.6.2.1 Make Your Technology Robust Enough 1964.6.2.2 Consider Other Evaluation Methods 1964.6.2.3 Use Existing Technology 1964.6.2.4 Get Reassuring Feedback 1964.6.2.5 Negative Results 1974.6.3 Running the Study 1974.6.3.1 Have a Research Team 1974.6.3.2 Make Participants Comfortable 1974.6.3.3 Safety 1974.6.3.4 Be Flexible 1984.6.4 Data Collection and Analysis 1984.6.4.1 Be Objective 1984.6.4.2 /T_he Participant Is Always Right 1984.6.4.3 Do Not Make Inappropriate Claims 1984.7 Conclusion 199Acknowledgments 199References 200
93606_Book.indb   1628/26/09   1:39:08 PM Ubiquitous Computing Field Studies  /UIstop  163/f_ield of human-computer interaction, drawing from other /f_ields includ-ing psychology and anthropology, has developed numerous approaches to understanding how people interact with technology. /T_hese methods include user studies, focus groups, ethnography, and heuristic evaluations. Although using a variety of methods to incorporate user needs and feed-back throughout the process of designing technology is critical, this chapter describes how to plan and conduct a “áFMETUVEZ, also referred to as an in situ study. Field studies are a particular type of user study conducted outside a research laboratory or controlled environment (i.e., ‚Äúin the /f_ield‚Äù). Field studies oÔ¨Äer the opportunity to observe people and their use of technology in the real world, in contrast to a MBCPSBUPSZ user study, where participants* come into your controlled environment and complete tasks you specify.As other researchers have argued (e.g., Consolvo et al., 2007; Rogers et al., 2007), /f_ield studies are o/f_ten the most appropriate method for studying peo-ple‚Äôs use of ubicomp technologies. Studies conducted in situ allow researchers to collect abundant data about the use of technologies they have developed, observe the unexpected challenges participants may experience, and better understand how their technology impacts participants‚Äô lives. /T_he trade-oÔ¨Ä  for increased realism is a loss of control over the participant‚Äôs experience, so /f_ield studies are not appropriate for all evaluations; indeed, for many research questions, a laboratory study where you have complete control over the envi-ronment may be more appropriate. When considering a /f_ield study, it is criti-cal to think carefully about why you want to conduct a study and what you hope to learn from doing one. Field studies require considerable time and eÔ¨Äort and should not be undertaken lightly. You should not undertake a /f_ield study because you think it is a requirement to get a paper accepted to a con-ference or because you would just like to see how people use your ubicomp application, but rather because your research questions requires it. Field study can be very valuable and even necessary in order to understand user needs or technology usage in a particular domain (e.g., emergency response, homes, etc.) or to evaluate use of a novel ubicomp application more realistically than can be done in a laboratory environment.Approaches to conducting /f_ield research in ubicomp draw from many diÔ¨Äerent disciplines and research traditions, each with its own style. /T_his chapter takes a pragmatic approach to /f_ield studies and focuses on helping * Many researchers use the term participant for people participating in studies because it seems more respectful than users or subjects.
93606_Book.indb   1638/26/09   1:39:08 PM 164  /UIstop  A. J. Bernheim Brushyou understand the questions you will need to answer to design a study that meets your needs, and introducing data collection and analysis tech-niques that are commonly used in /f_ield studies. You are highly encouraged to read Chapter 5, which describes an alternative approach to conducting research in the /f_ield. Section 4.2 describes three common types of /f_ield studies and introduces examples of each type. Section 4.3 focuses on study design choices, including what your participants will do during the study, what data you will collect, and the length of the study. Section 4.4 outlines considerations around choosing participants for your study and treating them in an ethical manner, whereas Section 4.5 discusses data analysis methods. Section 4.6 outlines pragmatic steps that will help ensure the success of your study. Section 4.7 concludes by emphasizing the value of /f_ield studies.4.2  THREE COMMON TYPES OF FIELD STUDIES/T_he type of study you are conducting and why you are conducting a study will help you determine the SFTFBSDIRVFTUJPO for your study. Examples of research questions include ‚ÄúIs the mobile phone a suitable proxy for the owner‚Äôs location?‚Äù and ‚ÄúDoes context-aware power management have the potential to save energy?‚Äù When designing your study, you will rely on your research question to inform all of the many decisions you need to make, such as what type of participants to recruit, how long the study should be, and what type of data to collect. To cra/f_t your research question, think carefully about what you wish to learn by conducting the /f_ield study. What questions do you want to answer? What will your contribution be that will in/f_luence the research community or inform others working in this area?/T_hree common types of ubicomp /f_ield studies areStudies of current behavior: What are people doing now?tProof-of-concept studies: Does my novel technology function in the treal world?Experience using a prototype: How does using my prototype change tpeople‚Äôs behavior or allow them to do new things?Although other types of /f_ield studies exist including those exploring playful interaction or ludic engagement with ubicomp technologies (e.g., Gaver et al., 2006, 2007), these three types of studies will be the focus of this chapter. To demonstrate the diÔ¨Äerent choices researchers make when 
93606_Book.indb   1648/26/09   1:39:08 PM Ubiquitous Computing Field Studies  /UIstop  165conducting /f_ield studies, examples of each type of study were selected from conferences in the area of ubiquitous computing. /T_he examples highlight a range of diÔ¨Äerent approaches and the types of questions used to frame the research. Interested readers are encouraged to consult the papers describ-ing studies in their entirety for studies that are particularly relevant to them. /T_hroughout the rest of the chapter, more details about these exam-ples will be used to illustrate study design, data collection, and data analy-sis choices.4.2.1  Current BehaviorUnderstanding how people are making use of technology in their lives today can provide researchers with insights and inspiration. /T_his type of /f_ield study explores how people use existing technology./T_he contributions of this type of study are an understanding of current behavior and impli-cations for future technology. Research questions for studies of this type typically emphasize how people use technology and may be very open-ended. /T_he two examples below focus on studies of current behavior with speci/f_ic research questions that make use of interviews and logging, in contrast to more open-ended observations traditionally used in ethnogra-phy, described in detail in Chapter 5.&YBNQMF)PNF5FDIOPMPHZ4IBSJOHBOE6TF	)PNF5FDIOPMPHZ
Brush and Inkpen (2007) conducted an interview study of 15 families in the United States that examined the types of technologies families own, including TV , music players, phones, and computers; where they are situated within the home; and the degree of shared ownership and use. During the visit, the participants were interviewed, sketched the layout of technology in their homes, and gave the researchers a tour of their homes focusing on where computers were located.Research Question: How do families use and share technology in their homes?&YBNQMF1SPYJNJUZPG6TFSTUo /T_hFJS.PCJMF1IPOFT	1IPOF1SPYJNJUZ
Patel et al. (2002) used logging on cell phones and interviews to study the proximity of 16 people to their cell phones over a 3-week period. During the study, participants wore a small Bluetooth beacon, used phones with logging so/f_tware, and participated in weekly interviews.
93606_Book.indb   1658/26/09   1:39:09 PM 166  /UIstop  A. J. Bernheim BrushResearch Question: Is the mobile phone a suitable proxy for the own-er‚Äôs location? What type of information (e.g., cell ID, date, and time) are the best predictors for how close the owner is to the phone?Other examples of studies on current behavior are Sohn et al.‚Äôs (2008) diary study on mobile information needs and WoodruÔ¨Ä et al.‚Äôs (2007) study on the use of laptops in homes.4.2.2  Proof of ConceptUbiquitous computing projects o/f_ten develop novel technology or seek to validate new algorithms and approaches. For this type of study, techno-logical advance is the primary contribution of research rather than /f_ield study. However, it may be important to conduct a /f_ield study to validate the feasibility of an approach or prototype in a real-world environment. /T_hese /f_ield studies may be shorter than the other two types and the research questions generally focus on whether the prototype or algorithm func-tions appropriately in a real environment.&YBNQMF$POUFYU"XBSF1PXFS.BOBHFNFOU	$"1.
Harris and Cahill (2007) conducted a 5-day /f_ield study of 18 par-ticipants to investigate the potential for using context information to improve power management on personal computers (PCs). /T_he computers of participants were augmented with logging so/f_tware that asked a/f_ter a minute of idle time if they were using the PC and sensors that included web cameras, microphones, and ultrasonic object range sensors. Participants also carried a Bluetooth tag on their key chains to provide additional location information.Research Questions: Does CAPM have the potential to save energy? How accurately can it be inferred that the user is not using the device or about to use it?&YBNQMF5FBN"XFBS/T_he TeamAwear system, developed by Page and Vande Moere (2007), is a novel wearable display system for team sports. Augmented basketball jerseys, shown in Figure 4.1a, are worn by players and display game-related information such as the number of points scored and fouls. /T_he researchers used an iterative user-centered design process that involved participants at several points including initial ethnographic observa-tions of basketball games, a set of discussions with representative users, 
93606_Book.indb   1668/26/09   1:39:09 PM Ubiquitous Computing Field Studies  /UIstop  167
and a case study evaluation with 11 participants that included a discus-sion of game-like scenarios and a 15-minute, half-court, 2-2 basketball game with one team wearing the augmented jerseys.Research Questions: Are augmented jerseys usable and useful? How wearable are the jerseys? Do people understand the displays? Do augmented jerseys increase the awareness of game-related informa-tion for athletes, coaches, referees, and spectators?Other examples of proof-of-concept studies include Patel et al. (2007), who investigated whether simple plug-in sensors can be 
 
FIGURE 4.1 (a) Augmented jersey from the TeamAwear system. (Courtesy of Mitchell Page.) (b) CareNet display showing information about an elder‚Äôs activities: (Courtesy of Sunny Consolvo.) (c) Using the AURA sys-tem to scan barcodes on items at a grocery store.(a)(b)
(c)
93606_Book.indb   1678/26/09   1:39:10 PM 168  /UIstop  A. J. Bernheim Brushused to recognize events in homes such as turning on and oÔ¨Ä a television set, and that of Krumm and Horvitz‚Äôs (2006), use of GPS driving data collected from more than 150 people to validate their predestination method for inferring where a driver is going based on his or her driving trajectory.4.2.3 Experience Using a PrototypeAnother type of /f_ield study involves deploying ubiquitous computing proto-types for a longer period, o/f_ten lasting weeks or months, to better understand how people use them. /T_he main contribution of this type of study is the expe-rience of the people using the prototype. Although the technology deployed is typically not commercially available, it may not be a novel contribution. In some cases, researchers may conduct a 8J[BSEPG0[ study, where aspects of a prototype or system are simulated in order to understand the participants‚Äô reactions to systems that are too expensive to fully build and deploy.It is particularly important to take care in specifying your research ques-tion for this type of study. People sometimes frame their research questions as ‚ÄúHow will participants use the prototype?‚Äù However, it is important to recognize that your prototype is one example of how a novel interaction or experience might be instantiated. Other researchers are typically less inter-ested in raw usage information and are de/f_initely not interested in usability problems with your prototype. So, rather than focusing speci/f_ically on how participants will use a prototype, better research questions focus on the con-cept the prototype embodies or tests, for example, ‚ÄúDoes sharing location information lead to privacy concerns?‚Äù or ‚ÄúWill peripheral displays enhance family awareness?‚Äù Framing research question as a hypothesis is one way to help clarify how you think participants will experience your prototype.&YBNQMF$BSF/FUTo explore the value of ambient displays and sensed data for elder care, Consolvo et al. (2004) built and deployed the CareNet display. CareNet, shown in Figure 4.1b, displays data sensed about an elder‚Äôs activities (e.g., medication taken, activity levels) to members of the elder‚Äôs care network on an ambient display in a picture frame form factor. Researchers used the 8J[BSEPG0[ technique to gather data for the CareNet display by phoning the elders several times a day.Hypothesis: Ambient displays can positively impact the local mem-bers of an elder‚Äôs care network.
93606_Book.indb   1688/26/09   1:39:10 PM Ubiquitous Computing Field Studies  /UIstop  169&YBNQMF"EWBODFE6TFS3FTPVSDF"OOPUBUJPO	"63"
/T_he AURA system (Brush et al., 2005) allows a person to scan bar-coded objects, including CDs, DVDs, and packaged grocery prod-ucts, using a wireless pocket PC with an attached barcode reader. A/f_ter scanning a barcode, users can view, store, and share related metadata and annotations about the scanned object. Figure 4.1c shows an AURA /f_ield study participant scanning a grocery item. /T_his study also provides an example of reporting both positive and negative results, and includes the authors‚Äô re/f_lections of issues they encountered during the /f_ield study.Research Questions: How do people use the system? What do they scan? Do people /f_ind the system functional and useful? Does the privacy model meet users‚Äô needs? How do people use the sharing features?Other examples of studies on experiences using a prototype include Ballagas et al.‚Äôs (2008) evaluation of REXplorer, a mobile pervasive game for tourists in Regensburg, Germany, and Matthews et al.‚Äôs (2006) feasibil-ity study of Scribe4Me, a mobile transcription tool for the deaf.4.3  STUDY DESIGNA/f_ter deciding what type of /f_ield study you plan to conduct and your spe-ci/f_ic research question(s), the next step is to design the /f_ield study. It is important to realize that there are very few ‚Äúright‚Äù decisions about how a /f_ield study should be run. Instead, there are many decisions that you will need to justify to yourself and your audience (e.g., other researchers, reviewers, funding agencies, etc.) as appropriate and sensible in order to gather the data needed to address your research question. In determining your study design, the three important questions to consider areWhat will your participants do during the study?tWhat data will you collect?tHow long will the study be?t4.3.1  What Will Participants Do?In planning your /f_ield study, you need to decide what you will ask partici-pants to do during the study. What participants do clearly depends on the type of /f_ield study and your research question. To study current behavior, 
93606_Book.indb   1698/26/09   1:39:10 PM 170  /UIstop  A. J. Bernheim Brushyou might interview participants or log their behavior, whereas in other studies participants typically use a prototype.Given that /f_ield studies are a choice to sacri/f_ice control of the partici-pant‚Äôs experience for realism, experimental design techniques used in laboratory studies are typically less appropriate for a /f_ield study. However, having a high-level understanding of how experimental laboratory stud-ies are designed can help you think about how your /f_ield study should be structured. /T_his is particularly relevant when your study involves giving the participants new technology and understanding their experience.In traditional laboratory studies, researchers specify a hypothesis based on a research question and then gather data through the study to support or reject the hypothesis. To test the hypothesis, researchers identify a vari-able, called the JOEFQFOEFOUWBSJBCMF, that they will vary between diÔ¨Äerent values, called DPOEJUJPOT, during the experiment in order to understand the eÔ¨Äect of variation on the EFQFOEFOUWBSJBCMFTthey are measuring (e.g., task time or user preference). /T_he two main laboratory study designs are within- subjects and between-subjects. In a within-subjects design, also called repeated-measures design, each participant experiences all conditions. So, if your independent variable was versions of an interface and you have two versions (A and B), in a within-subjects study each participant would use both versions. Within-subject designs oÔ¨Äer the advantage that your depen-dent variables can include asking participants to directly compare diÔ¨Äerent conditions. For example, you can ask participants whether they preferred version A or version B of your interface. You can also directly compare any numeric data you collect, such as number of times the participant used the interface, for the same participant across conditions. However, in within-subject designs you need to worry about whether there will be any learn-ing eÔ¨Äects. For example, participants might favor version B or be faster in using it just because it was the second version they used. Counterbalancing or varying the order that diÔ¨Äerent participants experience the conditions is used to mitigate any potential learning eÔ¨Äects.In a between-subjectsdesign, you divide your participants into diÔ¨Äer-ent groups, typically randomly, and each participant experiences only one condition of the independent variable. So half of your participants would use version A of the interface and the other half would use version B. /T_his approach avoids any potential learning eÔ¨Äects, but you generally need to have more participants because you cannot directly compare the behavior of a single user across the conditions. Finally, some studies use a mixed design where some independent variables are within-subjects and some 
93606_Book.indb   1708/26/09   1:39:11 PM Ubiquitous Computing Field Studies  /UIstop  171are between-subjects. Section 14.4 in the work of Preece et al. (2002) has more information on experimental design.In choosing to conduct a /f_ield study instead of a laboratory study, you are emphasizing studying people‚Äôs behavior or use of your prototype in the real world. /T_his makes it impossible to control the environment to the extent that you can have con/f_idence that any one independent variable (or set of independent variables) that you choose to vary is the only thing causing changes in the dependent variables. For this reason, using a within- subject design is preferred for studies with conditions so that you can com-pare the participants‚Äô behavior in one condition against their behavior in another condition, since actions by diÔ¨Äerent participants can vary widely (e.g., AURA researchers had three participants who scanned more than 100 items during the study, and six who scanned fewer than 20 items). A within-subjects design also allows you to ask participants for their quali-tative comparisons between conditions (e.g., diÔ¨Äerent versions of the same interfaces). One particularly useful type of within-subjects condition to consider having in studies that involve a prototype is a control condition.4.3.1.1  Control ConditionIn a control condition, you measure the dependent variables for a certain period before you introduce the technology (e.g., logging for a week a behav-ior that you think might change), then introduce your technology and mea-sure the dependent variables again. /T_his within-subjects design allows you to compare a participant‚Äôs behavior with and without your technology. For example, if you are studying a new location-based application for mobile phones, you might /f_irst collect data on how the participants used their mobile phones before introducing your application so that you can compare participants‚Äô behavior a/f_ter they have used your application to their previous behavior. Even if you do not have a full control condition, it is very common in /f_ield studies to collect some data before introducing new technology to obtain baseline information about your participants and their expectations. However, collecting control data is not appropriate for all ubicomp studies, because your prototype may aÔ¨Äord a behavior that was impossible without it and thus there is no meaningful control condition to compare against. For example, if you wanted to give the location-based mobile application to people that had never used a mobile phone before, you could not compare against previous use of mobile phones, but you might try to collect data about how o/f_ten the participant communicated using landline phones or other communication methods to compare against.
93606_Book.indb   1718/26/09   1:39:11 PM 172  /UIstop  A. J. Bernheim BrushIn addition to deciding on your study method, if you are introduc-ing a new technology in your study, there are a number of pragmatic considerations:Will participants use the technology as they wish or to complete tspeci/f_ic tasks? For some studies you want participants to behave normally, as researchers sought in the Phone Proximity and CAPM studies. However, other studies are exploring whether a technology works in a speci/f_ic setting and ask participants to do something spe-ci/f_ic. For example, part of the TeamAwear study included partici-pants playing a 15-minute, half-court, 2-2 basketball game with one team wearing the augmented jerseys. In the REXplorer study, par-ticipants played a location-aware game (Ballangas et al., 2008).Will you give the participant technology to use or augment the tech-tnology the participant already owns? For example, are you install-ing a new application on the participant‚Äôs laptop or cell phone, or switching their SIM card to a phone you provide? Or perhaps put-ting a novel display in the participant‚Äôs home? /T_here can be advan-tages in augmenting devices that participants already have since they are familiar with those devices. However, you can run into challenges supporting a diverse set of platforms and dealing with unique con/f_igurations as the AURA researchers did. On the other hand, providing your own technology, as was done in the Phone Proximity study, allows you more control and a consistent setup, but it may be unfamiliar to participants. Readers considering stud-ies involving mobile phones are encouraged to read Section 2.4 of Consolvo et al. (2007) for a more in-depth discussion of the advan-tages and disadvantages of providing mobile phones or augmenting participants‚Äô phones.Should you simulate any part of the participant‚Äôs experience? Using tthe 8J[BSEPG0[ technique, where aspects of a prototype or system that are too expensive or time consuming to build and deploy are simulated, can be a valuable approach. Sometimes, the experience you wish to study may not even be possible with current technology. For example, in the CareNet study, the information that was shared on the ambient display about the elder was not automatically sensed. Instead, the researchers spoke with the elder or their caregiver mul-tiple times a day and then manually updated the data shown on 
93606_Book.indb   1728/26/09   1:39:11 PM Ubiquitous Computing Field Studies  /UIstop  173the ambient display. In a feasibility study of the Scribe4Me system (Mathews et al., 2006), human transcribers were used to transcribe audio recorded on the mobile phone.4.3.2  What Data Will You Collect?During a /f_ield study, you can collect RVBOUJUBUJWF a n d  RVBMJUBUJWF data. Quantitative data can be objectively observed and represented numerically (e.g., timing, errors, usage) and can help you understand what happened during the study. For example, how many times a participant used your prototype or how long they used it. On the other hand, qualitative data include a participant‚Äôs unstructured feedback and reactions as well as /f_ield observations you make. Qualitative data help you understand what people think and hopefully why people behaved in certain ways during the study.For /f_ield studies, it is valuable to collect both quantitative and qualitative data. If you collect only quantitative data you have insight into how people behaved, but may have trouble understanding why. If you collect only qualita-tive data you will have insight into why participants did certain things, but may have trouble comparing participants or understanding how closely what participants thought they did mapped to what they really did. When consider-ing what speci/f_ic questions to ask during data collection, /f_irst return to your research question. However, it may also be helpful to look at evaluation metrics used by others doing related research. Scholtz and Consolvo (2004) put forth an evaluation framework for ubicomp applications that proposes the evaluation areas of attention, adoption, trust, conceptual models, interaction, invisibil-ity, impact and side eÔ¨Äects, appeal, and application robustness. /T_he de/f_initions and metrics they provide in their paper may give you ideas for your study.It is obviously impossible to include everything you need to know about data collection methods in one short subsection; instead, diÔ¨Äerent data collection techniques will be introduced with a focus on their use in ubi-comp /f_ield studies. During your study you will likely use more than one of these methods to gather data. In general, you probably want to collect demographic data about your participants, usage data that tell you about their current behavior or how they use your prototype, and reactions to any technology you have introduced.Finally, no matter what data collection methods you choose for your study, you must pilot them before the study starts to make sure that you are collecting the data you need and that you know how you will analyze the data. For sur-veys, this means asking colleagues to take them, for logging it means generat-ing logs and checking data generated by yourself or colleagues. If at all possible, 
93606_Book.indb   1738/26/09   1:39:11 PM 174  /UIstop  A. J. Bernheim Brushconduct a full pilot of your study design with ‚Äúfriendly‚Äù participants (e.g., coworkers, friends) before deploying to your participants in order to /f_ind as many problems as possible with the study design and prototypes in advance./T_he rest of this section introduces diÔ¨Äerent methods for collecting data.4.3.2.1  LoggingIn /f_ield studies, logging is o/f_ten the main method for collecting quantita-tive data about usage, either of existing technology or your novel technol-ogy. When logging data, your prototype typically writes information to a data /f_ile when things occur that you want to know about. For example, both the Phone Proximity and CAPM studies logged data from many dif-ferent sensors to collect a data set on which researchers could do machine learning. /T_he AURA study used logging to determine what objects partici-pants scanned and when they uploaded them to the server to share.Considerations for logging:How will you use the logged data? Although logging is an incredibly tuseful tool, you must have a plan about how you will use the data you are logging. Too o/f_ten people are tempted to try to log everything with the notion that they will /f_igure out a/f_ter the study how to ana-lyze it. /T_his is a recipe for an analysis nightmare as you struggle to abstract out the meaningful information in the log from the noise.Have you forgotten to log something important? Make a list of spe-tci/f_ic questions that you expect to answer from the log data. For each question, identify the events you are logging that you will use to answer the question and then walk through the analysis using data from your own use or a pilot study. Make sure that the data you are logging will answer the questions you expect it to.Will your logging help you know if the study is going smoothly? tAnother valuable use of logging data is for reassurance that the tech-nology is operating as expected. If logging data are collected on a central server (e.g., instead of the device), the presence of data can reassure you that nothing disastrous has happened or warn you that you may need to intervene to avoid the devastating discovery that your /f_ield study needs to be rerun because of a technical problem. /T_his feedback is so valuable that you should consider having your technology ‚Äúphone home‚Äù with an ‚ÄúI‚Äôm ok‚Äù message at regular inter-vals even if logging data are stored locally to a device.
93606_Book.indb   1748/26/09   1:39:11 PM Ubiquitous Computing Field Studies  /UIstop  1754.3.2.2  SurveysSurveys are o/f_ten used to gather data before a /f_ield study begins (presurvey), a/f_ter any changes of condition in a between-subjects study (postcondition), and at the end of the study (postsurvey). In a longer /f_ield study, they may also be used at regular intervals (e.g., a weekly survey) to measure how a participant‚Äôs reactions might be changing. /T_he AURA study had pre- and postsurveys, the CareNet study had a midpoint survey and postsurvey, and participants in the TeamAwear study were surveyed a/f_ter they played basketball.Common types of survey questions are open-ended questions, multiple choice questions, and Likert questions. Open-ended questions ask partici-pants to enter free text answers. In a multiple choice question, participants are given several options to choose from, for example, ‚ÄúDid you like A, B, or C better?‚Äù or participants might be asked to select all options that apply. Likert questions are statements that participants are asked to agree or disagree with. For example, ‚ÄúI like chocolate ice cream‚Äù with the option to select Strongly Agree, Agree, Neutral, Disagree, or Strongly Disagree. Likert questions with /f_ive possible answers are very common; although sometimes a larger scale (e.g., seven or nine answers) is used. /T_he AURA study includes examples of several Likert scale questions participants were asked. See Section 13.3 of Preece et al. (2002) for more information about designing surveys.Below are several factors to consider when creating your survey questions.Are the questions stated to allow both positive and negative responses? tFor example, ‚ÄúHow much do you love the prototype: a little, a lot, an immense amount‚Äù is a leading question with bad options. Instead, you might ask a Likert question: ‚Äú/T_he prototype was easy to use‚Äù with options ranging from Strongly Agree to Strongly Disagree.Are the questions clear to others? Pilot your survey with colleagues tto make sure the questions are clear to them. Watch out for ‚Äúand‚Äù questions. If you ask ‚Äú/T_he prototype was fun and easy to use,‚Äù you will not know if participants were answering about the prototype being fun or easy to use.Will the questions obtain the information needed from participants? tReview your research questions and make sure the survey contains all the questions you need. Collecting pilot data and formally writ-ing them up to present to others can help ensure that you are collect-ing all the data you need to answer your research questions.
93606_Book.indb   1758/26/09   1:39:11 PM 176  /UIstop  A. J. Bernheim BrushIs the survey appropriate in length? Be careful not to make your tsurvey too long; there can be a tendency to include every possible question you can think of on a survey. /T_his can cause participants to get tired and frustrated with your survey. Make sure your survey contains only questions that really matter.Have you looked for questions that others have used? Although teach /f_ield study is unique, it is worth looking at papers for proj-ects related to yours to see if there are any survey questions that you should adopt for your study or if standard surveys such as the Questionnaire for User Interaction Satisfaction (http//lap.umd.edu/quis) or scales from psychology such as the National Aeronautics Space Administration Task Load Index [NASA TLX] may be appro-priate. Sadly, the text of survey questions is not o/f_ten included in research papers; however, other researchers are o/f_ten willing to share their survey questions if you contact them. /T_his may allow for some comparison between /f_ield studies if appropriate.4.3.2.3  Experience Sampling MethodologyUbicomp researchers have long recognized the value of using experience sampling methodology (ESM), a technique borrowed from psychology, for /f_ield studies (e.g., Consolvo and Walker, 2003). In ESM, participants are asked to /f_ill out short questionnaires at various points throughout their day, asking about their experience at that time. ESM allows the researcher to col-lect qualitative data throughout the study, which has advantages over asking participants later to try to recall what they were thinking or feeling, or why they took some action. Participants can be asked to complete a survey either randomly throughout the day, at scheduled times, or based on an event. For example, in the AURA /f_ield study, researchers used event-based ESM and asked participants a few questions about the object they had scanned a/f_ter every /f_i/f_th item they scanned. In CAPM, the computer queried the user a/f_ter 60 seconds of idle time if they were using the device. Although it is most o/f_ten used to gather qualitative data, you can also use ESM to gather quantitative data based on events, for example, recording the location of a participant every time he or she answers a call on their mobile phone.MyExperience (http://my experience.sourceforge.net), which was devel-oped by Froehlich et al. (2007), is a popular open-source toolkit for col-lecting ESM data using cell phones. Screenshots of using MyExperience to collect data are shown in Figure 4.2.
93606_Book.indb   1768/26/09   1:39:11 PM Ubiquitous Computing Field Studies  /UIstop  177
Considerations when using ESM:How o/f_ten should you ask participants to answer questions? Should tit be random, event-triggered, or on a regular schedule? Asking par-ticipants for feedback too o/f_ten will be annoying, but you need to ask frequently enough to collect the appropriate data. Make sure it is easy for participants to ignore the survey if they need to. For example, the dialog in the CAPM study asking participants whether they were using the computer was dismissed if the user moved the mouse.How many questions will you ask on each survey? Try to keep the tnumber of questions very small and quick to answer. One way to compensate for each survey being short is to ask diÔ¨Äerent sets of questions at diÔ¨Äerent times.Do you want to collect sensor data using ESM techniques? Are there tquantitative data that you want to collect randomly throughout the day, at a scheduled time, or based on a particular event?4.3.2.4  DiariesSimilar in spirit to ESM, some studies gather data by asking participants to record information about what they do, typically referred to as a ‚Äúdiary.‚Äù /T_his method is frequently used when participants are making diary entries about something that would not be possible to sense using an ESM tool, 
 
FIGURE 4.2 Two examples of ESM data collection using the MyExperience toolkit. (Courtesy of Jon Froehlich.)
93606_Book.indb   1778/26/09   1:39:12 PM 178  /UIstop  A. J. Bernheim Brushthereby rendering event-based ESM inappropriate. For example, asking a participant to track when he wants to do something or feels a certain emotion. In some studies, participants are given small paper notebooks to carry around, whereas other researchers have used mobile technology for recording diary entries. In Sohn et al.‚Äôs study of mobile information needs, participants used short message service (SMS) to make entries and then added details at a Web site (Sohn et al., 2008). Many of the consid-erations for diary studies are similar to those for ESM, such as what you will ask your participant to record in each diary entry. However, for diary studies there are typically greater concerns about participation, because participants are typically not carrying a device that interrupts them as in an ESM study. Another option is asking participant to retrospectively construct a diary, as the Phone Proximity study had participants do at the weekly interview for the previous day using the Day Reconstruction Method (Kahneman et al., 2004).Considerations:How will you remind participants to complete their diary entries? tWill you email them daily? Call them occasionally or send SMSs?How will you incent participants to complete their diary entries? tWill you reward them per entry, which can cause people to generate extra entries to earn money or perhaps with a set amount of money for each day of participation?4.3.2.5  InterviewsInterviewing your participants can be an excellent way to gather quali-tative data. During /f_ield studies, researchers frequently conduct ‚Äúsemi-structured interviews.‚Äù In a semistructured interview you bring a list of speci/f_ic questions, but ask follow-up questions about interesting things that participants say in addition to the prede/f_ined questions. Interviews were the main method used in the Home Technology study, and also in Phone Proximity, TeamAwear, AURA, and CareNet studies. Researchers also sometimes bring data collected earlier in the study, perhaps through logging or ESM, to show to participants in order to help them remem-ber particular events that the researchers want to ask questions about. For example, in the Phone Proximity interviews researchers compared the 
93606_Book.indb   1788/26/09   1:39:12 PM Ubiquitous Computing Field Studies  /UIstop  179diary data generated by the participant with visualizations of the logging data. In the TeamAwear interviews, participants viewed a video recording of the basketball game with the augmented jerseys and were retrospec-tively interviewed as a group. Retrospective interviews using video can be a valuable method to use for asking participants about situations in which they cannot be interrupted (e.g., playing basketball, performing surgery).During interviews, it is highly recommended to record the interview and take photos, although make sure to ask for participant‚Äôs consent to do so (see Section 4.4.1). Having an audio recording can be very helpful either to have transcribed or to refer back to later (e.g., for exact quotes). However, you need to recognize that transcribing audio is either a time-consuming process for you to do or expensive if you have it done profes-sionally. So, it is usually still valuable to take notes during the interview if only to identify speci/f_ic parts of a recording that are interesting. It is also very valuable to take photos that can help you remember the context and be used in presentations of your work. In the CareNet study, researchers took pictures of where people placed the prototype in their home. Consider taking some photos that do not have people or at least their faces in them; these can be easier to use since they better protect participants‚Äô privacy. See Section 13.2 of Preece et al. (2002) for more information about con-ducting interviews.Considerations for interviews:Are your questions phrased as neutrally as possible? Be careful in thow you to phrase your questions so that participants feel comfort-able telling you about negative experiences as well as positive ones. If participants say something interesting, prompt them for more infor-mation with neutral language such ‚ÄúUmmm‚Äù (do not underestimate the power of a well-timed ummm), or ‚ÄúCan you tell me more about that?‚Äù /T_he word ‚ÄúWhy‚Äù can sometimes be interpreted as accusatory, so avoid it if possible.Are you prepared to take negative feedback without becoming tdefensive? Your job during an interview is to ask questions, record answers, and follow up on interesting information. /T_he participants are telling you about their experience and they are always right about what they experienced. For example, if they tell you the logging so/f_t-ware you installed slowed their computer down, tell them you are 
93606_Book.indb   1798/26/09   1:39:12 PM 180  /UIstop  A. J. Bernheim Brushsorry and that you will look into to it. Do not argue with them about how it is impossible, even if you believe that to be true. During an interview, you must leave your own opinions at home and collect feedback without judging the participant. Always remember that they are helping you by participating.4.3.2.6  Unstructured ObservationAlthough interviews tend to last 2‚Äì3 hours and researchers ask speci/f_ic questions, when collecting data through observation participants are observed as they engage in their normal lives, possibly while using a novel prototype. In the AURA study, eight participants were observed on shop-ping trips while using the system. Chapter 5 discusses in detail the history and use of ethnography in ubicomp /f_ield research.4.3.3  How Long Is Your Study?People o/f_ten agonize over how long their study should be. Like most aspects of a /f_ield study, there is no de/f_initive answer, only questions to con-sider based on your research goals and how long the study needs to be to help answer your research question. /T_he ubicomp research literature has examples of /f_ield studies that last hours, weeks, months, and even a year.Considerations:What type of study is it? Proof-of-concept studies may be on the tshorter side if less time is needed to prove the feasibility of the proto-type. For example, the CAPM study gathered the data the researchers needed in 5 days. Studies of experience using a prototype are usually longer (e.g., CareNet study lasted 3 weeks and the AURA study was 5 weeks long) because the study is the contribution, whereas studies of current behavior vary widely. /T_he Home Technology study used 2-hour interviews to gather data, whereas the Phone Proximity study collected data for 3 weeks.Do you expect novelty eÔ¨Äects to be an issue? O/f_ten, when using new ttechnology, people start out very enthusiastically using it and then decrease their usage. Unfortunately, there is no guarantee about how long novelty eÔ¨Äects last. If you are worried about novelty eÔ¨Äects, try to make your study as long as possible and be wary of basing too many of your /f_indings on usage from the beginning of the study. A within-subjects design can help provide metrics for comparing 
93606_Book.indb   1808/26/09   1:39:12 PM Ubiquitous Computing Field Studies  /UIstop  181between usage in diÔ¨Äerent conditions. Choosing a within-subjects design would have helped the AURA researchers better understand the novelty eÔ¨Äect they observed.How much work do participants have to do? /T_he more eÔ¨Äort your tstudy requires from participants, the shorter you may need to make it. Researchers in the CareNet study chose 3 weeks because of the eÔ¨Äort involved for the elders to provide data about their activities each day.How frequently will participants use your technology or engage in tthe behavior you are trying to study? If participants use your tech-nology frequently, say multiple times a day, then your study length can typically be shorter than if participants use your technology less frequently, because you will be able to gather more data in a shorter period.How many times during the study will you interact with participants? tHow noticeable is your technology or logging to the participant? Consider how intrusive your study will be for your participants. If you need to meet with them every day or week, or your data col-lection includes ESM that frequently asks participants for feedback, you will probably need to have a shorter study than if you are study-ing current behavior using logging that is essentially invisible to the participant. /T_he intrusiveness of the CAPM study, which queried the participant a/f_ter 60 seconds of idle time, probably contributed to the choice of a 5-day-long study period.4.4  PARTICIPANTSA key part of any /f_ield study is the participants. /T_his section outlines impor-tant aspects of dealing with participants including treating them in an ethical manner, selecting the type of participants, determining how many are appropriate for your study, and how to compensate participants.4.4.1  Ethical Treatment of ParticipantsResearchers must be very careful to treat participants in an ethical man-ner. It is critical that participants understand what will be required of them if they participate in the study and how you will report on what they did so they can make an informed decision whether they wish to participate. 
93606_Book.indb   1818/26/09   1:39:12 PM 182  /UIstop  A. J. Bernheim BrushParticipants should also be given the option of discontinuing participa-tion at any time if they choose.Participants should receive a consent form at the beginning of the study to review and sign to signify that they have consented to participate. /T_he consent form should tell participants what data you are collecting and have a privacy statement describing how the data will be used and how long they will be kept. Ubicomp studies o/f_ten collect data that can be considered sen-sitive (e.g., location of participants, activities) and thus researchers must take particular care in making clear to participants what data are being collected and who will have access to it. Participant data should be kept as secure as possible with access limited only to the people who need to see it. Whenever possible, store the data using identi/f_iers (e.g., participant 1) rather than the participant‚Äôs name. When you report your data, you should never use par-ticipants‚Äô real names; instead, use participant numbers or pseudonyms./T_he exact wording of your consent form will depend on your organi-zation and the country of your study, as diÔ¨Äerent countries have diÔ¨Äer-ent laws. Your organization should have some review process to ensure that your study is treating participants in an ethical manner. For exam-ple, in the United States many universities have an institutional review board (IRB), which reviews research involving humans (U.S. Institutional Review Guidebook, http://hhs.gov.ohrp/irb/irb_chapter3.htm). To con-duct studies at these institutions, researchers must submit an application to the IRB and obtain its approval. Companies may have legal teams that can advise on consent forms and privacy statements.4.4.2  Participant ProÔ¨ÅleIdentifying the participants you would like to recruit for your /f_ield study depends on the research goals of your study. In general, you want to select participants who match the realistic usage of your prototype or the demo-graphic that you are most interested in. For example, having computer science graduate students pretend to be elders and use the CareNet system for elder care would not have been appropriate. It is also best to have par-ticipants who are not involved in any way with your research. /T_his reduces the chances that they are biased by knowledge they might have of your study or goals. Finally, recruiting diÔ¨Äerent types of participants and com-paring between them is a common type of independent variable. However, you need to be careful that you have enough participants of each type to be able to make reasonable comparisons. In the Home Technology studies, researchers recruited /f_ive families that had one computer, /f_ive families that 
93606_Book.indb   1828/26/09   1:39:13 PM Ubiquitous Computing Field Studies  /UIstop  183had multiple computers, and /f_ive families that had one or more computers per household member.To come up with your QBSUJDJQBOUQSP“áMF, the description of participants to recruit, consider the following:Age. Does your research question suggest a particular age range for tparticipants (e.g., teenagers or elders)?Gender. O/f_ten, equal numbers of men and women are recruited so tthat you can use gender as an independent variable and compare the experiences of male and female participants. However, some stud-ies may bene/f_it from a diÔ¨Äerent balance; in particular, if you need certain types of technology experience or job roles, you may have trouble recruiting and decide to have all women or all men partici-pants to hold this variable constant.Technology use and experience. Your research question may require trecruiting people who use certain types of technology (e.g., have a laptop, use a smart phone) with a particular frequency of use (e.g., send text messages every day). One thing to carefully consider is whether it is most appropriate to recruit people already using cutting-edge technology (sometimes called early adopters) who are already familiar with a device you want them to use (e.g., a smart phone) or people whose usage patterns are more consistent with the general population.Other characteristics. You maytneed to recruit people or groups with special characteristics that go beyond their experience with tech-nology. For example, the Home Technology study recruited fami-lies with diÔ¨Äerent numbers of computers in their homes, whereas the TeamAwear study recruited athletes, spectators, a referee, and a coach.Last, recognize that your research question will help you decide how to rank the importance of diÔ¨Äerent aspects of your participant pro/f_ile. Depending on what is important for your study, you may be forced to make trade-oÔ¨Äs in other criteria. For example, in the AURA study, the researchers recruited participants who owned a Pocket PC with access to the Internet in 2004. However, this likely explains why the gender balance of their 20 participants was 16 men and 4 women instead of a more equal division.
93606_Book.indb   1838/26/09   1:39:13 PM 184  /UIstop  A. J. Bernheim Brush4.4.3  Number of ParticipantsDetermining the exact number of participants you need for your study can be a diÔ¨Écult question. Factors to consider when identifying the num-ber appropriate for your study areAre there any conditions in your study (e.g., between or within tsubjects)? Having conditions typically mean you should have more participants, particularly for a between-subjects design, so that the groups are large enough to justify making comparisons between them.What claims are you trying to make? Is this a proof-of-concept tstudy? If so, you can typically have fewer people and may want to have many diÔ¨Äerent types of people and/or conditions to show dif-ferent people can use your prototype in a wide range of environ-ments. For example, the Phone Proximity study recruited a diverse set of 16 mobile phone users ranging in age from 21 to 66 years with very wide variety of income levels, professions, and phone usage./T_he length of your study and amount of data you will collect. A /f_ield tstudy needs to collect enough data to convince people its /f_indings are valid. If the study will collect a considerable amount of data per par-ticipant, then you can typically have fewer participants than a study that collects less data per participant. For example, the CareNet and AURA /f_ield studies, each of which lasted multiple weeks, had 13 and 20 participants, respectively, whereas the Home Technology study, where data collection consisted of one interview, had 50 participants in 15 homes.What is feasible? Although one might ideally like to have a large tnumber of participants, each participant will require a considerable time investment for you and your team. In trying to decide what is feasible, make sure to estimate the time per participant. /T_his time should include the length of any visits, time for travel to the par-ticipant‚Äôs locations as necessary, preparation time for each visit, and support for participants using prototypes or logging so/f_tware.Plan for participants to drop out. Because /f_ield studies typically trequire considerable eÔ¨Äort on the part of the participant over a long time, it is practically guaranteed that some participants will drop out of your study. Replacing participants that drop out midway through 
93606_Book.indb   1848/26/09   1:39:13 PM Ubiquitous Computing Field Studies  /UIstop  185a study can be quite diÔ¨Écult and cause you problems if you wanted the study to /f_inish by a certain time. /T_hus, if possible, recruit one or two more participants than you think you need, so that if partici-pants drop out of the study you still have a reasonable number (and maybe you will get lucky and no one will drop out and you will have more participants).Time to recruit participants. Do not underestimate the time it may ttake to recruit people to participate in your /f_ield study, especially if you have a speci/f_ic participant pro/f_ile. In the best case, you work for a company that has a team dedicated to /f_inding people for user stud-ies or you have funding to outsource /f_inding participants to a com-pany that specializes in recruiting, but this is very rare. Most people recruit their own participants using a variety of methods such as advertising on websites (e.g., Craigslist in the United States) or news-papers, or passing out /f_lyers as the TeamAwear researchers did in sports halls and a/f_ter basketball games.In the end, there is not one right answer about the number of people you need in your study. Consider the factors discussed above and then try to include the largest number of participants that is feasible and seems appropriate for your research question.4.4.4  CompensationStudy participants are typically given a gratuity or compensated in some way for their time and eÔ¨Äort. Sometimes if the technology is interesting, it can be possible to entice people to participate for no compensation as participants did in the TeamAwear /f_ield study. However, as researchers in that study noted, when you do not compensate your participants you need to consider bias. Your participants may have chosen to participate because they were very excited about your technology, which could bias their feed-back. In general, it is best to compensate people in some way, and com-pensating people fairly can help with recruiting. You should always make clear when presenting your study how participants were compensated.Considerations:How much eÔ¨Äort is required? Study compensation typically varies tbased on how much eÔ¨Äort the study requires and can be anything from food to money to so/f_tware. To get an idea about what is fair, you 
93606_Book.indb   1858/26/09   1:39:13 PM 186  /UIstop  A. J. Bernheim Brushcan ask other people in your organization or look at recent papers in your /f_ield. /T_he longer the study, the more compensation is needed. In the Phone Proximity study, participants were compensated with $200 for 3 weeks.Will the compensation method aÔ¨Äect the data collected? If you twould like to have people use a prototype, it might seem like a good idea to compensate people based on their amount of interaction. But if you are going to make claims about usage, you have to be very careful that your gratuity method does not distort any eÔ¨Äects. For example, if you paid participants a small amount every time they used your prototype, this could lead to distorted usage. One approach is to reward people for any day or week they use your pro-totype at least once and then base any analysis on additional usage above the requirement for the gratuity. However, if you are collect-ing feedback using ESM or other methods, you would want to incent participants to provide as much feedback as possible. In this case, giving participants a small incentive (e.g., entries into a raÔ¨Ñe) can be a useful strategy to increase the amount of feedback you receive. For example, in the CareNet study, elders and other people who provided data received between $75 and $300 for a 3-week-long deployment, depending on how o/f_ten they provided the researchers with updates, whereas participants with the displays received $150. In the AURA study, participants were compensated with coupons to the company caf√©, and each week they scanned at least one item during the /f_inal 3 weeks of the study they were eligible for a $50 Amazon gi/f_t certi/f_icate that was raÔ¨Ñed each week.Are there other incentives besides money that would also appeal to tparticipants? When determining your compensation strategy, do not underestimate the power of food. In the Home Technology study, researchers brought a pizza dinner to the families to help break the ice and entice families to participate, in addition to giving families their choice of two pieces of Microso/f_t so/f_tware.4.5  DATA ANALYSISUsing appropriate data analysis techniques will help convince people of the validity of your /f_indings. /T_he type of /f_ield study and the data you have collected will determine the depth of the analysis that is appropriate 
93606_Book.indb   1868/26/09   1:39:13 PM Ubiquitous Computing Field Studies  /UIstop  187and choice of techniques. For example, in a proof-of-concept study, the analysis may be a very straightforward account of whether the technology worked in the /f_ield and participants‚Äô reactions collected through surveys or interviews. Other types of studies may involve a more in-depth analysis of the data you have gathered.Take care that your analysis section does not become a very dense descrip-tion of results. It can be helpful to use your research question to frame this section and then tell a story about how the data address the research question(s) and any themes or surprises that emerged. When presenting your results, also try to support your /f_indings using more than one type of data. For example, having both logging data and participants‚Äô qualitative feedback makes the /f_indings of the Phone Proximity study more convinc-ing and helped the authors explain logging anomalies. Quotes from par-ticipants may also help explain logged data or actions of the participants. /T_his section introduces the most common analysis methods and references where you can learn more as needed, /f_irst discussing statistical analysis methods and then ways of analyzing unstructured qualitative data.4.5.1  StatisticsTo analyze numeric data, there are two main types of statistics: EFTDSJQUJWFTUBUJTUJDT, which describe the data you have collected, and JOGFSFOUJBMTUBUJTUJDT, which are used to draw conclusions from the data.4.5.1.1  Descriptive StatisticsCommon descriptive statistics reported include the frequency of occur-rence or count, mean (averages), and median. /T_he statistics that are appro-priate to use depend on how a variable was measured, referred to as its MFWFMPGNFBTVSFNFOU (for more details, see Level of Measurement, http:/en.wikipedia.org/wiki/Level_of_measurement and Chapter 6 in de Vaus, 2002). /T_he three common levels of measurement for /f_ield study variables are described below.4.5.1.1.1 Nominal Variables where the possible answers represent unor-dered categories are referred to as nominal, or sometimes categorical. For nominal variables, you can only report the frequency that each category occurred. For example, gender is a nominal variable where the count of responses can be reported (e.g., Phone Proximity study had 10 male and 10 female participants), but there is no concept of ordering between the response categories.
93606_Book.indb   1878/26/09   1:39:13 PM 188  /UIstop  A. J. Bernheim Brush4.5.1.1.2 Ordinal Variables measured on an ordinal scale represent a rank order preference without a precise numeric diÔ¨Äerence between diÔ¨Äerent categories. For example, a survey question with /f_ive possible responses of daily, weekly, monthly, and almost never, is measured on an ordinal scale, because the response options can be ordered from more to less frequent, but not added or subtracted. For ordinal variables, both the frequency that each category occurred and the median value can be reported.Answers to Likert scale questions on a survey are the most common example of ordinal variables collected during a /f_ield study. You can com-pare whether diÔ¨Äerent participant‚Äôs answers are more positive or less posi-tive than another, but they cannot be added or subtracted. For example, trying to subtract between an answer of Strongly Agree and Strongly Disagree does not yield meaningful information. Note that you may sometimes see means (averages) reported for Likert scale data because some people believe Likert variables can be treated as being measured on an interval scale.4.5.1.1.3 Interval For variables measured on an interval scale, the diÔ¨Äer-ence between any two values is numerically meaningful. Interval vari-ables can be added and subtracted‚Äîfor example, a person‚Äôs age in years, the number of times someone performed a particular action, how long an action took, or the number of ESM surveys a participant answered. Descriptive statistics valid for interval data include sum, mean, and median.It is important to examine interval data for outliers. Outliers aÔ¨Äect the mean, so always report the standard deviation if you report the mean value for a variable. /T_he median can sometimes be more appropriate to report. As an illustration, imagine you have /f_ive participants in your study and collect how o/f_ten each participant performs an action resulting in /f_ive data values of {1, 2, 3, 5, 40}. If you report the mean you would say on average participants performed the action 10.2 times (standard deviation  16.7), whereas if you report the median you would report 3 times. However, nei-ther of these values may accurately describe the data, so you might instead discuss how one participant performed the action much more frequently than the other participants. For some variables, it may be best to report the raw values as well as the descriptive statistics if the variations are large and important.
93606_Book.indb   1888/26/09   1:39:13 PM Ubiquitous Computing Field Studies  /UIstop  189Considerations:Do the descriptive statistics you report give an accurate picture of tyour data? Have you checked to see if your data contain outliers?Are the descriptive statistics reported appropriate for the level of tmeasurement of the variable? Are standard deviations reported with the means?4.5.1.2  Inferential Statistics: SigniÔ¨Åcance TestsOnce you have computed descriptive statistics for a variable, one type of inferential statistics, signi/f_icance tests, allow you to determine whether the results found in your sample of participants are statistically signi/f_icant or might be due to sampling errors. /T_he use of inferential statistics in analyz-ing /f_ield study data is rare since the small number of participants typically feasible to have in a /f_ield study makes it diÔ¨Écult to collect enough data for many statistical tests to be appropriate. However, it is sometimes useful to compare descriptive statistics calculated for a variable (e.g., average num-ber of items scanned in the AURA study or average times participants performed an action with your prototype) between diÔ¨Äerent conditions or groups of participants./T_his section introduces some common signi/f_icance tests. Readers inter-ested in more detail about statistical analysis are encouraged to refer to two books: "OBMZ[JOH4PDJBM4DJFODF%BUB by de Vaus (2002) and 6TJOH4144GPS8JOEPXTBOE.BDJOUPTI"OBMZ[JOHBOE6OEFSTUBOEJOH%BUB by Green and Salkind (2002). /T_he /f_irst addresses and clearly explains 50 com-mon problems in data analysis from preparing data for analysis to deter-mining which statistical tests are appropriate for your data, whereas the second book provides an excellent practical introduction to using SPSS, a common statistical package, using many examples.To conduct a signi/f_icance test comparing descriptive statistics, you /f_irst determine the variable you wish to compare and the appropriate groups of participants or diÔ¨Äerent conditions to compare between. In a /f_ield study, the most common groups to compare between are either diÔ¨Äerent types of participants (e.g., men vs. women or people who scanned many objects with AURA and those who did not) or answers from the same participants in diÔ¨Äerent conditions in a within-subjects design (e.g., when participants were asked the same questions on a prestudy and poststudy survey, and you wish 
93606_Book.indb   1898/26/09   1:39:13 PM 190  /UIstop  A. J. Bernheim Brushto compare the answers). It is worth noting that even if you did not initially design your study to explicitly have diÔ¨Äerent types of participants, you may observe‚Äîas researchers in the AURA study did‚Äîthat your participants fall into diÔ¨Äerent groups that you want to compare. Researchers in the AURA study grouped their participants into high-, mid-, and low-volume scanners based on the number of items the participant scanned during the /f_ield study. /T_hey then used the signi/f_icance tests to verify if the average number of items uploaded by each group were signi/f_icantly diÔ¨Äerent and compared the num-ber of days participants in each group used the system.Once you have identi/f_ied what variable you want to compare across a set of groups or conditions, which statistical test is appropriate is deter-mined by the level of measurement of the variable, number of groups you are comparing, and whether the variable has a normal distribution (when plotted, it follows the normal curve). For example, an independent sam-ples U-test is appropriate to use when comparing the mean of a variable with a normal distribution between two groups, whereas analysis of vari-ance (ANOVA) tests are used for comparing across more than two groups. Chapter 39 in de Vaus (2002) and the detailed description of each test given by Green and Salkind (2005) can help you choose the most appro-priate test. You may be most familiar with the independent samples U-test and ANOVA statistical tests, which are most appropriate for interval-level data with normal distributions. However, many of the nonparametric equivalents (e.g., Mann-Whitney 6, Kruskal-Wallis) that do not assume a variable has a normal distribution, may be more appropriate for /f_ield study data since they make fewer assumptions about the data that have been collected.Regardless of what statistical test you use, signi/f_icance tests start with the assumption that there is no diÔ¨Äerence between the groups for the vari-able being examined (referred to as the null hypothesis). If a diÔ¨Äerence is observed (e.g., the means or medians are diÔ¨Äerent), there are two possi-bilities: there is a diÔ¨Äerence between the groups or that there is sampling error in the data. /T_he Q value indicates how likely it is that the data might be wrong. Researchers o/f_ten use a cutoÔ¨Ä of either Q < 0.01 or Q < 0.05 to determine if the test results are statistically signi/f_icant. If Q < 0.01, there is a 99% chance that the data collected represent a real diÔ¨Äerence between the groups rather than a sampling error (or a 95% chance for Q < 0.05). Chapters 23‚Äì26 of de Vaus (2002) are an excellent introduction to signi/f_i-cance testing, factors that aÔ¨Äect signi/f_icance levels, choice of sample size, and statistical power analysis.
93606_Book.indb   1908/26/09   1:39:14 PM Ubiquitous Computing Field Studies  /UIstop  191Considerations:Are there variables that I want to compare? Do I have a large enough tsample size to run this test? For example, 30 pairs of scores are con-sidered a moderate sample size for a paired-samples U-test.Do the data meet the assumptions of the statistical test I am using? tAll statistical tests make a set of assumptions about your data (e.g., data values are independent, scores are normally distributed) and the validity of the test depends on how well your data matches the assumptions for the test you choose. Green and Salkind (2005) clearly describe the assumption for each test in their book.Are you using statistical tests to explore theories that you have trather than running every test you can think of? de Vaus (2002, p. 174) strongly cautions against ‚Äúdata dredging or running every test you can think of in hopes something will turn up as signi/f_icant.‚Äù When conducting multiple related tests, it is o/f_ten necessary to use a method, such as the Bonferroni technique, to adjust the signi/f_icance cutoÔ¨Ä (the Q value) used based on the number of tests conducted. For more detail, see Appendix B in Green and Salkind (2005).4.5.2  Unstructured DataMost qualitative data, with the exception of some survey data, are unstruc-tured. /T_his type of data includes free response questions on surveys, answers to interview questions, and any /f_ield notes you take down while observing participants. Although trying to understand and derive themes from a large amount of unstructured qualitative data may seem daunt-ing, there are methods that you can apply. /T_his section introduces simple coding techniques and methods for deriving themes from data. Readers should also refer to Chapter 5 for additional insights on analyzing qualita-tive data.4.5.2.1  Simple Coding TechniquesStrauss and Corbin (1998, p. 3) broadly de/f_ine coding as ‚Äúthe analytic processes through which data are fractured, conceptualized and turned into theory.‚ÄùHowever, the simplest coding techniques consist of closely examining your data and counting the number of times a concept or theme reoccurs, essentially turning qualitative data into quantitative data. For example, if you asked the open-ended question ‚ÄúDid you have any 
93606_Book.indb   1918/26/09   1:39:14 PM 192  /UIstop  A. J. Bernheim Brushproblems using the prototype during the study? If so, what were they?‚Äù on a postsurvey, you might want to report common problems. To do this, you would /f_irst read over the responses from all the surveys to get a sense of the types of answers. A/f_ter identifying commonly mentioned problems (e.g., ‚Äúit crashed,‚Äù ‚Äúwas slow,‚Äù ‚Äútoo loud‚Äù), you would then count the num-ber of times each problem was mentioned. In a write-up or presentation you could report the number of occurrences and might also include some quotes from the survey responses.Depending on your study, it may be appropriate to have one person code the data. However, multiple coders, sometimes referred to as raters, are o/f_ten used if there is a large amount of data to code. When multiple raters code, it is necessary to check for JOUFSSBUFSSFMJBCJMJUZ, agreement between the raters, to make sure diÔ¨Äerent people are coding the data consistently. If there is a relatively small amount of data and all raters code all the data you can identify any places where there is disagreement, and then discuss and come to an agreement between the raters. More typically, multiple raters each code the same subset of data (in addition to mutually exclusive subsets), and then a test such as Cohen‚Äôs kappa is used to report interrater reliability on the overlapping set of data and show that the raters are cod-ing consistently. In the Phone Proximity study, researchers present both the exact agreement between the raters and Cohen‚Äôs kappa as measures of interrater reliability.4.5.2.2  Deriving Themes and Building TheoryAlthough simple coding techniques may be appropriate for some qualita-tive data, organizing /f_ield observations and understanding interview data require other methods. Two common methods used are aÔ¨Énity diagram-ming and grounded theory.Based on the aÔ¨Énity process introduced by Kawakita, Beyer and Holtzblatt (1998) created an aÔ¨Énity diagramming process, as part of their Contextual Design process to develop user-centered systems. /T_heir aÔ¨Én-ity diagram process is designed to organize a large number of notes cap-tured during observations or interviews into a hierarchy to understand common issues and themes present in the data.To construct an aÔ¨Énity diagram, researchers start by putting each note captured on its own small slip of paper. Each note is then placed on a table or wall near other notes that are similar. As groups of notes emerge they are labeled and then these subgroups are grouped and labeled to identify higher-level themes. /T_his approach works well for teams of researchers who 
93606_Book.indb   1928/26/09   1:39:14 PM Ubiquitous Computing Field Studies  /UIstop  193can discuss where notes belong and how they should be grouped together to come to a common understanding, which can be especially helpful if all members of a research team were not present at every interview or data collection opportunity. Beyer and Holtzblatt (1998) encourage building the aÔ¨Énity in one day if possible, and it is also helpful to have a large amount of space (e.g., a conference room with a large table or wall space) to spread out the notes and move them around as you recognize themes. Ballagas et al. (2008) used aÔ¨Énity diagramming on more than 1000 quotes collected during the REXplorer study, whereas in the Home Technology study researchers used the process to analyze 650 notes including observa-tions and quotes. In the Phone Proximity study, researchers grouped self-reported reasons for the phone‚Äôs proximity into 15 themes using aÔ¨Énity diagramming. Researchers considering using aÔ¨Énity diagramming are encouraged to read more about the process in Beyer and Holzblatt (1998) or Preece et al. (2002)./T_he philosophy of aÔ¨Énity diagrams where issues and themes are derived from the data using a bottom-up approach was in/f_luenced by the HSPVOEFEUIFPSZ method, developed by Glaser and Strauss (1967). Grounded theory emphasizes building theories from the observed data rather than starting from preconceived hypothesis or theories. Researchers begin by conduct-ing a microscopic examination of a subset of their data to identify con-cepts and categories in the data and relationships between them. /T_hese categories are then used and adjusted as needed while coding the rest of the data. Researchers interested in learning about and using the grounded theory approach are encouraged to read #BTJDTPG2VBMJUBUJWF3FTFBSDI by Strauss and Corbin (1998).Considerations:Make sure you leave enough time to do the qualitative analysis. tCarefully reading through and immersing yourself in qualitative data takes time. It is also best to schedule a longer period of uninter-rupted time (e.g., eight contiguous hours rather than eight 1-hour blocks of time) because starting and stopping the analysis process can be disruptive to your thought process./T_hink about /f_lagging interesting points as you are collecting the data tbecause this can help you during the analysis. For example, during interviews and when rereading or listening to interview data, make notes of particularly interesting points or comments made by par-ticipants that you want to return to.
93606_Book.indb   1938/26/09   1:39:14 PM 194  /UIstop  A. J. Bernheim Brush/T_hink carefully about whether you need a complete transcription of trecorded data (e.g., interviews) and whether you will hire someone to do it. For example, if you plan to use aÔ¨Énity diagramming, you may not need to transcribe interviews completely; you may be able to take notes during the process and use the transcriptions where needed or to get the exact text of quotes that you want to use.Makes sure when you report the data you do not become sloppy. tToo o/f_ten when people report qualitative results they use vague words such as ‚ÄúMany participants‚Äù or ‚Äúsome.‚Äù Whenever possible, be as speci/f_ic as possible in reporting the number of participants that expressed a particular concern; this gives readers more con/f_idence in your results.4.6  STEPS TO A SUCCESSFUL STUDYNow that you have been introduced to study design, data collection and analysis methods, and considerations for choosing and managing partici-pants, this section oÔ¨Äers practical advice on ways to make your study more successful. At a high level, preparation is the key to having your study run as smoothly as possible. Given the time and eÔ¨Äort involved, the last thing you want to realize at the end of the study is that you forgot to do or ask something important.4.6.1  Study Design Tips4.6.1.1  Have a Clear Research GoalKnowing why you want to conduct a /f_ield study and what you hope to learn from the study is necessary so that your research questions can inform the numerous choices you need to make when designing the study. Without a clear research question, it may be hard to explain your /f_indings and why they are a contribution to other researchers working in the /f_ield. You can also slip into focusing on usability problems, which are typically not inter-esting to other researchers, if you are studying a prototype.4.6.1.2  Create a Study Design DocumentA study design document should capture the decisions you make when planning your study. Ask your colleagues to review this document and help you identify any problems. A well-written study design document 
93606_Book.indb   1948/26/09   1:39:14 PM Ubiquitous Computing Field Studies  /UIstop  195can also be an excellent start on the methodology section of any presenta-tion you need to make. /T_he Study Design Document should contain:Your research questiontParticipant pro/f_iletCompensation plantYour methodology including any conditions you might have in tthe studyTimeline: how o/f_ten you will visit participants, what will happen at teach visitTypes of data you will collecttHow you will analyze the datat4.6.1.3  Make Scripts for Participant VisitsIf you are interacting with participants, create a script document for each visit. /T_he script should roughly outline what you will say to the partici-pants and anything you need to do. For example, a script for the /f_irst visit would include telling participants about the study and giving them the consent form to sign. In addition to making sure you remember to do everything during a visit, a script also helps ensure you are giving the par-ticipants similar instructions and information. Note that it is typically not necessary to read from your script word for word, but it will keep you on track during the visit. Depending on the complexity of your participant visit, some of your scripts may be simple checklists of things to do (e.g., collect logs, give compensation).4.6.1.4  Pilot Your StudyIn a pilot study, you run a group of people through the entire study from the beginning to end as if they were real participants. /T_his is a dress rehearsal for the real study. /T_he pilot will help you identify many potential problems from technical challenges (e.g., you did not take the leap year into account) to issues with surveys and interviews (e.g., your initial visit takes 4 hours instead of the 2 hours you expected).
93606_Book.indb   1958/26/09   1:39:14 PM 196  /UIstop  A. J. Bernheim Brush4.6.2  Technology TipsBelow are some speci/f_ic tips for studies that involve deploying technology.4.6.2.1  Make Your Technology Robust Enough/T_he ‚Äúenough‚Äù part of ‚Äúrobust enough‚Äù is very important in managing the eÔ¨Äort involved in the study. Based on your research question, determine which aspects of the prototype absolutely have to work and where you can scrimp or cut corners. For example, perhaps it is diÔ¨Écult and confus-ing to set up your prototype, but since participants will receive the pro-totype already con/f_igured you do not need to spend time on a nice setup experience.4.6.2.2  Consider Other Evaluation MethodsBefore taking the large step of deploying your technology in the wild, consider other evaluation methods to identifying as many usability prob-lems as possible. In heuristic evaluation, developed by Nielsen and Molich (1990), a set of evaluators (which could be you and your colleagues) uses a small set of heuristics to critique your technology and identify problems. Section 13.4 in Preece et al. (2002) further describes the process. MankoÔ¨Ä et al. (2003) have developed additional heuristics for ambient displays that may be relevant to your project. Laboratory studies before your /f_ield study can also be very valuable to ensure that your technology is usable.4.6.2.3  Use Existing TechnologyLeverage existing toolkits (e.g., MyExperience) or commercially available prototyping hardware (e.g., Phidgets) when appropriate to make develop-ing your technology easier.4.6.2.4  Get Reassuring FeedbackOnce your technology has gone into the /f_ield, look for means to reas-sure yourself it is working as you expect. Do not count on your users to always tell you if things are going wrong. You do not want to get to the end of a deployment and then discover that, for some reason, the data you expected were not being collected. As mentioned previously, if your technology is not logging data to a central server, consider having it send you periodic ‚Äúeverything‚Äôs /f_ine‚Äù messages so you can detect problems as soon as possible.
93606_Book.indb   1968/26/09   1:39:14 PM Ubiquitous Computing Field Studies  /UIstop  1974.6.2.5  Negative ResultsDeploying a technology that people do not use can be a very painful experi-ence. Decide before the study what you will do if people are not using your technology as much as you expected. Is naturalistic usage a variable you care about? Or will you intervene during the study to encourage people to continuing using your prototype or /f_ind out what challenges they are hav-ing? Within-subject designs that compare versions of an application can be helpful so that you can get qualitative feedback from participants and also gauge if they used one version more than another, since it can sometimes be hard to /f_igure out how much usage constitutes adoption. Do not plan a study that relies on adoption and usage as the only dependent variable, because you will be in trouble if people do not adopt your technology. If your study results in a negative outcome, as the AURA study did to a certain extent, it can still be very worthwhile to present and publish your results although it is sometimes more diÔ¨Écult, because it is easy for people to dismiss negative results as due to usability issues. Use pilot studies and laboratory evaluations to detect and /f_ix usability problems before your /f_ield study. Also make sure your research question focuses on understanding the concepts your tech-nology embodies rather than ‚ÄúDo participants like my prototype?‚Äù4.6.3  Running the Study4.6.3.1  Have a Research TeamRecognize that each phase of the study from recruiting, to installation, visiting participants, providing technical support, and analyzing the data will take more time than you expect. If you are not already working with a research team, you will want to enlist other people to help you with the /f_ield study to make it more manageable.4.6.3.2  Make Participants ComfortableParticipating in a study can be an awkward experience. Participants have invited people, o/f_ten strangers, to study them and may be self-conscious. Make clear to participants that you respect and value their feedback and participation. On your /f_irst visit, make time for small talk; chat about the weather or other general topics to establish some rapport with participants.4.6.3.3  SafetyField studies take place in a variety of environments, and both participant and researcher safety should be taken into consideration. Consolvo et al. (2007) 
93606_Book.indb   1978/26/09   1:39:14 PM 198  /UIstop  A. J. Bernheim Brushsuggest mixed-gender research teams when visiting people in homes, particu-larly women participants who may be alone. Use common sense when meet-ing with participants. For example, consider sending more than one person to meet with a participant, rather than a single researcher.4.6.3.4  Be FlexibleField studies are always exciting and things o/f_ten happen that you were least expecting. For example, participants might suddenly decide to go on vacation in the middle of the study or may take apart your prototype even though you asked them not to. Be /f_lexible and be prepared to make adjustments.4.6.4  Data Collection and Analysis4.6.4.1 Be ObjectiveIf you have a hypothesis you strongly believe in or perhaps have spent many years developing a technology, it can be very easy to see what you want to see or ask participants leading questions. If you are studying something you built, try to downplay or avoid mentioning your investment in the technology. For example, if you tell participants ‚Äú/T_his is something I‚Äôve been building for the last 5 years and my graduate degree depends on this /f_ield study,‚Äù they may be less likely to share their honest feedback with you. /T_here can also be a tendency for participants to want to please you and do what you want, so watch carefully for this. For example, did a participant tell you they love the prototype but only used it twice during the study?4.6.4.2  The Participant Is Always RightIn a /f_ield study, the participant is always right. No matter what they say, assuming it does not threaten your safety in some way, you need to record the feedback and thank them for it. Do not argue with the participant or get defensive if the participants describes technical problems they are having or reasons why they might not like the technology they are trying. During the analysis phase, you can interpret what participants have said in conjunction with your observations, but it is critical not to argue or disagree with the participant during the study.4.6.4.3 Do Not Make Inappropriate ClaimsMaking inappropriate claims based on your /f_indings is one of the most common mistakes people make. Recognize that your prototype represents 
93606_Book.indb   1988/26/09   1:39:14 PM Ubiquitous Computing Field Studies  /UIstop  199only one instantiation of an idea and given that you probably studied a very small number of people, it would be inappropriate to claim that you know that a prototype works for everyone or that you have conclusively answered a general research question. A limitations section in a paper or presentation that acknowledges potential limitations (e.g., a small number of participants from a limited geographic region) of the study helps make clear to the audience that you are not making inappropriate claims. Also, pay attention to the language you use in a written presentation; watch out for words like ‚Äúprove‚Äù and instead use terms such as ‚Äúsuggest‚Äù or ‚Äúsup-port,‚Äù which are more appropriate to use.4.7  CONCLUSIONField studies are a crucial tool for ubicomp research. As part of this research /f_ield, we must continue to build and extend tools (e.g., MyExperience (Froehlich et al., 2007), Momento (Carter et al., 2006), tools built by Intille et al. (2003)) that ease the process of conducting /f_ield studies. We must also build on and continue the work that has been started through papers (e.g., Scholtz and Consolvo, 2004) and workshops (e.g., USE 2007, 2008) to develop best practices and evaluation strategies for ubicomp systems. By working together, we can reduce the eÔ¨Äort required to con-duct studies and facilitate comparison between diÔ¨Äerent approaches and applications.Although the amount of eÔ¨Äort involved in conducting a /f_ield study may seem a bit daunting, there is really no substitute for the inspiration and understanding you will gain from interacting with participants in the /f_ield. Regardless of whether your /f_ield study involves observing people‚Äôs current behavior, conducting a proof-of-concept study, or deploying your technology to participants for a long period, you will learn something that surprises you and helps you to move your research forward. /T_he under-standing and insights you gain from a /f_ield study can o/f_ten spark new ideas and directions for future research.ACKNOWLEDGMENTS/T_he author thanks Ed Cutrell, Sunny Consolvo, and Beverly Harrison for sharing their wisdom and experience from many studies. Authors of the examples are also acknowledged for allowing the inclusion of their research in this chapter. Finally, Mike Brush is thanked for his support.
93606_Book.indb   1998/26/09   1:39:15 PM 200  /UIstop  A. J. Bernheim BrushREFERENCESAÔ¨Énity Diagrams, http://en.wikipedia.org/wiki/AÔ¨Énity_diagramBallagas, R., Kuntze, A., and Walz, S. P ., Gaming tourism: Lessons from evaluating REXplorer, a pervasive game for tourists. Pervasive ‚Äô08.Beyer, H., and Holtzblatt, K., $POUFYUVBM%FTJHO%F“áOJOH$VTUPNFS$FOUFSFE4ZTUFNT. Morgan Kaufmann, San Francisco, 1998.Brush, A. J., and Inkpen, K., Y ours, mine and ours? Sharing and use of technology in domestic environments, in 1SPDFFEJOHTPGUIF6CJDPNQ, September 2007.Brush, A. J., Turner, T., Smith, M., and Gupta, N., Scanning objects in the wild: Assessing an object triggered information system, in 1SPDFFEJOHTPG6CJ$PNQ, 2005.Carter, S., MankoÔ¨Ä, J., and Heer, J., Momento: Support for situated ubicomp exper-imentation, $)*, 2006, pp. 125‚Äì134.Consolvo, S., and Walker, M., Using the experience sampling method to evalu-ate ubicomp applications, *&&&1FSWBTJWF$PNQVUJOH.BHB[JOF/T_hF)VNBO&YQFSJFODF 2(2), 24‚Äì31, 2003.Consolvo, S., Harrison, B., Smith, I., Chen, M. Y ., Everitt, K., Froehlich, J., and Landay, J. A., Conducting in situ evaluations for and with ubiquitous tech-nologies, *OUFSOBUJPOBM +PVSOBM PG )VNBO$PNQVUFS *OUFSBDUJPO 22(1‚Äì2), 103‚Äì118, 2007.Consolvo, S., Roessler, P ., and Shelton, B. E., /T_he CareNet display: Lessons learned from an in home evaluation of an ambient display, in 1SPDFFEJOHTPGUIFUI*OUFSOBUJPOBM$POGFSFODFPO6CJRVJUPVT$PNQVUJOH6CJ$PNQ, Nottingham, England, Sep. 2004, pp. 1‚Äì17.de Vaus, D., "OBMZ[JOH4PDJBM4DJFODF%BUB,FZ1SPCMFNTJO%BUB"OBMZTJT. Sage Publications, London, 2002.Froehlich, J., Chen, M., Consolvo, S., Harrison, B., and Landay, J., MyExperience: A system for in situ tracing and capturing of user feedback on mobile phones, in 1SPDFFEJOHTPG.PCJ4ZT, San Juan, Puerto Rico, June 11‚Äì14, 2007.Gaver, W ., Bowers, J., Boucher, A., Law, A., Pennington, S., and Villar, N., /T_he History Tablecloth: Illuminating domestic activity, in 1SPDFFEJOHTPG%*4%FTJHOJOH*OUFSBDUJWF4ZTUFNT1SPDFTTFT1SBDUJDFT.FUIPETBOE5FDIOJRVFT, 2006, pp. 199‚Äì208.Gaver, W ., Sengers, P ., Kerridge, T., Kaye, J., and Bowers, J., Enhancing ubiqui-tous computing with user interpretation: Field testing the Home Health Horoscope, in 1SPDFFEJOHTPGUIF4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT$)*, San Jose, CA, April 28‚ÄìMay 3, ACM, New Y ork, NY , 2007.Glaser, B. G. and Strauss, A. L., /T_hF%JTDPWFSZPG(SPVOEFE/T_hFPSZ4USBUFHJFTGPS2VBMJUBUJWF3FTFBSDI Aldine De Gruyter, Hawthorne, NY , 1967.Green, S. B., and Salkind, N. J., 6TJOH4144GPS8JOEPXTBOE.BDJOUPTI"OBMZ[JOHBOE6OEFSTUBOEJOH%BUB, 5th Edition. Prentice Hall, Upper Saddle River, NJ, 2005.
93606_Book.indb   2008/26/09   1:39:15 PM Ubiquitous Computing Field Studies  /UIstop  201Harris, C., and Cahill, V ., An empirical study of the potential for context-aware power management, 6CJDPNQ6CJRVJUPVT$PNQVUJOH, 16‚Äì19 September, Innsbruck, Austria, 2007, pp. 235‚Äì252.Intille, S., Tapia, E., Rondoni, J., Beaudin, J., Kukla, C., Agarwal, S., Bao, L., and Larson, K., Tools for studying behavior and technology in natural settings, in 1SPDFFEJOHTPGUIF6CJDPNQ6CJRVJUPVT$PNQVUJOH, 157‚Äì174, 2003.Kahneman, D., Krueger, A. B., Schkade, D. A., Schwarz, H., and Stone, A. A., A sur-vey method for characterizing daily life experience: /T_he day reconstruction method, 4DJFODF 306, 1776‚Äì1780, 2004.Krumm, J., and Horvitz, E., Predestination: Inferring destinations from partial tra-jectories, in 1SPDFFEJOHTPG6CJDPNQ, 2006, pp. 243‚Äì260.Level of Measurement, http://en.wikipedia.org/wiki/Level_of_measurement.MankoÔ¨Ä, J., Dey, A., Hsieh, G., Kientz, J., Ames, M., and Lederer, S., Heuristic eval-uation of ambient displays, in 1SPDFFEJOHTPG$)*, 2003, pp. 169‚Äì176.Matthews, T., Carter, S., Pai, C., Fong, J., and MankoÔ¨Ä, J., Scribe4Me: Evaluating a mobile sound transcription tool for the deaf, in 1SPDFFEJOHTPGUIF*OUFSOBUJPOBM$POGFSFODFPO6CJRVJUPVT$PNQVUJOH	6CJDPNQ
, Newport Beach, CA, 2006, pp. 159‚Äì176.MyExperience ESM Toolkit, http://myexperience.sourceforge.net.NASA TLX: Task Load Index, http://humansystems.arc.nasa.gov/groups/TLX/.Nielsen, J., and Molich, R., Heuristic evaluation of user interfaces, in 1SPDFFEJOHTPGUIF"$.$)*$POGFSFODF, Seattle, W A, 1‚Äì5 April, 1990, pp. 249‚Äì256.Page, M., and Vande Moere, A., Evaluating a wearable display jersey for aug-menting team sports awareness, International Conference on Pervasive Computing (Pervasive 2007), 2007, pp. 91‚Äì108.Patel, S. N., Kientz, J. A., Hayes, G., Bhat, S., and and Abowd, G., Farther than you may think: An empirical investigation of the proximity of users to their mobile, in 1SPDFFEJOHTPGUIF6CJDPNQUI*OUFSOBUJPOBM$POGFSFODFPO6CJRVJUPVT$PNQVUJOH, Orange County, CA, September 17‚Äì21, 2006, pp. 123‚Äì140.Patel, S. N., Robertson, T., Kientz, J. A., Reynolds, M. S., and Abowd, G. D., At the /f_lick of a switch: Detecting and classifying unique electrical events on the residential power line, in 1SPDFFEJOHTPG6CJDPNQ, 2007, pp. 271‚Äì288.Preece, J., Rogers, Y ., and Sharp, H., *OUFSBDUJPO%FTJHO#FZPOE)VNBO$PNQVUFS*OUFSBDUJPO. John Wiley & Sons, Inc., New Y ork, NY , 2002.Questionnaire for User Interaction Satisfaction, http://lap.umd.edu/quis/.Rogers, Y ., Connelly, K., Tedesco, L., Hazlewood, W ., Kurtz, A., Hall, R., Hursey, J., and Toscas, T., Why it‚Äôs worth the hassle: /T_he value of in-situ studies when designing ubicomp, 1SPDFFEJOHTPG6CJ$PNQ6CJRVJUPVT$PNQVUJOH, 2007, pp. 336‚Äì353.Scholtz, J., and Consolvo, S., Toward a framework for evaluating ubiquitous com-puting applications, *&&&1FSWBTJWF$PNQVUJOH.BHB[JOF 3(2), 82‚Äì88, 2004.Sohn, T., Li, K., Griswold, W ., and Hollan, J., A diary study of mobile information needs, in 1SPDFFEJOHTPGUIF"$.$)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT, Florence, Italy, April 5‚Äì10, 2008, pp. 433‚Äì442.
93606_Book.indb   2018/26/09   1:39:15 PM 202  /UIstop  A. J. Bernheim BrushStrauss, A., and Corbin, J., #BTJDT PG2VBMJUBUJWF3FTFBSDI5FDIOJRVFTBOE1SPDFEVSFTGPS%FWFMPQJOH(SPVOEFd /T_hFPSZ. Sage Publications, London, 1998.U.S. Institutional Review guidebook, http://www.hhs.gov/ohrp/irb/irb_chapter3.htm, describes basic IRB guidelines.WoodruÔ¨Ä, A., Anderson, K., Mainwaring, S., and Aipperspach, R., Portable, but not mobile: A study of wireless laptops in the home, 1FSWBTJWF$PNQVUJOHUI*OUFSOBUJPOBM$POGFSFODF1FSWBTJWF, Toronto, Canada, May 13‚Äì16, 2007, pp. 216‚Äì233.
93606_Book.indb   2028/26/09   1:39:15 PM 5CHAPTER Ethnography in Ubiquitous ComputingAlex S. TaylorCONTENTS5.1 Introduction 2045.2 From Ethnography to Design 2055.2.1 Ethnography 2055.2.1.1 Nuer Time-Reckoning 2065.2.2 Design-Oriented Ethnography 2105.2.3 Ubicomp 2125.3 Design-Oriented Ethnography in Practice 2145.3.1 Planning 2145.3.1.1 Hypotheses 2155.3.1.2 Sampling and Generalization 2165.3.1.3 Access 2185.3.2 In the Field 2195.3.2.1 Re/f_lexivity and IndiÔ¨Äerence 2205.3.3 Analysis 2235.3.3.1 Data and Its In/f_luence on Analysis 2245.3.3.2 Analytic Sensibilities in Ubicomp 2255.4 What Is It Good For? 2285.4.1 Design Implications 2285.4.2 Future Directions 230References 232
93606_Book.indb   2038/26/09   1:39:15 PM 204  /UIstop  Alex S. TaylorI don‚Äôt believe in teaching. One learns by looking. /T_hat‚Äôs what you must do, look./parenleft.capFRANCIS BACON /bracketleft.cap1909/endash.cap1992/bracketright.cap, A FEW WEEKS BEFORE HE DIED/parenright.cap5.1  INTRODUCTION/T_hose introduced to ethnography o/f_ten struggle to understand what it is, what it has to oÔ¨Äer, and‚Äîmost importantly‚Äîhow to do it. Many /f_ind it hard to de/f_ine in terms of the commonly used research nomenclature; is it a methodology, method, orientation, technique, or something altogether diÔ¨Äerent? How, they also ask, does it contribute to informing scienti/f_ic investigation and what steps does an ethnographer follow to successfully do an ethnography?Broadly speaking, ethnography can be thought of as a sensibility or ‚Äúway of seeing‚Äù one adopts in collecting and interpreting /f_ield study mate-rials (see Wolcott, 1999). /T_his sensibility can be in/f_luenced by a wide range of ideas and theories. /T_he methods and techniques used to collect data are also varied and can o/f_ten be shaped by the settings an ethnographer /f_inds himself or herself in. So, to add to the newcomer‚Äôs confusion, ethnography is motivated by an assortment of intellectual traditions and is only loosely de/f_ined by its methods. At the same time, ethnography‚Äôs traditions‚Äîas well as its perspective on how empirical materials are gathered and inter-preted‚Äîcast doubt on some of the common underpinnings of empirical, scienti/f_ic research. For example, questions are implied, if not explicitly raised, about notions of validity and generalizabilty. All this is unlikely to be of much comfort to those embarking on ethnography. At this stage, however, it should be enough to recognize that it is not all that surprising that ethnography is the source of trouble for those fresh to it (as well as, it should be said, those who regularly ply its trade)./T_his chapter initially provides some background to ethnography in the hope of unraveling at least some of this apparent confusion. Much has been written with similar motivations, especially in the social sciences and humanities, and those interested in pursuing ethnography are encour-aged to review this work (e.g., Geertz, 1973; CliÔ¨Äord and Marcus, 1986; Bryman, 2001; Wolcott, 1999). Here, though, the emphasis is on how eth-nography has made its presence felt in ubiquitous computing (ubicomp) and the associated areas of human‚Äìcomputer interaction (HCI) and com-puter-supported collaborative work (CSCW). /T_he diÔ¨Äerences between 
93606_Book.indb   2048/26/09   1:39:15 PM Ethnography in Ubiquitous Computing  /UIstop  205ethnography and the more general types of technology-oriented /f_ield studies are reviewed in Chapter 4. Ethnography‚Äôs contribution in the areas related to ubicomp is also considered to better understand how it has been applied.In the chapter‚Äôs last two sections, closer attention is paid to doing eth-nography. Again, there have been eÔ¨Äorts to produce how-to guides for ethnography in the social sciences (Hammersley and Atkinson, 1995; O‚ÄôReilly, 2005; Wolcott, 1995). In addition, there are several notable com-mentaries of ethnography when applied to technology design (Anderson, 1994, 1997; Button, 1993; Button et al., 2009; Dourish, 2006; Grudin and Grinter, 1995; Heath, 2000; Macaulay et al., 2000; Randall et al., 2007). Building on these past works, this chapter aims to focus on some particu-lar issues raised by ethnography in ubicomp and the implications these issues have for real-world ethnographic practice. /T_his leads into a discus-sion of what such a practice is good for in ubicomp. Finally, thought is given to how ethnography in ubicomp is beginning to transform so as to accommodate a number of distinctive aspects of design and technology.Overall, the reader should be aware that this chapter is not a how-to or a recipe list for undertaking an ethnography in ubicomp research. At a practical level, one would be hard pushed to produce anything useful of this type that captures all the possible contingencies that can arise. More importantly, however, the ethnographic sensibility is not something that can be de/f_initively expressed or prescriptively laid out. Rather, an ethnog-raphy is something that one must go out and do, and the ethnographic sensibility is something that only really comes about through experience in the /f_ield. /T_he best preparation is to read past ethnographies, prodi-giously, in the hope of learning how others have grappled with sensitizing themselves to the settings and peoples they are studying.5.2  FROM ETHNOGRAPHY TO DESIGN5.2.1  EthnographyAlthough there are exceptions,* ethnography is usually characterized by an ethnographer spending time in a place among a distinct group of people. /T_hus, the ethnographer may spend time with a Samoan tribe (Mead, 1928), Chicago‚Äôs hobos (Anderson, 1923), cigar smokers in Kentucky (DeSantis, * One exception is virtual ethnography where the researcher participates in online or virtual communities (see Hine, 2000).
93606_Book.indb   2058/26/09   1:39:15 PM 206  /UIstop  Alex S. Taylor2003), or mobile phone users in Tokyo (Ito et al., 2006); the types of people and places that might be studied using ethnography are endless. Common between all ethnographies, however, is the eÔ¨Äort the ethnographer spends in analyzing /f_ield materials and writing. Ethnography is a deeply literary practice that places great emphasis on the ethnographer cra/f_ting his or her evolving, descriptive analysis. Indeed, the iterative composition of themes and arguments produced in writing is as much a part of ethnography as being in the /f_ield and collecting data.To develop this point, this section presents some past work starting with a classic ethnography from social anthropology, and then moving to more recent cases of greater relevance to ubicomp. In both examples, the emphasis is on helping the reader see how ethnographers start to piece together their /f_ield materials and apply certain sensibilities when inter-preting them. Importantly, the reader should recognize that even with the older, seemingly less relevant work, there are salient themes that ubicomp research might draw on. /T_he ethnographic sensibility is one that contin-ually casts back to past ideas and theories to discover the world anew. Sometimes, exception is taken to past work, but almost inevitably new arguments are threaded from old.5.2.1.1  Nuer Time-ReckoningIn/f_luenced by the early pioneers of ethnography in anthropology (e.g., Malinowski, RadcliÔ¨Äe-Brown, and Seligman), Edward Evans-Pritchard played a key role in developing both anthropological theory and ethno-graphic practice (Beidelman, 1974). Particularly through his studies of the Nuer and Azande in the 1920s and 1930s, he made signi/f_icant con-tributions to what were then the burgeoning theories of TUSVDUVSBMJTN and GVODUJPOBMJTN in anthropology. His time in the Southern Sudan and Ethiopia with the Nuer, for example, spanning 10¬Ω months, led to his classic monograph detailing how the Nuer‚Äôs social structures were tightly coupled with their pastoral life (Evans-Pritchard, 1940). For example, Evans-Pritchard described how the personal names used by Nuer men, at least at the time, related to the coloring and form of their favorite oxen and, for women‚Äôs names, which cattle they milked. /T_his demonstrated a curious tie between the Nuer and their work with cattle. As Evans-Pritchard wrote:Sometimes the name of a man which is handed down to posterity is his ox-name and not his birth name. Hence a Neur Geneology 
93606_Book.indb   2068/26/09   1:39:16 PM Ethnography in Ubiquitous Computing  /UIstop  207may sound like an inventory of a kraal. /T_he linguistic identi/f_ication of a man and his favorite ox cannot fail to aÔ¨Äect his attitude to the beast, and to Europeans the custom is the most striking evidence of the pastoral mentality of the Nuer./parenleft.capEVA NS/hyphen.capPRITCHARD, 1940, P. 18/parenright.capSimilarly, Evans-Pritchard discovered Nuer time-reckoning to be guided by the activities associated with caring for and feeding cattle (Evans-Pritchard, 1939). /T_he Nuer, for instance, have two main seasons: one, UPU, associated with when they live in their villages and the other, NFJ, when they must set up and move from camp to camp to graze their cattle. /T_hese seasonal names are not just signi/f_iers of the time of year. /T_hey can also be used to refer to the activities they are associated with, so a Nuer might be said to be going to NFJ (camp) in such a place: ‚Äúba wa mei.‚Äù 5PU and NFJ are thus not used as abstract points of reference in calendar time, but function more as practical terms loosely in/f_luencing social organization.In fact, during his /f_ieldwork Evans-Pritchard found the Nuer to have no abstract concept of time (as we do). /T_hey had no equivalent word for ‚Äútime,‚Äù and did not talk of ‚Äútime‚Äù as something ‚Äúwhich passes, can be wasted, can be saved, and so forth‚Äù (Evans-Pritchard, 1939, p. 208). On a daily basis, the passing of time was reckoned with respect to herding cattle to pasture, milking, churning, drying of dung fuel, and so on. Moreover, the Nuer‚Äôs division of the day appeared greater during periods when the cattle-related activities were relatively more intensive. Likewise, longer periods between months or years were usually described using events as points of reference; droughts, bouts of cattle disease, weddings, etc., might be used to make reference to the past. As Evans-Pritchard writes:Certainly they [the Nuer] never experience the same feeling of /f_ight-ing against time, of having to coordinate activities with an abstract passage of time, since their points of reference are mainly activities themselves, which are generally of a leisurely and routine charac-ter. /T_here are no autonomous points of reference to which activities have to conform with precision./parenleft.capEVA NS/hyphen.capPRITCHARD, 1939, P. 208/parenright.cap.For the purposes of this chapter, Evans-Pritchard‚Äôs studies of the Nuer help to illustrate three general points concerning ethnography. First and 
93606_Book.indb   2078/26/09   1:39:16 PM 208  /UIstop  Alex S. Taylorforemost, they demonstrate how an ethnographer approaches studying a group of peoplein situ (see Chapter 4). Over the course of the /f_ield-work, Evans-Pritchard observed, interviewed, took /f_ield notes, and gen-erally got to grips with the Nuer‚Äôs way of life. A central facet of this /f_ield research was to build, as far as possible, an intimate understanding of the Nuer and how they organized themselves socially. For this, Evans-Pritchard relied heavily on individual informants with whom he devel-oped close relationships. His informants helped in practical matters such as translation and detailing social practices. Interviews with others were also used, but the informants were usually the ones trusted and relied on. As well as this, Evans-Pritchard also purchased his own herd of cattle and tended to them as a Nuer might (or tried to). Collectively, these various strategies fall under ethnography‚Äôs broad and, some would argue, de/f_in-ing method for collecting /f_ieldwork materials, QBSUJDJQBOUPCTFSWBUJPO. Notable, however, is that no one /f_ieldwork strategy above is essential, nor must a critical balance be struck between interviews, observations, and participation in some activity. /T_he approaches an ethnographer adopts tend to be driven by good (or bad) fortune and opportunism, of which more will be discussed later.A second point to draw from Evans-Pritchard‚Äôs work is the importance of interpretation in ethnography, speci/f_ically through textual description. In reading the many articles and monographs Evans-Pritchard produced from his studies of the Nuer and Azande, it becomes clear that his work has a distinctive discursive style. In his writings, he o/f_ten begins by detail-ing a social practice. He then gradually builds up his descriptions, thick-ening them with various theoretical claims. In his article on the Nuer and their reckonings of time, for instance, he begins by describing the various systems the Nuer use to account for time. In the later stages of the article, these descriptions interleave with an argument claiming that the Nuer‚Äôs sense of time functions to coordinate and structure their social relations. More will be discussed of this claim below. At this stage, it suÔ¨Éces to say that Evans-Pritchard provides us with an example of how the ethnogra-pher makes choices to foreground certain aspects and themes in the eth-nographic material‚Äîthat is, there is a strong interpretive character to an ethnographer‚Äôs written descriptions. In Evans-Pritchard‚Äôs case, he not only details the Nuer and their social practices. He instructs the reader to see as he does‚Äîto interpret the Nuer as he has./T_he third and /f_inal point to be taken from this example is closely related to this idea of interpretation. As noted, Evans-Pritchard pursued much of 
93606_Book.indb   2088/26/09   1:39:16 PM Ethnography in Ubiquitous Computing  /UIstop  209his /f_ield research, particularly in his early years, with an inclination toward structuralism (or more particularly, structural functionalism), that is, he was concerned with how particular practices functioned to structure soci-eties. For example, how the predominant activities of cattle rearing among the Nuer functioned to organize their patterns of movement, divisions of labor, notions of time, social relations, and so on. Evans-Pritchard‚Äôs writ-ings were thus inclined toward a very particular analytical standpoint or orientation. Of course, Evans-Pritchard‚Äôs depictions of the Nuer could well have been wrong (and indeed, debates continue over the veracity of his work). What is important here, however, is that it demonstrates how ethnography is not merely description; it is not a litany of how many times Y spoke to Z, or a mapping of who is related to whom‚Äîit is not the mere survey of a scene. /T_he ethnographer draws on his or her own analytical traditions in the interpretative process to express something more of the setting studied, its peoples, or possibly society XSJUMBSHF.To summarize, Evans-Pritchard‚Äôs studies of the Nuer oÔ¨Äer a reminder of three important, if not de/f_ining, features of ethnography. For the pur-poses of clarity, these can be listed as follows.1BSUJDJQBOU0CTFSWBUJPO Empirical materials are collected in the /f_ield using participant observation. Importantly, the interviews, obser-vations, and participation in everyday life that make up participant observation, do not adhere to a strict, formal method. Rather, they make up a loosely assembled collection of strategies used to investi-gate a setting and its peoples, in situ. Participant observation is thus driven by the motivation to gain a deep familiarity with a people and their practices, and not by a strict idea of and adherence to method, per se.*OUFSQSFUBUJPO In producing his or her texts, the ethnographer unavoid-ably interprets the people and setting under observation. CliÔ¨Äord Geertz, a central /f_igure in anthropology who wrote cogently on this topic, famously sought to openly reveal this by referring to ethnogra-phy as UIJDLEFTDSJQUJPO. ‚ÄúWhat we call our data,‚Äù he elucidates, ‚Äúare really our constructions of other people‚Äôs constructions of what they and their compatriots are up to‚Ä¶‚Äù (Geertz, 1973, p. 9). /T_he processes of interpretation, then, the layering of construction upon construc-tion, is something to be recognized and worked with in the ethno-graphic enterprise.
93606_Book.indb   2098/26/09   1:39:16 PM 210  /UIstop  Alex S. Taylor"OBMZUJDBM0SJFOUBUJPO Whether it is made explicit of not, ethnog-raphers invariably adopt one or sometimes several analytical ori-entations in their interpretive process. In the /f_ield, an orientation trains the eye, so to speak, providing the ethnographer with themes and topics to engage with. In writing, the analytical orientation is used to develop the empirical materials, teasing out speci/f_ic argu-ments and sometimes contributing to broader theories of social practice and organization. In writing of the value of ethnography in systems design, Anderson (1997) nicely captures the analytical mindset:It is the patterns and patterning the ethnographer is looking for and not simply a realistic, behavioralized description or natural history. What an ethnographer is most interested in, and thus what makes an ethnography of particular interest, is not lots of everyday detail about some local scene. Neither is it some hitherto unsuspected, bene/f_icial or deleterious aspects of an activity. Rather the ordinariness is somehow rendered extraordinary and yet, recognizable. /T_he deeper patterns being played out, in and through the detail, come to the surface./parenleft.capANDERSON, 1997, P. 158/parenright.cap5.2.2  Design-Oriented Ethnography/T_he JOTJUV /f_ield studies undertaken in HCI, CSCW, and ubicomp research have been somewhat removed from the types of ethnography found in anthropology. With their emphasis on informing design, the studies have tended to be far briefer and focused on the use of technologies and other material artifacts rather than the broader concerns of social life (Hughes et al., 1994). Nevertheless, in keeping with the ethnographic tradition, there has remained research directed toward the detail of people‚Äôs interac-tions with technology and ‚Äútoward the production of a ‚Äòrich‚Äô and ‚Äòconcrete‚Äô portrayal of the situation‚Äù (Hughes et al., 1997).To understand how, exactly, ethnography is both understood and used in ubicomp, some background to its uptake in systems design oÔ¨Äers a useful starting point. /T_he basis for what might be thought of as a EFTJHOPSJFOUFEFUIOPHSBQIZ began, initially, in HCI and CSCW, and later fed into ubicomp research. In the late 1980s, Lucy Suchman‚Äôs now much-cited book1MBOTBOE4JUVBUFE"DUJPOT (1987) was perhaps the most in/f_luential 
93606_Book.indb   2108/26/09   1:39:16 PM Ethnography in Ubiquitous Computing  /UIstop  211factor in introducing a sociological and loosely ethnographic sensibility to HCI. It also shaped what was then nascent research into CSCW. In her book, Suchman presented a study of photocopy use she undertook with her organization at the time. Using her /f_indings as a basis, she made a convincing argument proposing that people‚Äôs interactions with technol-ogy could be seen to be in/f_luenced by the particular features of a setting. Speci/f_ically, she highlighted the ways in which people‚Äôs HCIs were situated in social practices and that this TJUVBUFEBDUJPO could be made ‚Äúvisible‚Äù through detailed in situ studies. Such insights, she revealed, could provide a signi/f_icant contribution to the understanding of how people use tech-nologies and thus how future technological solutions might be designed.Suchman‚Äôs work was, in part, a reaction to the predominant thinking in HCI at the time. It contrasted with eÔ¨Äorts that aimed to model the task-based and cognitive aspects of HCIs and, in doing so, abstract away from the particularities of the setting. Suchman, alongside others (Anderson, 1997; Button, 1993; Harper, 2000; etc.), provided an impetus for a ‚Äúturn to the social‚Äù in HCI and CSCW, where greater emphasis was placed on revealing those moment-by-moment actions particular to a setting and the o/f_ten coordinated interactions between people.An early example of applying this type of perspective to informing design consisted of the studies of air traÔ¨Éc control (Harper et al., 1991; Hughes et al., 1992; Hutchins and Klausen, 1996; Mackay, 1999). /T_his ethnographic research drew attention to the collaborative work of air traÔ¨Éc controllers involved in organizing airplanes in airspace. Speci/f_ic focus was given to /f_light strips‚Äîthe paper strips containing the details of planes in the air‚Äîand their role in the control room. /T_he various publications produced from this work elaborated on how /f_light strips aided in planning, helping with the management of plane trajectories, and the coordination between con-trollers (Mackay, 1999). For example‚Äîand to oversimplify the details‚Äîthe orderly arrangement of the /f_light strips was found to operate as a proxy for the orderliness of the skies; glances from controllers to the strips arranged on racks provided lightweight means of assessing, reacting to, and antici-pating the moment-by-moment conditions of the skies. In one attempt to develop design proposals from these observations, an alternative to /f_light strips was put forward (Hughes et al., 1992). Here, diÔ¨Äerent visualizations were used to demonstrate how a computer system might support the dis-play of volumes of air traÔ¨Éc and the potential for collisions, and to do so using the same at-a-glance qualities of the physically arranged /f_light strips. Further proposals were made for enabling controllers to ‚Äútest out‚Äù 
93606_Book.indb   2118/26/09   1:39:16 PM 212  /UIstop  Alex S. TaylordiÔ¨Äerent /f_light path solutions in advance, augmenting their established methods for judging and anticipating the busyness of the skies./T_his example provides a useful illustration of some of the diÔ¨Äerences and commonalities between ethnography as it originated in anthropol-ogy and how it /f_irst took shape in HCI and CSCW. In common between the two were the use of careful JOTJUV investigations of a setting, the col-lection of copious /f_ield materials, and interpretive analyses represented through thick textual descriptions. Studies of the workplace diÔ¨Äered, however, in that they were less prolonged and focused on speci/f_ic medi-ated interactions‚Äîfor example, the ways controllers interacted with and through things such as /f_light strips. Moreover, they took on an analyti-cal orientation rarely given much attention in anthropology or sociology known as FUIOPNFUIPEPMPHZ (the orientation Suchman had also used to inform her ideas of situated action). /T_his use of the ethnomethodological orientation (or so it was argued by its proponents) allowed for far greater emphasis to be placed on the ways work was practically accomplished and speci/f_ically the commonsense methods (ethno-methods) people use to get on with the business at hand.*In its initial uptake in HCI and CSCW, then, ethnography took on a distinctive character in four primary ways: 1. /T_he research was undertaken under greater time constraints. 2. /T_he interpretive character of the research fell largely under the ana-lytical auspices of ethnomethodology (even if only loosely). 3. Attention was given to speci/f_ic interactional features of a setting (rather than the orderings of a society or culture) and a /f_ine-grained level of analyses was used. 4. /T_he general outcome was oriented toward how technology could be designed to support the types of social practices and accomplish-ments the /f_ield studies revealed.5.2.3  UbicompSince these beginnings, design-oriented ethnography has come in some shape or form to have an established role in HCI and CSCW. As ubicomp * Much has been written on ethnomethodology and its use in systems design. For an acces-sible introduction to ethnomethodology, see Livingston (1997), and for its role in design, see Button (2000) and Randall et al. (2007).
93606_Book.indb   2128/26/09   1:39:16 PM Ethnography in Ubiquitous Computing  /UIstop  213gained momentum as an area of research in its own right, it, too, incorpo-rated the practice. Broadly speaking, research in these areas came to use ethnography as a means of (1) studying new settings to inform design and (2) evaluating the use of newly designed systems in the real world. Ubicomp also played its part in broadening the types of places design-oriented eth-nographies were brought into play. Looking at technologies that were intentionally designed to pervade everyday life, ethnographers found themselves studying not only the workplace, but also leisure and domestic environments (Brown et al., 2007; Crabtree et al., 2006), and those spaces in between (Brewer, 2008).With the diÔ¨Äusion of a design-oriented ethnography into diÔ¨Äerent re-search programs and its application in diÔ¨Äerent settings, it has also come to incorporate varying analytical orientations. When compared to other disciplines that use ethnography, ethnomethodology continues to have a disproportionate presence as an orientation, arguably because of the early and substantial impact of Suchman‚Äôs ideas on situated action. Yet, there have been recent trends, especially in ubicomp, to adopt diÔ¨Äerent frames of reference. A continued focus on materiality and the interactions peo-ple have in physical space has, for example, helped foster a now reason-ably developed position that incorporates theories from phenomenology (Dourish, 2001). Moreover, a growing interest in mobility has led to inves-tigations of space as a topic and the use of relevant theories originating in the social sciences (Harrison and Dourish, 1996; Ito et al., 2006). Cultural practices have also begun to be addressed. Some in ubicomp have exam-ined computing in very distinct cultural groupings ranging from those in African townships (Marsden, 2008), to Filipino and Ghanian transna-tionals (Williams et al., 2008), to Orthodox Jewish households in North America (WoodruÔ¨Ä et al., 2007)./T_his increasing openness to theory and analytical perspectives, however, has not gone without controversy. A general and reoccurring commentary has emerged around whether much of the /f_ield research presented as ‚Äúeth-nographic‚Äù in HCI, CSCW, and ubicomp deserves such a title (Anderson, 1997; Button, 2000; Harper et al., 2005). /T_he debates broadly center around three issues. /T_he /f_irst concerns the amount of time spent in the /f_ield col-lecting data. /T_he weeks or even days spent doing /f_ieldwork with the users of a technology have been criticized for being far too brief. With respect to ethnography, it is argued that they do not allow suÔ¨Écient time for a setting to be adequately studied. A second issue concerns the use of an analytical orientation. Here, it is questioned whether a /f_ield study that simply reports 
93606_Book.indb   2138/26/09   1:39:16 PM 214  /UIstop  Alex S. Taylorthe details of a scene can legitimately be called an ethnography. So-called scenic /f_ieldwork has been contrasted with ethnography, where an analyti-cal sensibility or orientation is seen as a de/f_ining feature (Button, 2000). /T_hird, a debated issue arises over the question of who can make claims to be an ethnographer and thus practice ethnography. As researchers and commercial practitioners in ubicomp, HCI, and CSCW wander out into the /f_ield and take on the strategies of participant observation, questions are raised over how well quali/f_ied they are to do ethnographies. It is ques-tioned whether anthropologists have an authoritative position from which to examine the in situ use of technology because of their training (Harper et al., 2005).None of these issues can be easily addressed. In many respects, the debates and the diÔ¨Äerent ways they are resolved come to make up the sub-stance of design-oriented ethnography as it is practiced and as it evolves in areas such as ubicomp. /T_he remaining portion of this chapter aims to oÔ¨Äer a greater insight into ethnography as a practice and the various pitfalls one can come across. However, the origins of ethnography and the ensuing debates in ubicomp, HCI, and CSCW should be kept in mind. Not only will they allow a critical engagement with the following materials, they will also shape how one develops one‚Äôs own ethnographic sensibility.5.3  DESIGN-ORIENTED ETHNOGRAPHY IN PRACTICESo far, this chapter has detailed something of the character of ethnogra-phy and how it has been taken up in design-related areas such as CSCW, HCI, and ubicomp. /T_he aim has been to express a feel for design-oriented ethnography‚Äîto capture something of it origins, how it has developed, and the points of tension in this development. In the following, a few of the more pragmatic details of undertaking a design-oriented ethnography will be discussed. Earlier, it was explained how ethnography is not some-thing to be easily proceduralized. In this vein, three general topics will be discussed: QMBOOJOH “áFMEXPSL, CFJOHJOUIF“áFME, and BOBMZTJT. /T_he inten-tion is to give the reader an idea of what to look out for and what to keep in mind when doing ethnographic /f_ieldwork to inform design. Many of the points will be of a practical nature, but a few should be seen as returning to some of the central themes that underlie the ethnographic enterprise.5.3.1  PlanningOne of the /f_irst things to do when embarking on an ethnography is to scope and plan for the /f_ield research. In design-oriented ethnography, the 
93606_Book.indb   2148/26/09   1:39:17 PM Ethnography in Ubiquitous Computing  /UIstop  215scope will o/f_ten be dictated by the types of technology one is interested in. Is the project concerned with investigating sites where ubiquitous computing might be used such as the home or oÔ¨Éce, or when mobile? What types of people are envisaged to inhabit these settings? Knowledge workers, the young or aged, families, etc.? Alternatively, is the project centered on an evaluation of a technology? If this is the case, where will the technology be deployed and what kinds of people will have access to it? Moreover, how might the diÔ¨Äerent types of interactions be recorded: through observation, interview, video recording, or audio recording, etc.?Much of the decision making associated with planning empirical re- search was covered in the earlier chapter on /f_ield studies (Chapter 4). However, there are several issues to keep in mind that have immediate rel-evance for ethnography. /T_hree are considered in some detail below: the role of hypotheses, sampling and generalization, and access to /f_ieldwork sites.5.3.1.1  HypothesesCritically, unlike many other forms of scienti/f_ic research, ethnographies will not usually be designed around an initial hypothesis or hypotheses. An ethnography is used when the aim is to openly investigate a topic. For example, if a project was to use an ethnography to study teenagers and their use of mobile phones, the research would be framed in an open man-ner, possibly with a broad question such as: ‚ÄúWhat is the role of the cell phone in teenagers‚Äô everyday lives?‚Äù/T_his investigative nature of ethnographic /f_ieldwork makes it particu-larly hard to apply any strict structure or schedule when planning an eth-nography, especially one that lasts over several weeks or months. O/f_ten, circumstances will change or various, sometimes unexpected, themes will emerge that will alter the focus and trajectory of the research. /T_he study of teenagers and their cell phones might, for instance, evolve over time as the /f_ieldwork reveals that a far more salient issue is how cell phones are used to maintain friendships or provoke rivalries. /T_he critical point here is that an ethnography should not be seen as a means to /f_ind resolution (to prove or disprove hypotheses), but instead as an exercise in opening up new avenues or possibilities.As it happens, there are several examples of ethnographies of teenage cell phone use that illustrate this. Weilenmann (2003), for instance, used a study of cell phone talk between teenagers to show how questions such as ‚ÄúWhere are you?‚Äù prompt responses associated with activity and availability, and 
93606_Book.indb   2158/26/09   1:39:17 PM 216  /UIstop  Alex S. Taylornot just location. So, an answer such as ‚ÄúI‚Äôm in the /f_itting room‚Äù says a great deal about all three. In another example, Taylor (2005) considers the mate-rial properties of the phone and its role in teenagers‚Äô conversations. He sug-gests that the taken-for-granted presence of the cell phone in conversations between teenagers provides them with a means of managing the topic of talk and, at times, subverting topical talk; the phone provides a legitimate reason to break oÔ¨Ä from a conversation and talk about something else, or someone else. Stepping back from the details of talk, Ito (2005) examines how space is con/f_igured as teenagers coordinate their activities using their phones. She re/f_lects on the role the phone plays in power relations in Japan, between the teenagers themselves and with the institutions of authority including the teenagers‚Äô parents. In each of these examples, what is evi-dent is that the ideas are developed in and through the textual analysis and worked up in a discursive fashion. None of the three studies are used to de/f_initively answer some BQSJPSJ hypothesis of phone use by teenagers. What they accomplish, though, is a starting point for thinking about how phones are used and opening up a set of design possibilities./T_he explorative nature of ethnographic research, however, does not eliminate the need for scoping or planning /f_ieldwork. /T_he point here is that the planning and scoping should be done bearing in mind the openness discussed. Room must be le/f_t for new and unexpected empirical themes to arise, and for the results that pose questions (and not just answers) around design. A project, then, is best approached with a /f_lexile plan that can adjust with the unfolding research. /T_he project‚Äôs members should allow for a bit of opportunism in their work rather than sticking doggedly to a method or /f_ixed sequence of stages. /T_he scoping of the research is something that might bene/f_it from more restraint at /f_irst. Too o/f_ten, ethnographies take on topics that are far too broad and, for much of the research, eÔ¨Äort is spent managing the quantity, detail, and complexity of the /f_ield data. In a similar vein, eÔ¨Äort is put into /f_iguring out what to focus on, the scope of the research, and how to justify attending to one thing over another. By limiting the scope from the outset, the research is given space to expand and follow diÔ¨Äerent trajectories. In many ways, an ethnography should be treated as a continuous scoping exercise, where decisions on method, analysis, and interpretation need to be made on an ongoing basis.5.3.1.2  Sampling and Generalization/T_he issues of choosing how many participants to study and how long to spend in the /f_ield are diÔ¨Écult (and perhaps contentious) ones in 
93606_Book.indb   2168/26/09   1:39:17 PM Ethnography in Ubiquitous Computing  /UIstop  217ethnographic research. Empirical research, whether done in the labora-tory or in situ, tends to be concerned with collecting and analyzing data that can be generalized to a ‚Äúpopulation.‚Äù In studying teenagers and their uses of cell phones, for example, a study would be designed so that claims could be made about cell phone use by teenagers in general and not just the participants in the study. /T_hus, the procedure is usually to /f_ind a rep-resentative sample of subjects or participants and to use the appropriate empirical methods to generate generalizable data.With the small number of participants usually included in a /f_ield study and its less-than-structured empirical methods, ethnography has been thwarted by claims that it oÔ¨Äers no means for generalization. For the most part, however, ethnographic research has come to operate outside of this empirical framework; the issue of generalization is not entirely resolved, but rather seen in quite a diÔ¨Äerent light. As an early protagonist of ethnog-raphy in sociology, Howard Becker, put it:If we haven‚Äôt settled (these epistemological issues) de/f_initively in two thousand years, more or less, we probably aren‚Äôt ever going to settle them. /T_hese are simply the commonplaces, in the rhetori-cal sense, of scienti/f_ic talk in the social sciences, the framework in which the debates go on./parenleft.capBECKER, 1993, P. 219/parenright.capIn an ethnography, then, there is no overriding concern for choosing a representative sample from a population. Far more important is how a study‚Äôs participants (or a setting) will make visible their own common-sense reasonings or social patterns and rituals. /T_he ethnographer is not trying to explain social behavior in terms of whether an entire popula-tion does or does not do something‚Äîof whether BMM teenagers use their cell phones to maintain friendships. Instead, he or she is interested in the IPX. How is it, for instance, that the cell phone is routinely used by young people to make plans and coordinate with one another? From this per-spective, the issue is not so much with the representativeness of the study‚Äôs participants, as it is with the ways the ethnographer might start to see the established patterns of phone use. /T_he question the ethnographer must ask is who might he or she need to observe or ask to get to grips with teen-agers‚Äô phone use patterns and where might they look?Similarly, the number of people participating in a study and the /f_ield study‚Äôs length are not driven by issues of generalizability. Again, it is the 
93606_Book.indb   2178/26/09   1:39:17 PM 218  /UIstop  Alex S. Taylorneed to see how things are socially arranged and accomplished in routine ways that dictates the number of participants and the time spent in the /f_ield. Ethnographies in ubicomp o/f_ten limit their participant numbers to roughly 5 to 15 and may have studies that run for weeks or, at most, a few months. It would be wrong, however, to assume exact numbers can be decided in advance. A common rule of thumb for both the number of par-ticipants and length of time in the /f_ield is whether the ethnographer starts seeing the same patterns or themes reoccurring in his or her observations and interviews. Once this happens and the ethnographer feels he or she has a grasp of what is being observed, it may be time to either develop another line of investigation or put more time into analysis and writing.A possibly obvious point to note is that ethnographic /f_ieldwork does not necessarily have to include participants, in any formal sense. /T_he work may involve, instead, the careful observation of a setting or the eth-nographer taking on a role. For instance, Livingston (1987) provides a compelling example of what can be learned by both participating in and observing pedestrians crossing the road at a busy intersection. By being on the street and crossing the road oneself, at eye level, he demonstrates how road crossing is something pedestrians accomplish through gaze direction and body orientation with respect to one another. /T_his mutual coordination unfolds moment by moment so that the road is crossed suc-cessfully, as it were, through the continuous microcoordination between fellow pedestrians.Beyond observing a speci/f_ic setting, an ethnographer may choose to apply an ethnographic sensibility to his or her own practices‚Äîundertaking what is known as BVUPFUIOPHSBQIZ. /T_here are, for instance, examples of ethnomethodologists producing accounts of piano playing (Livingston, 1987) or playing with their pets (Goode, 2006). Although these types of ethnography are rare in ubicomp research (for an exception, see, e.g., Aoki, 2007), the possibility should be seen as a serious option. /T_his is especially the case as ubicomp continues to extend its interests to include, for example, urban computing, sports, health monitoring, etc.5.3.1.3  AccessA third more practical issue to consider with regard to planning an eth-nography is gaining access to participants (if they are to be used at all). /T_he time needed to plan and arrange access can be easily underestimated. Perhaps the hardest aspect is /f_inding people who are willing to give up 
93606_Book.indb   2188/26/09   1:39:17 PM Ethnography in Ubiquitous Computing  /UIstop  219their time and, as they see it, to have their behaviors (and sometimes pri-vate lives) scrutinized. Generally speaking, it o/f_ten works well to /f_ind two or three people willing to participate in a study and then ask whether they are able to make introductions to friends or colleagues. Having personal introductions seems to ease people‚Äôs discomfort. /T_his, rather bizarrely, has been referred to as the TOPXCBMMJOHNFUIPE, as it involves accruing par-ticipants on a rolling basis. It is also helpful to explain the motivations and broad focus of the investigation to potential participants. /T_he overall aim should be to help people feel at ease with the research and emphasize that it is the ethnographer who is the newcomer or novice to a situation or setting.Something else to keep in mind is that participants do not have to be recruited and fully signed up to a study at its outset. Because the broad aim is to better understand the workings of a setting or particular activity, people can be sought out and invited to participate if and when it is felt they are needed.To brie/f_ly rev iew t he points made above about planning an et hnography: 1. Plan for the research to be investigative and exploratory, not driven by hypotheses 2. Be open to the study following new trajectories and evolving as new areas of interest and themes develop over the course of the research 3. Scope the /f_ieldwork tightly at /f_irst, leaving room for the scope to alter, broaden, and deepen 4. Select the type and number of participants with the aim of observing and detailing IPX a setting is socially organized not with the aim of generalizing to large populations 5. Consider alternatives to recruiting participants, such as simply observing a setting/activity or undertaking an autoethnography 6. Leave plenty of time for getting access to an empirical site and recruiting participants as the eÔ¨Äort involved in both can be easily underestimated5.3.2  In the Field/T_he prospect of going into the /f_ield to interview someone, observe a scene, participate in some activity, or take on some other data collection 
93606_Book.indb   2198/26/09   1:39:17 PM 220  /UIstop  Alex S. Taylortechnique can be daunting. Unfortunately, things do not get any easier once in the /f_ield. One can feel awkward, clumsily getting in the way of the very thing being studied. /T_he best that one can do to deal with the discomfort is to recognize that any awkwardness is an ordinary conse-quence of being somewhere new, with new people, and taking on the role of observer. Indeed, a very real and practical aspect of doing /f_ieldwork is learning to deal with the sense of unease. If one should be prepared for anything, it should be the possibility of asking stupid questions or doing something foolish. /T_hus, rather than trying to detach oneself from the setting and playing the proverbial /f_ly on the wall, a much more realistic approach to starting oÔ¨Ä in the /f_ield is to simply start trying diÔ¨Äerent ways to engage with a setting. /T_he concern should not be with getting it right so much as getting one‚Äôs hands dirty, so to speak.Another point worth remembering is that the collection of data and the analyses of collected /f_ield materials go hand in hand. /T_he /f_ieldwork may play a larger role at the beginning of a study and the analysis increases toward the end, but the two should interleave with one another in an iterative fashion. /T_he /f_ieldwork, of course, provides the raw materials. /T_he analysis, though, helps the ethnographer discover a way of seeing and subsequently a perspective from which to revisit the /f_ield. Consequently, it is both one‚Äôs practical and sometimes clumsy eÔ¨Äorts to collect data as well as the analyt-ical perspective that guide the unfolding direction of the research. Indeed, the initial /f_ieldwork may help shape the analytic sensibility and the subse-quent use of empirical methods that de/f_ine the ethnography.5.3.2.1  ReÔ¨Çexivity and Indifference/T_he /f_lexibility of ethnographic work may appear to confound the objectiv-ity usually thought of as the basis for scienti/f_ic research. How, one might ask, does an ethnographer remain objective if their methods and analytic orientations are able to change in response to the object of study? Does this really promote sound scienti/f_ic investigation? /T_here is, of course, a long and complicated response to these questions, a response that can quickly turn to questions regarding the nature of science and how ethnog-raphy corresponds to scienti/f_ic principles. A number of books have been written relating to these concerns (e.g., CliÔ¨Äord and Marcus, 1986). For the purposes of introducing ethnographic research and helping to convey its distinctive character, there are though two important concepts that should be considered. Both are complex, but deserve at least some explanation so they might be kept in mind when embarking on an ethnography.
93606_Book.indb   2208/26/09   1:39:17 PM Ethnography in Ubiquitous Computing  /UIstop  221One concept has its origins in anthropology and has to do with how a researcher re/f_lects on his or her position in ethnographic research, spe-ci/f_ically vis-√†-vis the study of an established group of people‚Äîbe it a community, workplace, family, etc. /T_his SF/f_lFYJWJUZ has come to be a fun-damental feature of modern ethnography (and has also played a part in qualitative research more generally).* /T_he ethnographer, in a manner of speaking, builds a re/f_lective stance into the ongoing /f_ieldwork and analy-sis, recognizing the inevitable subjectivity of the accounts he or she pro-duces. Re/f_lexivity thus motivates the ethnographer to continually shape and reshape his or her /f_ieldwork and analysis. EÔ¨Äort might be made, for example, to collect and present multiple ‚Äúvoices‚Äù from a setting or to adopt a textual style that juxtaposes con/f_licting perspectives. Whatever the speci/f_ics, the re/f_lection and ongoing adjustments aim to acknowledge the perspectives and prejudices that come with being present in the /f_ield and taking up particular empirical methods. At best, re/f_lexivity is also something to be incorporated into the writing up and analyses of the /f_ield materials so that the analytic sensibilities take into account the processes of reproducing and representing a setting through the written word.In ubicomp research, there is very little sign of re/f_lexivity reported in the published literature. /T_here is a small trend for ethnographers to situ-ate themselves vis-√†-vis their /f_ieldwork, perhaps detailing their personal histories with respect to the studied setting (e.g., Wyche et al., 2006) or the analytical lens adopted (Swan et al., 2008). /T_here is, however, scant re/f_lection on and critical engagement with the research presented in eth-nographic works. /T_he criticism of conventional scienti/f_ic practice implied through such re/f_lexivity is probably seen as beyond ubicomp‚Äôs scope. Nevertheless, whether reported or not, an ethnography of any type should be seen as lacking without at least some re/f_lection on the ethnographer‚Äôs part. /T_hought should be put into how the research is situated with respect to the /f_ieldwork, the participants, and the chosen analytical orientation. Such re/f_lection can only help to understand what types of things are being gleaned from the research and what sorts of implications the results can have for design.A second concept, the ethnomethodological QPMJDZPGJOEJÔ¨ÄFSFODF, relates to this notion of re/f_lexivity. In producing an ethnographic account‚Äîthat is, going into the /f_ield, meeting with participants and applying some type * For a review of diÔ¨Äerent perspectives on re/f_lexivity, see Macbeth (2001) and for examples of particular positions on the topic, Lynch (2000) and Woolgar (1991). 
93606_Book.indb   2218/26/09   1:39:17 PM 222  /UIstop  Alex S. Taylorof theoretical orientation in producing the analysis‚Äîthe /f_ield worker unavoidably takes on an authoritative or privileged status. /T_he ethnog-rapher is, a/f_ter all, writing on behalf of one or more people. Even when incorporating a re/f_lexive position, there is the implication that the ethnog-rapher‚Äôs claims hold a certain importance over and above those he or she is studying; whatever the approach taken, choices are made over what to include and exclude. It is as if the ethnographer is peering into a world from the outside and explaining what he or she sees from that perspective.It is this problem that the ethnomethodological QPMJDZPGJOEJÔ¨ÄFSFODF aims to take on. It oÔ¨Äers not a solution so much as an alternative perspec-tive from which the ethnographer might approach their /f_ieldwork. /T_he QPMJDZPGJOEJÔ¨ÄFSFODF is one that prioritizes a setting‚Äôs members‚Äô ways of doing and seeing over and above the themes, theories, and methods of social science. In adopting the policy, the objective is to reveal just how people, as a matter of course, achieve a recognizable order to their everyday doings. /T_he emphasis is consequently on how members of a setting observably produce their own order rather than how abstract theories might help to explain and represent social order. In the case of ethnography, the policy of indiÔ¨Äerence provides a way for a setting‚Äôs members to be heard over the authoritative voice of the ethnographer (Taylor et al., 2007).An instructive example is found, again, in Livingston‚Äôs (1987) exami-nation of pedestrian traÔ¨Éc /f_low. Livingston contrasts two ways of getting to grips with pedestrian‚Äôs crossing a busy intersection. On the one hand, he recounts a sociologist‚Äôs use of a /f_ilm camera to record the intersection from above. On the other, he describes the experience of crossing a road, as a pedestrian. /T_he camera‚Äôs view, he suggests, lends itself to seeing who goes where and what the arrangements of people are. From a manufac-tured vantage point, as it were, the sociologist thus explains the pedestrian /f_lows in terms of opposing ‚Äúwedges‚Äù that move in ‚Äúfronts,‚Äù and are led by ‚Äúpoint people.‚Äù In contrast, the view from eye level, as a pedestrian, gives access to how road-crossing is accomplished on the ground. As described earlier, from the eye-level perspective, one gleans the moment-by-moment glances and shi/f_ts in orientation performed to follow, shi/f_t, dodge, and eventually get to the other side of the intersection.What should be evident in this example is that the theory of crossings proposed by the sociologist is not available to the ordinary pedestrian. Pedestrians accomplish the business of road crossing using just those methods they have to hand; they bring to bear their own ‚Äúlay‚Äù methods and theories for crossing roads. /T_he policy of indiÔ¨Äerence, then, gives 
93606_Book.indb   2228/26/09   1:39:18 PM Ethnography in Ubiquitous Computing  /UIstop  223priority to the methods and theories of those people on the ground, so to speak. It claims an indiÔ¨Äerence to theories like the sociologist‚Äôs because they do not reveal how, exactly, roads are crossed./T_he legacy of ethnomethodology in ethnographies undertaken in HCI, CSCW, and ubicomp has seen at least an implied recognition of the pol-icy of indiÔ¨Äerence. Works from Tolmie et al. (2002) and Crabtree and Rodden (2004), both based on /f_ield studies of domestic life, examine how the orderliness of homes is unavoidably occasioned by the doing of domestic routines. /T_hat is, they detail the ways in which the social order of home life is locally accomplished in and through ordinary household routines. /T_he policy of indiÔ¨Äerence, however, is not commonplace. In ubi-comp, in particular, a growing number of /f_ield studies have seen a closer alignment with the theorizing commonly associated with contemporary anthropology and the social sciences. Recently published work from Bell and Dourish (2007) oÔ¨Äers an example. It frames the presence and use of garden sheds in terms of authority, power, and gender. /T_he shed, as the authors make clear, is used as a lens to detail how domestic boundaries are drawn between male and female, outside from in, and the migrations of technology between these categories. /T_hus, attention is not directed at how the borders of home are routinely and unremarkably produced by its members. Departing from indiÔ¨Äerence, the work instead aligns itself with contemporary social and cultural theorizing and situates the home/shed in such discourses./T_he point here is not to set re/f_lexivity up against the policy of indiÔ¨Äer-ence. What the reader should be aware of is that rather than objectivity, ethnographers use such concepts to grapple with producing written texts that resonate or ring true for their participants. /T_hey may not capture all that goes on in a setting and the perspectives of all participants, but at the very least the hope is that they reveal something of the peoples studied and of being in the places those peoples inhabit. Re/f_lexivity and the policy of indiÔ¨Äerence are thus, in some respects, eÔ¨Äorts to overcome the biases of the ethnographer. However, they are based on very diÔ¨Äerent theoreti-cal foundations and produce very diÔ¨Äerent outcomes. /T_hose new to eth-nography should have these diÔ¨Äerences in mind when they review past examples of /f_ieldwork and make choices in their own research.5.3.3  Analysis/T_he classical image of ethnography in anthropology portrays the lone eth-nographer writing up /f_ield notes in his or her tent a/f_ter a day‚Äôs observations 
93606_Book.indb   2238/26/09   1:39:18 PM 224  /UIstop  Alex S. Taylorand interviews with the natives. /T_he serious business of writing articles and monographs then happens once back at the oÔ¨Éce‚Äîthe oÔ¨Éce probably located in some ivy-leafed bastion of academia. How o/f_ten this happens today or, indeed, whether it happened all that o/f_ten in the past is debatable.Whatever the case, in applied areas such as ubicomp, an ethnography is far more likely to be part of a larger project in which there are mul-tiple team members, made up probably of social and computer scientists, designers, and other interested parties. /T_he collection of data in the /f_ield may well involve more than one team member and these members may not be limited to the social scientists. Similarly, the analysis, as already mentioned, is usually done in parallel with the /f_ieldwork and will also o/f_ten include researchers from a range of backgrounds. /T_he implications of this multiparty analysis for ubicomp will be considered later. Here, the focus will be on two aspects of the analysis: (1) data and its in/f_luence on analysis and (2) analytic sensibilities in ubicomp.5.3.3.1  Data and Its InÔ¨Çuence on AnalysisFor many, it is probably obvious that the type of /f_ieldwork data collected has an impact on the types of analysis that can be conducted. Interview transcripts, for instance, are essentially the accounts participants produce of some past occurrence or possibly thoughts they are willing to express on a particular matter. /T_he analysis of interviews can thus focus on the forms of talk used by the interviewees or how in a post hoc fashion, interviewees verbally account for themselves and their actions. Analysis that treats inter-views as accurate descriptions of occurrences or what an interviewee actually thinks is common. However, this treatment will always be seen as more sus-pect and thus it is wise to be clear about the assumptions being made.For reasonably comprehensive overviews of the diÔ¨Äerent data collection methods used in ethnography and the bearing they have on analysis, it is worth reviewing popular textbooks on ethnography such as Hammersly and Atkinson‚Äôs (1995) &UIOPHSBQIZ1SJODJQMFTJO1SBDUJDF or Wolcott‚Äôs (1995) /T_hF"SUPG'JFMEXPSL. One data collection technique worthy of particular attention, here, however is the use of video cameras to record interviews or events in the /f_ield. /T_he use of video has been common in ubicomp research because it oÔ¨Äers a powerful means of capturing /f_ield materials. It allows recordings to be made from multiple perspectives and/or when the researcher is absent. When analyzing data, the recordings can also be watched repeatedly to observe, in detail, some aspect of talk or interaction. Another bene/f_it is that the analysis can more easily involve 
93606_Book.indb   2248/26/09   1:39:18 PM Ethnography in Ubiquitous Computing  /UIstop  225others who may not have been in the /f_ield but who may, nevertheless, have insights to contribute. Indeed, data sessions where video recordings from /f_ieldwork are viewed by groups of researchers are becoming increasingly popular.However, there are some issues to keep in mind when using video. It should not be forgotten that video recordings provide a certain perspec-tive on a setting. /T_here is the obvious point on perspective to be made here that a video camera‚Äôs framing of a setting draws attention to some features and misses others. /T_he camera provides a constrained perspective on the world, so to speak. It is also important to remember though that the quali-ties of video are very likely to in/f_luence the analytical perspective in spe-ci/f_ic ways. For example, because video can be easily replayed and watched in slow motion, it lends itself to detailed analysis and repeated rewatching. /T_hus, the emphasis is o/f_ten placed on /f_ine-grained analysis such as study-ing patterns of speech, gestures, or nuanced interactions between people and with things. Moreover, because informants‚Äô conversations can be transcribed word for word and the video can be played back to an audience who were not present, video materials are o/f_ten used to prove an empirical point. /T_he visual and audio information captured and then replayed using video appears to be seen as constituting better or more valid evidence. /T_hese issues are not necessarily weaknesses or criticisms of video and its use in ethnographies. /T_he point is that video encourages a particular way of seeing the world and making sense of it. It is not, then, to be seen as the panacea for collecting data, but just one of the techniques ethnographers should be willing to use to investigate a setting.5.3.3.2  Analytic Sensibilities in UbicompA second aspect to analysis that deserves some consideration has to do with the analytic sensibility and how it is applied in design-oriented eth-nographic /f_ield studies. If there is any type of tradition in applying an analytical sensibility in design-oriented ethnographies, it is to oÔ¨Äer coun-tertheses to some of the established topics in ubicomp, topics such as con-text, privacy, and location (aspects of which are discussed in Chapters 3, 7, and 8). /T_he trend is usually to use /f_ieldwork materials to unpack top-ics and to illustrate how they cannot be easily abstracted from real-world situations.Although predating ubicomp and targeted at expert systems design, Suchman‚Äôs (1987) work is an early but, again, compelling illustration of this perspective. By investigating people‚Äôs interactions with a photocopier 
93606_Book.indb   2258/26/09   1:39:18 PM 226  /UIstop  Alex S. Taylorthat had been designed to guide users through copying tasks (using predic-tive models), Suchman was able to critically re/f_lect on the notion of QMBOT that was, at the time, fundamental to arti/f_icial intelligence (AI). Working within the analytical auspices of ethnomethodology, she revealed how people‚Äôs interactions with the copier were shaped by the situation at hand. Any initial plans on a user‚Äôs part could change on a moment-by-moment basis depending on what exactly was happening. In short, real-world planning was found to provide a loose structure to an activity, but not to operate in a step-by-step fashion. /T_his contrasted with plans as they were thought of in expert system design and AI. Here, it was assumed human behavior could be broken down into discrete, sequential actions that could be de/f_ined a priori. /T_his mismatch, Suchman suggested, was at the heart of many of the problems users had in operating the photocopiers. Seeming to establish a tradition, Suchman‚Äôs empirical work was thus the impetus for a rethinking of a taken-for-granted aspect of AI, namely, planning.A similar critical sensibility is evident in a more recent example of ubicomp research, one involving the deployment and evaluation of a location system called the 8IFSFBCPVUT$MPDL (Brown et al., 2007). /T_he Whereabouts Clock was designed for domestic use, providing those in a home with a lightweight means of seeing the location of other household members (Figure 5.1). A key motivation in designing the Clock was to build on some of the features of a domestic appliance‚Äîthe functionality 
FIGURE 5.1 Whereabouts Clock.
93606_Book.indb   2268/26/09   1:39:19 PM Ethnography in Ubiquitous Computing  /UIstop  227
was intentionally kept simple, it was physically constructed to be situated in one place in the home, and the display was designed so that it could be seen at a glance (like a clock). Crucially, the location of household mem-bers, tracked using their mobile cell phones, was displayed in a coarse-grained way. /T_he display showed householders at either work, home, or school, and had a region to represent when they were somewhere other than these three locations (Figure 5.2)./T_here are many aspects of the use of the Whereabouts Clock that could be discussed including, for example, those related to appliance design, privacy, context, home life, and so on. However, one aspect of its use in the /f_ield study raised some particularly relevant questions for ubicomp research. Speci/f_ically, the work provoked questions around conventional ideas of location and the way it is commonly thought of as something detected and represented using geographical coordinates. Brown and his colleagues were able to use the /f_ieldwork materials they collected by deploying the Clock to demonstrate how location is reckoned in terms of what one imagines others to be doing in a place. In practice, location was treated more like MPDBUJPOJOBDUJPO and not merely in terms of physical geography. /T_he participants in their study described how places such as work, home, and school became meaningful in terms of their interactions, 
FIGURE 5.2 Whereabouts Clock interface with three speci/f_ied regions rep-resenting work, home, and school, and middle region for locations other than these.
93606_Book.indb   2278/26/09   1:39:20 PM 228  /UIstop  Alex S. Taylortheir accountabilities, and their obligations in those places. When dealing with location, family members appear to construct a mental geography, as it were, that expresses a great deal more than just numerical coordinates.Examples such as these hopefully demonstrate how ethnographers have sought to develop and think critically about some of the major themes in ubicomp. Overall, it should be apparent that through the application of cer-tain analytic sensibilities, eÔ¨Äorts have been made to detail, and in some cases defamiliarize, some of the ideas that underlie a good deal of technological development in the area. An important aspect to this, and one that should be considered in undertaking an ethnography, is the role that analytic sensibility plays. In both of the examples discussed above, it is the sensibility that forms the basis for the critique and enables the research to be formulated as a coher-ent argument. /T_he art of seeing action as situated, seeing it as bound up in the ordinary aÔ¨Äairs of everyday life, informs the sensibility and oÔ¨Äers a basis to rethink conventions in ubicomp. /T_hey hopefully demonstrate the value of drawing on and applying an analytic sensibility in ubicomp research.5.4  WHAT IS IT GOOD FOR?So far, the presented materials have oÔ¨Äered some background to ethnog-raphy and its uptake in design-related areas such as HCI, CSCW, and ubi-comp. A number of relevant aspects of ethnography as it is practiced in these areas have also been covered. /T_here remain questions, however, about what ethnography is good for and when it should be used over and above the other methods used to inform design. /T_his concluding section will aim to address some of these questions and also discuss how ubicomp research has begun to have its own in/f_luence on design-oriented /f_ield studies.5.4.1  Design ImplicationsDesign-oriented ethnography provides the methods and techniques used to investigate people‚Äôs real-world (inter)actions with technology and also oÔ¨Äers a theoretical basis from which to reexamine some of the commonly held assumptions in technical research. /T_he methods and techniques used enable detailed studies of people‚Äôsin situ activities and, as the examples above illustrate, the ethnographic sensibility lends weight to some of the more critical positions taken up and investigated in ubicomp. Are there more immediate results, though, that can be had from an ethnographic /f_ield study, oÔ¨Äering, perhaps, more explicit implications for design?/T_his has been a long-standing question for practitioners and researchers in HCI and, in recent years, of immediate relevance to those in ubicomp. 
93606_Book.indb   2288/26/09   1:39:20 PM Ethnography in Ubiquitous Computing  /UIstop  229Various attempts have been made to reconcile ethnography (in its various guises) with the processes and objectives of design. For example, during ethnography‚Äôs initial uptake, attempts were made to integrate the results from ethnographic /f_ieldwork with the then established (mostly cognitive-based) user modeling schemes (e.g., $PHOJUJWF8PSL"OBMZTJT, Vicente, 1999). EÔ¨Äorts were also made to /f_ind common ground between the descriptive character of ethnography and the prescriptive aims of design (e.g., work-oriented design, Bloomberg, 1995; and patterns of cooperative interaction, Martin et al., 2001) and, more ambitiously perhaps, alter the practice of sys-tems design itself to be more amenable to the ethnographic enterprise (e.g., technomethodology, Button and Dourish, 1996). /T_he use of more structured methods for assembling the results of /f_ield studies and con/f_iguring them to be applied to solving problems has also been proposed. /T_hese methods have usually entailed the use of diagrams and schematics of /f_ieldwork materials to be used by teams of practitioners (e.g., Beyer and Holtzblatt, 1998). All in all, the attempts have sought to experiment with the intersections between ethnography and design to provide some repeatable means of translating ethnographic results into useful design implications.Despite these numerous attempts to /f_ind a systematic and concrete role for ethnography in systems design, not one proposal has been particularly successful or succeeded in sustaining any long-term interest. Certainly, some have seen uptake in diÔ¨Äerent quarters. For example, Beyer and Holtzblatz‚Äôs $POUFYUVBM*ORVJSZ has found favor in commercial settings where value may be had in gaining a broad picture of organizational patterns rather than revealing detailed features of social interaction and informing system design. However, there appears to be no tried-and-tested means of getting ethnographic materials to yield concrete design requirements. Indeed, it is a running joke in some circles that the design sections of design-oriented eth-nographic publications tend to be notoriously weak, succeeding to do little more than suggesting the blindingly obvious when it comes to design.Somewhat perversely, the practical value of ethnography in areas such as ubicomp has been recognized through a growing number of exemplary, design-oriented ethnographic case studies rather than the proposal of any speci/f_ic approach or method. /T_he main lesson has been that an ethnography, at its best, succeeds in opening up a set of possibilities for design by provid-ing a rich and detailed characterization of some setting and/or people. So, rather than being seen as a means of narrowing in on a design, ethnography should be thought of as a way to discover the design spaces and how techno-logical ideas might be subsequently investigated in more detail.
93606_Book.indb   2298/26/09   1:39:21 PM 230  /UIstop  Alex S. Taylor/T_he roots of this idea were proposed early on in HCI by Anderson (1997), an ethnomethodologist who was keen to clarify the role ethnog-raphy should have in design. Emphasizing the analytic aspects of ethno-graphic inquiry, Anderson demonstrated how ethnography ‚Äúopens up the play of possibilities for design‚Äù through its analytic strategies and literary modes of representation. Building on this early position, Dourish (2006) recently criticized how ethnographies have been judged in HCI. He points out that ethnographic studies are commonly measured by their ability to produce /f_ieldwork data as reliable facts, a criteria operating at the empiri-cal level. He suggests this misses out on a key feature of ethnography: that much of the work in an ethnography operates at the analytic level, where the ‚Äúdata are theorized, understood, organized, juxtaposed, interpreted, and presented in order to make an argument that reveals something about the setting under investigation‚Äù (p. 548).What these arguments from Anderson and Dourish illustrate, nicely, is how the analytic sensibility of ethnography has a sound role to play in design and speci/f_ically ubicomp. Bringing us back to the beginning of this chapter, both positions reveal that the analytic mindset applied in ethno-graphic inquiries is not a distraction from the aims of design, but some-thing to be valued and fostered in the process of achieving some vision for design. /T_he speci/f_ic point worth noting here is that ethnography should not be treated as one more tool for eliciting design requirements or indeed design implications. By understanding that its value is in opening up the possibilities, ethnography can retain its integrity as an analytic and inter-pretive enterprise but still have relevance to design.5.4.2  Future DirectionsSomething hopefully evident in this chapter has been the pliable nature of design-oriented ethnography. In many ways, it can be seen as something that has evolved as its related areas of study have matured. Tracing its trajectory, it contributed to design‚Äôs turn toward the social setting and was applied /f_irst in the workplace but more recently in domestic and leisure settings, as well as to study those on the go. During these shi/f_ts, tensions have arisen over what constitutes ethnography and the types of analyti-cal positions that can be incorporated. Ethnomethodology has remained a central in/f_luence as an analytical orientation, but a greater impact has been felt in recent years from the social sciences, especially anthropology./T_his progress continues unabated. Interestingly, though, ethnography has not just played a contributing role in HCI, CSCW, and ubicomp. It 
93606_Book.indb   2308/26/09   1:39:21 PM Ethnography in Ubiquitous Computing  /UIstop  231has also begun to feel the eÔ¨Äects of some of the more progressive develop-ments in these areas. For example, design-oriented ethnographies have begun to use probes to engage with their participants and provoke discus-sions speci/f_ically around issues relating to design (see Boehner et al., 2007). Postcards, diaries, and cameras might be packaged (o/f_ten creatively) to give to participants as probes, alongside conducting interviews and obser-vations (Gaver et al. 1999). Similarly, technologies might be deployed in the form of probes not to evaluate a design, but, instead, to learn more about the setting under study (e.g., Sellen et al., 2006).On one hand, this seemingly inconsequential addition to ethnography in design could be seen as simply adding to the various methods ethnographers have to collect data. However, there are more fundamental implications resulting from the inclusion of probes in an ethnographic study. Whether it is intentional, they immediately transform the role of participants. No longer are they the passive object of investigation. /T_hey take on the role of com-mentator or observer in their own practices; the probes become sources of disquiet, provoking one to question the commonsensical and routine in daily life. From the ethnographer‚Äôs perspective, the probes and this change in role of the participants leads to a reframing of the empirical exercise. /T_he probe takes on an active role, giving shape to, if not completely rearranging, the participant‚Äôs practices. /T_he use of probes thus necessitates a degree of re/f_lex-ivity in the analytic perspective by introducing a new type of dynamism to the studied scene and shi/f_ting the authoritative voice of the ethnographer.Another example of the in/f_luence developments in systems design have had on ethnography come from the idea of DSJUJDBMUFDIOJDBMQSBDUJDF, /f_irst proposed in response to the introspective research programs within AI (Agre, 1997), and relatively recently introduced to HCI and ubicomp by various members of the Culturally Embedded Computing Group at Cornell University. Critical technical practice brings to systems design rec-ognition of the role technologies play in propounding a set of social values, of interjecting and enforcing particular cultural mores through the ways technologies are designed and used (and theorized). Although these ideas have been long discussed in anthropology and sociology (e.g., MacKenzie and Wajcman, 1999), critical technical practice involves design in the interplay between the social and technical. It proposes a practice where technology designers re/f_lect on their participation in society by propagat-ing some values and counteracting others. /T_his, consequently, attaches a moral dimension to design, forcing designers to be accountable for their choices and, hopefully, taking seriously their own practice.
93606_Book.indb   2318/26/09   1:39:21 PM 232  /UIstop  Alex S. TaylorDesign-oriented ethnography has, in some respects, been forced to play catch up with this initiative (although not without controversy; see Button et al., 2009). Although, as noted, ethnography seeks a degree of re/f_lexiv-ity in its practice, there has been a lack of introspection around the role design-oriented ethnographies play in interjecting theory or values into design practice. /T_he uptake of a so-called ‚Äúcritical practice‚Äù in ubicomp and other areas is encouraging ethnography to reinspect its position in systems design and, in some cases, rearticulate the types of contributions it can oÔ¨Äer to design (e.g., Bell et al., 2005; Dourish, 2006)./T_hus, ethnography, it seems, has an established place in ubicomp research. Its past and current practice has done much to help contribute to the design and evaluation of technological systems. Broadly, its successes have been in opening up the spaces for design and giving a language through which practitioners can imagine new possibilities. It has also played a large part in promoting a deeper engagement with the sites for technology and the impact technological innovations might have on such sites. In practical and theoreti-cal terms, though, ethnography has come to be a practice growing alongside design. Its /f_luidity, in this sense, is at one and the same time something to be struggled with and celebrated. /T_he ethnographer is continually reminded of the fragility of his or her place in the assemblies of people and things, and how the ways of looking are never done and always to be discovered anew.REFERENCESAgre, P . $PNQVUBUJPO BOE )VNBO &YQFSJFODF Cambridge University Press, Cambridge, 1997.Aoki, P . M. Back stage on the front lines: Perspectives and performance in the combat information center. In: 1SPDFFEJOHTPGUIF4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT$)*. ACM Press, New Y ork, 2007, pp. 717‚Äì726.Anderson, N. /T_hF)PCP/T_hF4PDJPMPHZPGUIF)PNFMFTT.BO University of Chicago Press, Chicago, IL, 1923.Anderson, R. J. Representations and requirements: /T_he value of ethnography in system design. )VNBO$PNQVUFS*OUFSBDUJPO 9(1), 151‚Äì182, 1994.Anderson, R. J. Work, ethnography and system design. In: Kent, A., and Williams, J. G. (Eds.), /T_hF&ODZDMPQFEJBPG.JDSPDPNQVUFST	
 Marcel Dekker, New Y ork, 1997, pp. 159‚Äì183.Becker, H. S. /T_heory: /T_he necessary evil. In: Flinders, D. J., and Mills, G. E. (Eds.), /T_hFPSZBOE$PODFQUTJO2VBMJUBUJWF3FTFBSDI Teachers College Press, London, 1993, pp. 218‚Äì229.Beidelman, T. O. Sir Edward Evans-Pritchard: An appreciation. "OUISPQPT 69, 553‚Äì567, 1974.
93606_Book.indb   2328/26/09   1:39:21 PM Ethnography in Ubiquitous Computing  /UIstop  233Bell, G., Blythe, M., and Sengers, P . Making by making strange: Defamiliarization and the design of domestic technologies. "$.5SBOTBDUJPOTPO$PNQVUFS)VNBO*OUFSBDUJPO 12(2), 149‚Äì173, 2005.Bell, G., and Dourish, P . Back to the shed: Gendered visions of technology and domesticity. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 11(5), 373‚Äì381, 2007.Beyer, H., and Holtzblatt, K. $POUFYUVBM %FTJHO %F“áOJOH $VTUPNFS$FOUFSFE4ZTUFNT Morgan Kaufmann Publishers, San Francisco, CA, 1998.Bloomberg, J. L. Ethnography: Aligning /f_ield studies of work and design. In: Monk, A. F., and Gilbert, N. (Eds.), 1FSTQFDUJWFTPO)$*%JWFSTF"QQSPBDIFT. Academic Press, London, 1995, pp. 175‚Äì197.Boehner, K., Vertesi, J., Sengers, P ., and Dourish, P . How HCI interprets the probes. In: 1SPDFFEJOHT PG 4*($)* $POGFSFODF PO )VNBO 'BDUPST JO$PNQVUJOH4ZTUFNT$)*. ACM Press, New Y ork, 2007, pp. 1077‚Äì1086.Brewer, J., Mainwaring, S., and Dourish, P . Aesthetic journeys. In: 1SPDFFEJOHTPGUI"$.$POGFSFODFPO%FTJHOJOHJOUFSBDUJWF4ZTUFNT%*4. ACM Press, New Y ork, 2008, pp. 333‚Äì341.Brown, B., Taylor, A. S., Izadi, S., Sellen, A., and Kaye, J. Locating family values: A /f_ield trial of the Whereabouts Clock. In: 1SPDFFEJOHTPGUI*OUFSOBUJPOBM$POGFSFODF6CJ$PNQ, Springer-Verlag, 2007, pp. 354‚Äì371.Bryman, A. E. &UIOPHSBQIZ (4 volumes). Sage Publications, London, 2001.Button, G. (Ed.). 5FDIOPMPHZJO8PSLJOH0SEFS4UVEJFTPG8PSL*OUFSBDUJPOBOE5FDIOPMPHZ. Routledge, New Y ork, 1993.Button, G. /T_he ethnographic tradition and design. %FTJHO4UVEJFT 21, 319‚Äì332, 2000.Button, G., and Dourish, P . Technomethodology: Paradoxes and possibilities. In: 1SPDFFEJOHTPG$POGFSFODFPO)VNBO'BDUPSTBOE$PNQVUJOH4ZTUFNT$)*. ACM Press, New Y ork, 1996, pp. 19‚Äì26.CliÔ¨Äord, J., and Marcus, G. E. 8SJUJOH $VMUVSF/T_hF 1PFUJDT BOE 1PMJUJDT PG&UIOPHSBQIZ University of California Press, London, 1986.Crabtree, A., and Rodden, T. Domestic routines and design for the home. +PVSOBMPG$PNQVUFS4VQQPSUFE$PMMBCPSBUJWFXPSL$4$8. 13(2), 191‚Äì220, 2004.Crabtree, A., Benford, S., Greenhalgh, C., Tennent, P ., Chalmers, M., and Brown, B. Supporting ethnographic studies of ubiquitous computing in the wild. In: 1SPDFFEJOHTPGUIFUI$POGFSFODFPO%FTJHOJOH*OUFSBDUJWF4ZTUFNT%*4. ACM Press, New Y ork, pp. 2006, 60‚Äì69.Crabtree, A., Rodden, T., Tolmie, P ., and Button, G. Ethnography considered harmful systems design. In: 1SPDFFEJOHTPG$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT$)*. ACM Press, New Y ork, 2009, 879‚Äì888.DeSantis, A. D. A couple of white guys sitting around and talking: A collective rationalization of cigar smokers. +PVSOBMPG$POUFNQPSBSZ&UIOPHSBQIZ 32(4), 432‚Äì466, 2003.Dourish, P . 8IFSFUIF"DUJPO*T/T_hF'PVOEBUJPOTPG&NCPEJFE*OUFSBDUJPO. MIT Press, Cambridge, MA, 2001.Dourish, P . Design implications. In: 1SPDFFEJOHTPGUIF$POGFSFODFPO)VNBO'BDUPST JO $PNQVUJOH 4ZTUFNT $)* . ACM Press, New Y ork, 2006, pp. 541‚Äì550.
93606_Book.indb   2338/26/09   1:39:21 PM 234  /UIstop  Alex S. TaylorEvans-Pritchard, E. E. Nuer time-reckoning. "GSJDB+PVSOBMPGUIF*OUFSOBUJPOBM"GSJDBO*OTUJUVUF 12(2), 189‚Äì216, 1939.Evans-Pritchard, E. E. /T_hF/VFS"%FTDSJQUJPOPGUIF.PEFTPG-JWFMJIPPEBOE1PMJUJDBM*OTUJUVUJPOTPGB/JMPUJD1FPQMF. Clarendon Press, Oxford, 1940.Gaver, B., Dunne, T., and Pacenti, E. Design: Cultural probes. *OUFSBDUJPOT 6(1), 21‚Äì29, 1999.Geertz, C. /T_hF*OUFSQSFUBUJPOPG$VMUVSFT4FMFDUFE&TTBZT. Basic Books, New Yor k ,  1 9 7 3 .Goode, D. 1MBZJOHXJUI.Z%PH,BUJF"O&UIOPNFUIPEPMPHJDBM4UVEZPG$BOJOF)VNBO*OUFSBDUJPO. Purdue University Press, Purdue, IN, 2006.Grudin, J., and Grinter, R. E. Ethnography and design. $PNQVUFS4VQQPSUFE$PPQFSBUJWF8PSL 3, 55‚Äì59, 1995.Hammersley, M., and Atkinson, P . &UIOPHSBQIZ1SJODJQMFTJO1SBDUJDF, 2nd edition. Routledge, London, 1995.Harper, R., Hughes, J., and Shapiro, D. Harmonious working and CSCW: An examination of computer technology and air traÔ¨Éc control. In: Bowers, J. M., and Benford, S. D. (Eds.), 4UVEJFTJO$PNQVUFS4VQQPSUFE$PPQFSBUJWF8PSL/T_hFPSZ1SBDUJDFBOE%FTJHO. North-Holland, Amsterdam, /T_he Netherlands, 1991, pp. 225‚Äì234.Harper, R., Randall, D., and Rounce/f_ield, M. Fieldwork and ethnography in design: /T_he state of play from the CSCW Perspective. In: 1SPDFFEJOHTPG&1*$, American Anthropology Association, 2005, pp. 81‚Äì100.Harper, R. H. R. /T_he organisation in ethnography‚ÄîA discussion of ethnographic /f_ieldwork programs in CSCW . $PNQVUFS 4VQQPSUFE $PPQFSBUJWF 8PSL	$4$8
 9(2), 239‚Äì264, 2000.Harrison, S., and Dourish, P . Re-place-ing space: /T_he roles of place and space in collaborative systems. In: 1SPDFFEJOHTPGUIF"$.$POGFSFODFPO$PNQVUFS4VQQPSUFE$PPQFSBUJWF8PSL$4$8. New Y ork, ACM Press, 1996.Heath, C., Knoblauch, H., and LuÔ¨Ä, P . Technology and social interaction: /T_he emer-gence of ‚Äòworkplace studies. ‚Äô #SJUJTI+PVSOBMPG4PDJPMPHZ 51(2), 299‚Äì320, 2000.Hine, C. M. 7JSUVBM&UIOPHSBQIZ, Sage Publications, London, 2000.Hughes, J. A., King, V ., Roden, T., and Andersen, H. Moving out from the control room: Ethnography in design. In: 1SPDFFEJOHTPGUIF$POGFSFODFPO$PNQVUFS4VQQPSUFE $PPQFSBUJWF 8PSL $4$8 . ACM Press, New Y ork, 1994, pp. 429‚Äì439.Hughes, J. A., O‚ÄôBrien, J., Rodden, T., Rounce/f_ield, M., and Blythin, S. Designing with ethnography: A presentation framework. In: 1SPDFFEJOHT PG UIF$POGFSFODFPO%FTJHOJOH*OUFSBDUJWF4ZTUFN%*4. ACM Press, New Y ork, 1997, pp. 147‚Äì159.Hughes, J. A., Randall, D., and Shapiro, D. Faltering from ethnography to design. In: 1SPDFFEJNHTPGUIF$POGFSFODFPO$PNQVUFS4VQQPSUFE$PPQFSBUJWF8PSL$4$8. ACM Press, New Y ork, 1992, pp. 115‚Äì122.Hutchins, E., and Klausen, T. Distributed cognition in an airline cockpit. In: Engestr√∂m, Y ., and Middleton, D. (Eds.), $PHOJUJPOBOE$PNNVOJDBUJPOBU8PSL. Cambridge University Press, Cambridge, 1996, pp. 15‚Äì34.
93606_Book.indb   2348/26/09   1:39:21 PM Ethnography in Ubiquitous Computing  /UIstop  235Ito, M. Mobile phones, Japanese youth, and the replacement of social contact. In: Ling, R., and Pedersen, P . (Eds.), .PCJMF$PNNVOJDBUJPOT3FOFHPUJBUJPOPGUIF4PDJBM4QIFSF. Springer-Verlag, London, 2005, pp. 131‚Äì148.Ito, M., Okabe, D., and Matsuda, M. 1FSTPOBM1PSUBCMF1FEFTUSJBO.PCJMF1IPOFTJO+BQBOFTF-JGF. MIT Press, Cambridge, MA, 2006.Livingston, E. .BLJOH 4FOTF PG &UIOPNFUIPEPMPHZ Routledge & Kegan Paul, London, 1987.Lynch, M. Against re/f_lexivity as an academic virtue and source of privileged knowledge. /T_hFPSZ $VMUVSFBOE4PDJFUZ 17(3), 26‚Äì54, 2000.Macaulay, C., Benyon, D., and Crerar, A. Ethnography, theory and systems design: From intuition to insight. *OUFSOBUJPOBM+PVSOBMPG)VNBO$PNQVUFS4UVEJFT 53(1), 35‚Äì60, 2000.Macbeth, D. On ‚Äúre/f_lexivity‚Äù in qualitative research: Two readings, and a third. 2VBMJUBUJWF*ORVJSZ. 7(1), 35‚Äì68, 2001.Mackay, W . E. Is paper safer? /T_he role of paper /f_light strips in air traÔ¨Éc control. "$.5SBOTBDUJPOTPO$PNQVUFS)VNBO*OUFSBDUJPO 6(4), 311‚Äì340, 1999.MacKenzie, D. A., and Wajcman, J. /T_hF4PDJBM4IBQJOHPG5FDIOPMPHZ, 2nd edition. Open University Press, Buckingham, 1999.Marsden, G. Under Development: New users, new paradigms, new challenges. *OUFSBDUJPOT 15(1), 59‚Äì60, 2008.Martin, D., Roden, T ., Rounce/f_ield, M., Sommerville, I., and Viller, S. Finding patterns in the /f_ieldwork. In: 1SPDFFEJOHTPGUIF4FWFOUI$POGFSFODFPO$PNQVUFS4VQQPSUFE$PPQFSBUJWF8PSL&$4$8, Kluwer Academic Publishers, 2001, pp. 39‚Äì58.Mead, M. $PNJOHPG"HFJO4BNPB"4UVEZPG"EPMFTDFODFBOE4FYJO1SJNJUJWF4PDJFUJFT, HarperCollins, 1943.O‚ÄôReilly, ,&UIOPHSBQIJD.FUIPET3PVUMFEHF New Y ork, 2005.Randall, D., Harper, R., and Rounce/f_ield, M. 'JFMEXPSLGPS%FTJHO/T_hFPSZBOE1SBDUJDF	$PNQVUFS4VQQPSUFE$PPQFSBUJWF8PSL
. Springer-Verlag, London, 2007.Sellen, A., Harper, R., Eardley, R., Izadi, S., Regan, T., Taylor, A. S. et al. HomeNote: Supporting situated messaging in the home. In: 1SPDFFEJOHTPGUIF$POGFSFODFPO$PNQVUFS4VQQPSUFE$PMMBCPSBUJWF8PSL$4$8, 2006, pp. 383‚Äì392.Suchman, L. A. 1MBOTBOE4JUVBUFE"DUJPOT/T_hF1SPCMFNPG)VNBO.BDIJOF$PNNVOJDBUJPO. Cambridge University Press, Cambridge, 1987.Swan, L., Taylor, A. S., and Harper, R. Making place for clutter and other ideas of home. "$.5SBOTBDUJPOTPO$PNQVUFS)VNBO*OUFSBDUJPO 15(2), 1‚Äì24, 2008.Taylor, A. S. Phone talk. In: Ling, R., and Pedersen, P. (Eds.), .PCJMF$PNNVOJDBUJPOT3FOFHPUJBUJPOPGUIF4PDJBM4QIFSF. Springer-V erlag, Godalming, 2005, pp. 149‚Äì166.Taylor, A. S., Swan, L., and Randall, D. Listening with indiÔ¨Äerence. In: 1SPDFFEJOHTPGUIFSE&UIOPHSBQIJD1SBDUJDFJO*OEVTUSZ$POGFSFODF&1*$, American Anthropological Association, 2007, pp. 239‚Äì250.Tolmie, P ., Pycock, J., Diggins, T., MacLean, A., and Karsenty, A. Unremarkable computing. In: 1SPD$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT$)*. ACM Press, New Y ork, 399‚Äì406, 2002.Vicente, K. J. $PHOJUJWF8PSL"OBMZTJT5PXBSE4BGF1SPEVDUJWFBOE)FBMUIZ$PNQVUFS#BTFE8PSL. Lawrence Erlbaum Associates, Mahwah, NJ, 1999.
93606_Book.indb   2358/26/09   1:39:21 PM 236  /UIstop  Alex S. TaylorWeilenmann, A. ‚ÄúI can‚Äôt talk now, I‚Äôm in a /f_itting room‚Äù: Availability and location in mobile phone conversations. &OWJSPONFOUBOE1MBOOJOH" 35(9), 1589‚Äì1605, 2003.Williams, A., Anderson, K., and Dourish, P . Anchored mobilities: Mobile tech- nology and transnational migration. In: 1SPDFFEJOHTPGUIFUI"$.$POGFSFODFPO%FTJHOJOH*OUFSBDUJWF4ZTUFNT%*4. ACM Press, New Y ork, 2008, pp. 323‚Äì332.Wolcott, H. F. /T_hF"SUPG'JFMEXPSL Sage Publications Ltd, London, 1995.Wolcott, H. F. &UIOPHSBQIZ"8BZPG4FFJOH Rowman Altamira, London, 1999.WoodruÔ¨Ä, A., Augustin, S., and Foucault, B. Sabbath day home automation: ‚ÄúIt‚Äôs like mixing technology and religion. ‚Äù In: 1SPDFFEJOHTPGUIF$POGFSFODFPO )VNBO 'BDUPST JO $PNQVUJOH 4ZTUFNT $)* , ACM Press, 2007, pp. 527‚Äì536.Woolgar, S. ,OPXMFEHFBOE3e/f_lFYJWJUZ/FX'SPOUJFSTJOUIF4PDJPMPHZPG,OPXMFEHF. Sage Publications, London, 1991.Wyche, S. P ., Hayes, G. R., Harvel, L. D., and Grinter, R. E. Technology in spiri-tual formation: An exploratory study of computer mediated religious com-munications. Paper presented at the Conference on Computer Supported Cooperative Work, CSCW 06, New Y ork, NY , 2006.
93606_Book.indb   2368/26/09   1:39:21 PM 6CHAPTER From GUI to UUI: Interfaces for Ubiquitous ComputingAaron QuigleyCONTENTS6.1 Introduction 2386.1.1 From Graphical User Interfaces to Context Data 2426.1.2 Inventing the Future 2436.1.3 Chapter Overview 2466.2 Interaction Design 2466.2.1 User-Centered Design 2476.2.2 Systems Design 2486.2.3 Genius Design 2496.2.4 Design Patterns 2506.2.5 Discussion 2506.3 Classes of User Interface 2516.3.1 Tangible User Interface 2536.3.2. Surface User Interface 2576.3.2.1 Large SUIs 2616.3.3 Ambient User Interfaces 2646.4 Input Technologies 2696.4.1 Sensor Input 2706.4.2 Gesture Input 2716.4.3 Speech Input 274
93606_Book.indb   2378/26/09   1:39:22 PM 238  /UIstop  Aaron Quigley6.1  INTRODUCTION/T_he user interface represents the point of contact between a computer sys-tem and a human, both in terms of input to the system and output from the system. /T_here are many facets of a ‚Äúubiquitous computing‚Äù (ubicomp) system from low-level sensor technologies in the environment, through the collection, management, and processing of context data through to the middleware required to enable the dynamic composition of devices and services envisaged. /T_hese hardware, so/f_tware, systems, and services act as the computational edi/f_ice around which we need to build our ubicomp user interface (UUI). /T_he ability to provide natural inputs and outputs from a system that allows it to remain in the periphery is hence the central challenge in UUI design.For our purposes, ubicomp is a model of computing in which computa-tion is everywhere and computer functions are integrated into everything. It will be built into the basic objects, environments, and the activities of our everyday lives in such a way that no one will notice its presence [Weiser, 1999]. Such a model of computation will ‚Äúweave itself into the fabric of our lives, until it is indistinguishable from it‚Äù (Weiser, 1999). Everyday objects will be places for sensing, input, processing along with user output (Green/f_ield, 2006). Take, for example, the multiperson interactive surface in Figure 6.1. Here, dozens of people can interact simultaneously with a large historical record using gesture alone. Coupled with directional microphones, personal displays, and other forms of novel interface, one can imagine this as part of a larger system in the future. /T_his future experience might bring schoolchil-dren back to past events not just in one room but throughout a city, country, or continent. Ubicomp aims to make information, applications, and services available anywhere and at anytime in the human environment, where they are useful. In keeping with Weiser‚Äôs original vision of keeping technologies unnoticed (Weiser, 1999), a further aim is to have all this delivered in a /f_luid manner appropriate to our current context (Coutaz et al., 2005).Around the world, research and development groups are exploring mobile and embedded devices in almost every type of physical artifact including cars, toys, tools, homes, appliances, clothing, and work surfaces. 6.5 Interface Usability Metrics 2776.6 Conclusions 278Acknowledgments 278References 279
93606_Book.indb   2388/26/09   1:39:22 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  239
Indeed, anywhere computation will aid the user in solving a problem or performing a task in situ, ubicomp can be viewed as the model of computation. Ubicomp represents an evolution from the notion of a com-puter as a single device, to the notion of a computing space comprising personal and peripheral computing elements and services all connected and communicating as required; in eÔ¨Äect, ‚Äúprocessing power so distrib-uted throughout the environment that computers per se eÔ¨Äectively disap-pear‚Äù (Green/f_ield, 2006) or the so-called DBMNDPNQVUJOH. It is important to note that the advent of ubicomp does not mean the demise of the desktop computer in the near future. /T_he ubiquity of this technology took decades to advance and we can expect the same gradual evolution in ubicomp technology and scenarios of use.Many ubiquitous computing scenarios suggest introducing new aÔ¨Äor-dances, features, services, and modes of interaction into the simplest and most basic operations of our daily lives, from turning a door handle while getting haptic feedback to convey a status update through to the aug-mented cooking experiences in kitchens with radio frequency ID (RFID), computer vision, speech recognition, and projected and embedded dis-plays. For example, Figure 6.2 shows a multidisplay gaming environment suitable for multiperson game playing, coordination tasks, or planning activities. Topics covered elsewhere in this text, such as communication, systems design, context awareness, and privacy, are all crucially important 
FIGURE 6.1 Shared public display at the Cabinet War Rooms and Churchill Museum, London.
93606_Book.indb   2398/26/09   1:39:22 PM 240  /UIstop  Aaron Quigley
to realizing such an infrastructure; however, so, too, are the interfaces with which we will interact with such systems.It is clear that future ubicomp applications and deployments will rely on new devices, services, and augmented objects, each supporting well- understood aÔ¨Äordances, but also simple computational adaptations to exist-ing well-known and well-understood devices, services, and objects. As more and more computation is woven into the fabric of our lives, our interac-tion with such ubicomp systems cannot be the focus of our attention. As noted previously, if every physical object in our home demanded attention in terms of alerts, updates, and con/f_igurations in the way our current per-sonal computers do, we would become quickly overwhelmed. Indeed, it has been noted that ‚Äú‚Ä¶ the bene/f_its of inexpensive Ubiquitous Computing may be overwhelmed by its personal cost‚Äù (Heiner et al., 1999). Instead, the com-putational and activity support oÔ¨Äered by ubicomp systems must reside in the periphery of our attention and should remain unnoticed until required.It is important to note that myriad processing elements, sensors, dis-plays, and outputs are not elements of a statically de/f_ined user interface akin to the keyboard, mouse, and screen of a desktop computer. Instead, these elements and their related technologies aÔ¨Äord the user an experi-ence and a place to interact. Keeping in mind that the goal is to develop and deploy systems and technologies that are calm and invisible, how do we provide UUI cues and feedback to users leveraging the full range of 
FIGURE 6.2 Coupled personal (iPhone) and public display (MS Surface) gaming environment.
93606_Book.indb   2408/26/09   1:39:23 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  241
their human senses? By contrast, take the standard appliance model one might /f_ind in a home. Figure 6.3 presents eight control devices that can be used to interact with one television that has six devices connected‚ÄîDVD, AppleTV, Mac Mini (using VNC on iPhone, and Apple remote), PS3, Wii, and Cable Box. Aside from the 168 buttons available, there are in addi-tion, a myriad of ways to access overlapping features. Figure 6.3 demon-strates there are three ways to mute the television, /f_ive ways to access a web browser, and four ways to alter the volume. Although not typically dealing with such a set of controllers, many people feel frustrated with just one or two. Such devices are o/f_ten unclear and have too many functions available at the same level, which gives rise to the ‚Äúcontroller hell‚Äù so many people feel. If we can learn anything from this, it should be that, a ubicomp sys-tem is made up of subsystems and we must design for the experience not the individual subsystem.Although this chapter surveys the current state of the art to the user beyond the classical keyboard, screen, and mouse, it is important to also acknowledge that UUIs represent a paradigm shi/f_t in human-computer interaction (HCI) with input and output technologies not yet envisaged. UUIs are built around a next-generation technological paradigm that, in essence, reshapes our relationship with our personal information, envi-ronment, artifacts, and even our friends, family, and colleagues. /T_he chal-lenge is not about providing the next-generation mouse and keyboard, but instead making the collection of inputs and outputs operate in a /f_luid and seamless manner.
Volume
168 ButtonsWebMuteNintendoOther AppleSony
AccessFIGURE 6.3 /T_hree mute options, four volume controls, /f_ive web access methods, and 168 buttons for one television with six inputs.
93606_Book.indb   2418/26/09   1:39:24 PM 242  /UIstop  Aaron Quigley
6.1.1  From Graphical User Interfaces to Context Data/T_he current graphical user interface (GUI) of the personal computer is built around keyboard, screen, and mouse devices. GUIs oÔ¨Äer the Windows, Icons, Menus, and Pointer (WIMP) metaphor as a more intuitive view of the computer as compared with the more classical command line (textual) interface. GUIs have evolved considerably since they were /f_irst introduced, due to a better understanding of the user through HCI research along with advances in hardware and so/f_tware. From rudimentary graphics through to the exploration of three-dimensional (3-D) elements as shown in Figure 6.4, GUI has grown to oÔ¨Äer users better features.Other technological advancements of the past 15 years have also seen the widespread adoption of mobile phones with keypads, personal digital assistants (PDAs) with styli, tablets with styli, and touchscreens with /f_in-gers. More recent developments have seen the adoption of game control-ler inputs or gesture-driven controls for game platforms. In spite of these advancements, many elements of the WIMP metaphor for HCI live on, be it in gesture, mouse, stylus, or /f_inger form. /T_he UUI draws on the GUI tra-dition but moves beyond the special-purpose device (PDA, phone, laptop, 
FIGURE 6.4 GUI interface evolution, Amiga UI, Windows 95, Mac OS X 10.5, and Compiz.
93606_Book.indb   2428/26/09   1:39:24 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  243desktop) and into the support of activities of our lives, some of which are not currently supported by computation.Drawing on technologies both in the research stage and also in wide-spread adoption, this chapter describes many of the foundational input and output methods, systems, and technologies that will help us realize future UUIs. Indeed, we must consider the full range of interaction styles available for input beyond the mouse, keyboard, stylus, or controller. Although not yet widely available, technologies and methods exist to both sense or infer a much wider range of human motion, activity, preference, and actions desired. In general a UUI must consider a broader range of inputs than current desktop, mobile or gaming devices, and applications. Examples of data or knowledge a UUI can rely on include spatial information (loca-tion, speed of movement), identity (users and others in vicinity), user model (pro/f_ile, preferences, intentions), temporal data (time of day or year), environmental (noise, light), social (meeting, party), resource availability (printers, fax, wireless access), computing (network bandwidth, memory), physiological (hearing, heart rate), activity (supervision, interview), sched-ules, and agenda along with data that can be mined and inferred.Broadly speaking, the range of implicit inputs to a ubicomp system via its UUI can be called context data whether sensed or inferred. Context includes information from the person (physiological state), the sensed environment (environmental state), and computational environment (computational state) that can be provided to alter an applications behav-ior. Explicit inputs from the user can include speech, gaze, or human move-ment of any type. Other chapters in this book focus on the processing and management of context data, whereas this chapter focuses on explicit user input along with explicit and peripheral outputs.6.1.2  Inventing the Future/T_he time scale for the advancement and adoption of ubicomp systems and technologies may be unlike anything seen before in computing research and development. /T_he adoption of this model of computation may reach a tipping point in key domains rapidly or it may be a slow process of fea-tures, functions, and indeed changes in expectations of what constitutes a computer, seeping into the general public consciousness. Weiser (1999) cites the symbolic representation of spoken language in written form as a ubiquitous technology. However, written language has developed over millennia and requires years of learning at a preschool, school, and even university level. Hence, the time scales involved in widespread adoption of 
93606_Book.indb   2438/26/09   1:39:25 PM 244  /UIstop  Aaron Quigleya ‚Äúubicomp grammar‚Äù and hence interaction language may be longer than expected. /T_hankfully, researchers in academia, commercial laboratories, and industrial development have been producing ubicomp prototypes for more than 15 years. As a result, we have a rich assortment of research and experience to draw upon when considering UUIs.Regardless of the eventual time scales of adoption, when planning a UUI for a particular ubicomp system, technology, or application, /f_ive fun-damental questions typically arise: 1. Are the current generation of technologies applied to the problem sophisticated and aesthetic enough to aÔ¨Äord a computationally enhanced experience that is realistic based on current practice? 2. Does the interface rely on well-understood metaphors and aÔ¨Äor-dances? /T_he WIMP metaphor has buttons, clicks, and drag-and-drop, but what can UUI designers and developers expect to use and build upon? In eÔ¨Äect, what are the nouns, verbs, and grammar of ubicomp interfaces? 3. Does the proposed solution actually help people solve real problems or perform current tasks? Many of the technological scenarios used to motivate particular ubicomp methods, techniques, or technolo-gies are aspirations of future needs and desires. 4. Will the costs or overheads involved prevent widespread adoption of these concepts into actual consumer use, that is, are the economics of this ubicomp solution sound? 5. When considering a UUI, if no one is expected to notice the presence of computation in the artifacts in their environment, then how are they expected to interact with them?Even a cursory review of the ubicomp literature shows a range of tech-nologies, methods, scenarios, and systems pushing the envelope of what is classically described as HCI. Some might describe many of these ubi-comp systems as ‚Äúsolutions looking for a problem‚Äù but others classify them as attempts to invent the future. Alan Kay, the computer scientist, said, ‚ÄúDon‚Äôt worry about what anybody else is going to do. /T_he best way to predict the future is to invent it.‚ÄùCurrent UUI development relies on a range of established and evolving user interface classes as described in Section 6.3. As new forms of sensing, 
93606_Book.indb   2448/26/09   1:39:25 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  245actuation, technology, and interaction develops, we will see the creation of new interaction styles that may be hence classi/f_ied as new classes of user interfaces themselves. Section 6.3 reviews the classical range of interaction styles considered in HCI and then describes three evolving classes of user interfaces that are central to the realization of UUIs. Table 6.1 describes TABLE 6.1 Ten Rules for UUI Design3VMF.FBOJOH&YBNQMFBlissLearning to interact with a new UUI should not require people to learn another skill or complex command language.Good interaction design as discussed in Section 6.2Distraction Do not demand constant attention in a UUI. Inattention is the norm not the exception.Ambient User Interfaces as discussed in Section 6.3.3Cognitive Flow Ubicomp systems that are everywhere must allow the user to retain total focus on the task at hand.Multimodal interfaces as discussed in Section 6.4.3ManualsDo not require a user to read a manual to learn how to operate the current UUI. Do leverage prior experience.Use of aÔ¨Äordances (e.g., UI overlay) on real world in Figure 6.5Transparency Do not rely on users to hold application state in the mind to operate the UUI. Tangible User Interfaces as discussed in Section 6.3.1Modelessness Avoid ‚Äúmodes‚Äù where the system responds diÔ¨Äerently to the same input stimulus dependent on some hidden state information.State visible in SharePic as shown in Figure 6.8 (Section 6.3.2.1)Fear of Interaction Provide easy means to undo actions, otherwise users may become paralyzed with fear when using the UUI.Use of well-understood design patterns as discussed in Section 6.2.4Noti/f_ications Feedback to the user can be piggybacked and layered into interactions with their physical environment.Display of power usage as shown in Figure 6.12CalmingInterfaces will support situated actions, interfaces will rely on a wide array of human inputs and human senses.Surface interfaces as shown in Figure 6.6DefaultsGood interfaces judiciously exploit what the system knows or can deduce.Applications that reuse user input
93606_Book.indb   2458/26/09   1:39:25 PM 246  /UIstop  Aaron Quigleythe 10 key rules for UUI design. Each rule expresses either an aspect of the human state (e.g., maintaining bliss and not disturbing cognitive /f_low) or a base system requirement to ensure ease of use (e.g., no need of manuals and easy undo). /T_hose developing a UUI should consider these rules from the start of the ideation process through to system design and development.6.1.3  Chapter OverviewWith all the artifacts in our environment imbibed with computation, input, and output, the future might become a very noisy, unpleasant, and control-ling place. As such, it is important to study how to avoid the mistakes of the past in poor interface design while also relying on new technologies to help realize this vision of a useful future invisible ‚ÄúEveryware‚Äù (Green/f_ield, 2006) where we remain in control. Section 6.2 describes what is good inter-action design for people in terms of aÔ¨Äordances, metaphors, and the human action cycle. /T_his is described in terms of user-centered design (UCD) in Section 6.2.1, systems design in Section 6.2.2, genius design in Section 6.2.3, and how patterns of interaction can be codi/f_ied into design patterns in Section 6.2.4. /T_he realization of a UUI can rely on a range of well-established user interface classes such as the GUI. Section 6.3 describes diÔ¨Äerent classes of user interface. /T_hree emerging classes of user interface that provide the natural interaction styles to allow interaction to remain in the periphery are described in Section 6.3.1 on tangible user interfaces (TUIs), Section 6.3.2 on surface user interfaces (SUIs) and particularly larger ones in Section 6.3.2.1, whereas ambient user interfaces (AUI) are discussed in Section 6.3.3. /T_hree novel forms of input modality are described in Section 6.4, speci/f_ically sen-sor input in Section 6.4.1, gesture input in Section 6.4.2, and speech input in Section 6.4.3. We conclude this chapter with a brief discussion of some suggested UUI usability metrics in Section 6.5. /T_hese should be considered in the design, research, and development of any UUI.6.2  INTERACTION DESIGNOf particular note for UUI design is the /f_ield of JOUFSBDUJPOEFTJHO (ShaÔ¨Äer, 2006). Interaction design is the discipline of de/f_ining the expected behav-ior of products and systems that a user can interact with. Donald Norman (2002) states, ‚Äúfar too many items in the world are designed, constructed, and foisted upon us with no understanding‚Äîor even care‚Äîfor how we will use them.‚Äù By contrast, interaction design aims to make products and sys-tems usable and useful, and even engaging and fun. When considering the various aspects of interaction design for ubicomp, it is important to recall 
93606_Book.indb   2468/26/09   1:39:25 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  247the breadth of the technological scenarios envisaged. O/f_ten, these scenarios revolve around people making connections to other people through ubicomp systems, not just connecting to the system itself. In addition, the breadth of the scenarios a UUI is required for suggests that interaction design should look to the /f_ields of cinematography, kinesthesiology, and architecture.Interaction design is a complex endeavor and draws on research, meth-ods, techniques, and design guidelines from a range of overlapping and related /f_ields and specialties including: 1. Cognitive psychology (metaphors, aÔ¨Äordances, and mental models) 2. User experience design (storyboarding, personas, mockups) 3. Information architecture (shared data models, data stores) 4. Communication design (visual-auditory communication, graphic design) 5. User interface engineering (prototyping) 6. Human factors (human capability, ergonomics) 7. Industrial design (aesthetics) 8. HCI (new interface and interaction techniques) 9. Usability engineering (usability testing)Good interaction design can be achieved in a number of ways depend-ing on the complexity of the system proposed, its novelty, its degree of stability or ubiquity, and its cost. Design methodologies of interest to ubicomp include UCD, systems design, and genius design. /T_he diÔ¨Äerence between these three approaches centers on the degree of user engage-ment in the process versus how much this can be abstracted away based on a whole system understanding or a con/f_idence in the aesthetic of the designer. One approach to help bridge between these methods is to use documented design patterns. Such patterns can form a basis for exploiting lessons learned in each approach in the design of new systems based on a shared language for UUI design.6.2.1  User-Centered DesignUCD focuses on the user‚Äôs needs, problems, and goals to guide the design of a system. Users are involved at every stage of the process to help ensure 
93606_Book.indb   2478/26/09   1:39:25 PM 248  /UIstop  Aaron Quigleythat the system developed actually meets their needs and allows them to achieve their goals. As an approach to design, UCD dates back more than 30 years. It came from the realization that engineers frequently do not have the necessary skills required to develop user-friendly interfaces for com-puter systems. An important limitation of UCD is that most users typically cannot conceive of a radically diÔ¨Äerent future and instead can only be relied on to inform design based on present needs. Henry Ford, the industrialist, is quoted as saying ‚Äúif I had asked my customers what they wanted, they would have said a faster horse‚Äù (Jardim, 1970). UCD has been, and will continue to be, used in ubicomp research and development as a practical approach to entire systems design and user interface development (Fitton et al., 2005). UCD has its limitations in the face of evolving stated versus actual needs, user goals, technological shi/f_ts, or simply involving the wrong set or type of user in the process. Ubicomp research suggests that some of these limitations can be overcome by incorporating aspects of technology and cultural probes (Risborg and Quigley, 2003), contextual /f_ield research, intensive interviewing, and lag-sequential analysis (Consolvo et al., 2002) into the design process for ubicomp and its interfaces.Many of the technological scenarios described in ubicomp literature are o/f_ten beyond the current expectations, problems, and needs of users of today. From a design point of view, the solutions provided, given these sce-narios, can be broadly classi/f_ied as ‚Äúsystems design‚Äù or ‚Äúgenius design.‚Äù6.2.2  Systems DesignSystems design is a systematic and compositional approach to development, based on the combination of components to realize a solution in essence the development of a system of systems. A ubicomp system is typically com-posed of many systems including social systems (people), devices, appli-ances, computational artifacts, sensors, actuators, and services. In systems design, the documented or anticipated user needs and aims help set the HPBM of the system. Functional elements include computation, sensors, and actuators from the system itself. Inputs from the user are given from con-trols, which can be explicit (e.g., gesture) or implicitly de/f_ined (e.g., infer-ence) on the system. Context data from the environment as a whole are sensed and matched with the goals, which drives the actuation of displays, services, or physical actuators. /T_he actuation provides feedback (output) to the user, which should allow them to determine if the goal was met. If one removes the need for user control, then such a system can be described as self-governing or autonomic with the feedback loop helping to maintain 
93606_Book.indb   2488/26/09   1:39:25 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  249control. Unlike desktop or Web application so/f_tware development, systems design must consider and act upon a range of external factors from the real world as their inputs (disturbances, controls) and outputs (feedback, actua-tion). A systems design approach forces a designer to consider the entire environment in which the ubicomp system will be realized and not just one component of it. As the most analytical of the three design methodolo-gies described here, it may be thought to appeal to ubicomp researchers who wish to ignore the user. /T_his interpretation would be a mistake. As an analytical approach, it requires careful modeling and understanding of the implications of the user‚Äôs goals, feedback, and controls provided.6.2.3  Genius DesignShaÔ¨Äer (2006) describes HFOJVTEFTJHO as ‚Äúthe process of exclusively rely-ing on the wisdom and experience of the designer to make all the design decisions.‚Äù Based on their most informed opinion as to what users want and need, they design a product using their instinct and experience. /T_his instinct and experience are developed over many successful projects and years of work. Many excellent devices, products, and systems in use today have come about from just this approach. O/f_ten, to maintain con-/f_identiality, end users are not engaged in any manner, for example, in the design of the iPhone or indeed any Apple product. It is believed, but not con/f_irmed, that designers in Apple must produce 10 versions of any new product feature for peer review and critique. We conjecture that this is how the majority of design decisions in ubicomp research and develop-ment are made today. A researcher invents a new physical component and interaction modality beyond the standard approach. /T_hen, graduate stu-dents, academics, developers, or designers use their personal or collective skills to produce systems with a user interface. /T_hey do not have the time, resources, or inclination to engage a user cohort. Users may be involved at the end for testing or usability testing. Nielsen (2007) suggests that a quality user experience can be created with genius design JG one starts by reducing risk and basing decisions on well-established usability data and studies. However, the contrived tasks o/f_ten developed for usability test-ing are not suitable for the study of ubicomp systems and interfaces in authentic settings (Abowd and Mynatt, 2000). Instead, an iterative design process with evaluation and testing can remove the guesswork and inher-ent risk that the system and interfaces designed will fail. A description of the qualitative and quantitative user study techniques suitable for the evaluation and testing of a UUI can be found in Chapter 4.
93606_Book.indb   2498/26/09   1:39:25 PM 250  /UIstop  Aaron Quigley6.2.4. Design PatternsDesign patterns are solutions to common design problems, tailored to the situation at hand (Tidwell, 2005). Introduced by Christopher Alexander and his colleagues in the /f_ield of architecture in "1BUUFSO-BOHVBHF5PXOT#VJMEJOHT$POTUSVDUJPO, patterns represent a ‚Äúshared language‚Äù for a disci-pline (Alexander et al., 1977). Patterns, now heavily used in so/f_tware engineer-ing (Gamma et al., 1994), are used to communicate common problems and appropriate solutions. Ubicomp researchers have started to describe common design patterns for this /f_ield (Landay and Borriello, 2003). Examples identi/f_ied include Infrastructure (e.g., Proxies for devices), Privacy (e.g., Privacy Zones), Identi/f_ication (e.g., Active Badge), Anticipation (e.g., ‚ÄúFollow-me Music‚Äù), Global Data (e.g., Interface teleporting), Discoverability, Capture and Access, Physical Space, and Location-based Services (e.g., Bluestar (Quigley et al., 2004)). A design pattern consists of 3‚Äì5 pages of text and provides general but descriptive methods for solving a particular problem. /T_he text describes the background and how it might be fused with other patterns. A problem state-ment encapsulates a recurring domain speci/f_ic problem. /T_he answer identi-/f_ies common solutions along with details, suggestions, and tradeoÔ¨Äs.6.2.5  DiscussionWith or without established patterns or an iterative process, UCD, sys-tems design, and genius design approaches all have their strengths and weaknesses. Attempts to invent the future can be curtailed by the current generation of users who cannot imagine a future where this new device, service, or interface will be cheap, desired, or even required. However, this does not mean that the current generation of users should be ignored when researching and developing user interfaces for ubicomp systems. Instead, in each approach, user involvement should be layered in according to the assumptions around the eventual context of use for the system. /T_his may be a UCD process where the ubicomp system solves a clear currently exist-ing problem but relies on new techniques, methods, or infrastructure that are not yet commonplace or it may be an iterative systems design process where the ubicomp system aÔ¨Äords users a new way to interact, relying on a novel combination of modalities with new appliances and aÔ¨Äordances./T_he process of design, or speci/f_ically interaction design, must draw on the available components, systems, interface elements, and modalities useful to realize a distraction-free, blissful, and calming experience. To understand the wide range of interface possibilities, we must /f_irst consider a range of ‚Äúclasses of user interface‚Äù currently available.
93606_Book.indb   2508/26/09   1:39:25 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  2516.3  CLASSES OF USER INTERFACE/T_he user interface represents the point of contact between a computer sys-tem and a human, both in terms of input to the system and output from the system. /T_he realization of this point of contact can exist in many forms and in many classes of user interface. In classical HCI texts, six classes are described that include command language, natural language, menu selection, form /f_illing, direct manipulation, and anthropomorphic inter-faces (Dix et al., 2003).Direct manipulation embodied in the GUI has made computers acces-sible to many people. GUIs rely on visual and spatial cues, which are faster to learn, are easier to remember, and provide context for the user. Command languages require the user to remember concise yet cryptic commands. With rapid touch typing skills, these languages o/f_ten appeal to experts but can strain one‚Äôs power of recall. For example, consider the following UNIX commandstail-n100 mynumbers|grep ‚Äú^+353‚Äùwhen issued at the command line will return any of the last 100 lines of the /f_ile mynumbers that start with string 353. Powerful indeed, but it requires detailed recall of command syntax to perfect.Menu selection relies on recognition but not recall and can be easily supported on almost any visual device. However, this can create complex menu hierarchies and with audio systems users can easily get lost in (e.g., telephone menus). Form /f_illing requires minimal training to use but is limited to data collection-style applications. Many of the most powerful web commerce applications are currently built around form /f_ill-in inter-faces. Research and usability has shown these reduce input errors and hence improve the user experience.A natural language interface relies on a command language that is a sig-ni/f_icant subset of a language such as English. For example, IKEA oÔ¨Äers an Online Assistant on their Web site that responds to typed English sentences. Related to natural language are humanlike or anthropomorphic interfaces that try to interact with people the same way people interact with each other. /T_hese are typically realized with interface characters acting as an embodied humanlike assistant or actors. Anna, the IKEA Online Assistant, has mini-mal anthropomorphic features through the use of 2-D animation.From the WIMP paradigm developed in the Xerox Alto in the 1970s to the latest 3-D interface elements seen in Windows 7 and Mac OS X, the GUI has tended to dominate what is considered a user interface. However, clearly, 
93606_Book.indb   2518/26/09   1:39:25 PM 252  /UIstop  Aaron Quigleya keyboard, screen, and mouse with GUI elements tied to every device aÔ¨Äording computational interaction cannot be the future. /T_he advent of the UUI will draw on elements from all these classes of interface and more.For research and development, there are many issues in how elements of these well-established classes of user interface can be incorporated into future UUIs. /T_here exist many further types of input technologies that we discuss in Section 6.4 which do not cleanly /f_it into any of these six classes because they rely on new devices. Examples include body movement in the form of gesture, speech, ambient feedback, surface interaction, and augmented reality (AR). Clearly, many new classes of user interface are being de/f_ined beyond these desktop-computing-bound six. Examples of this new class of interface includeTangible User InterfacetSurface User InterfacetAmbient User InterfacetAlternate classes of user interface include gestural user interfaces, touch-based user interfaces, pen-based user interfaces, exertion inter-faces (Mueller et al., 2007), and context-aware user interfaces. Two classes of interface, each deserving a chapter in their own right, which we do not explore in detail here, are AR user interfaces and multimodal user inter-faces. An AR user interface (Figure 6.5) overlays computer graphics onto the image of a real-world scene typically with the aid of a supporting so/f_t-ware interface framework (Sandor and Klinker, 2005). /T_his scene can be viewed through a head-mounted display or a standard personal or desktop display. AR systems have been used to provide a graphical augmented-reality view of industrial equipment in the technician‚Äôs immediate vicin-ity (Goose et al., 2003), Invisible Train Games (Wagner et al., 2005) as shown in Figure 6.5, or Human PacMan (Cheok et al., 2004). Multimodal interfaces attempt to take inputs from two or more of the inputs described here and ‚Äúfuse‚Äù the disparate inputs into one. /T_he motivation is to over-come the inherent limitations in any one modality with the expressiveness and error checking possible with multiple ones. For further details, we refer the reader to these guidelines for multimodal user interface design (Pavlovic et al., 1997; Reeves et al., 2004).For the purposes of this UUI chapter, we limit our discussion to these three emerging areas (TUI, SUI, AUI) that rely on basic metaphors and 
93606_Book.indb   2528/26/09   1:39:25 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  253
well-understood aÔ¨Äordances. /T_hese areas are both substantive and repre-sentative /f_ields of user interface study for ubiquitous computing.6.3.1  Tangible User InterfaceUnlike a GUI, which presents manipulable elements virtually onscreen, a TUI integrates both representation and control of computation into physical artifacts. In essence, TUIs help provide physical form to com-putational artifacts and digital information. A ‚Äú‚Ä¶ TUI makes informa-tion directly graspable and manipulable with haptic feedback‚Äù (Ullmer and Ishii, 2000). /T_he literal de/f_inition of the TUI as having both input and output factored into the same physical artifact has evolved over time (Fishkin, 2004). Accordingly, the accepted TUI paradigm is now: a user manipulates a physical artifact with physical gestures, this is sensed by the system, acted upon, and feedback is given. TUIs attempt to bridge the digital-physical divide by placing digital information in situ coupled to clearly related physical artifacts. /T_he artifacts provide sites for both input, using well-understood aÔ¨Äordances, and can act as output from the system. Unlike the GUI, a classical TUI device makes no distinction between the input devices and the output devices. Current TUI research and develop-ment attempt to form natural environments augmented with computation where the physical artifacts in that environments are digital embodiments of the state and information from a system.
FIGURE 6.5 Augmented Reality invisible train game. (Accessed from Graz University of Technology, http://studierstube.org/handheld_ar/media_press .php)
93606_Book.indb   2538/26/09   1:39:26 PM 254  /UIstop  Aaron Quigley
A stated aim for ubicomp is to make information, applications, and services available anywhere and at anytime in the human environment. Although TUIs are not yet ubiquitous in our daily lives, point examples drawn from both research and deployment can be discussed with refer-ence to Weiser‚Äôs original vision of ‚Äúcomputation in basic objects, environ-ments and the activities of our everyday lives in such a way that no one will notice its presence‚Äù (Weiser, 1999).For example, ‚ÄúUrp‚Äù is a tangible workbench for urban planning and design (UnderkoÔ¨Ñer and Ishii, 1999) shown in Figure 6.6. In Urp, the basic objects are physical architectural models (houses, shops, schools) that can be placed by hand onto the workbench. /T_he environment for Urp appears as a typical design desk with the computational infrastructure for the I/O Bulb (projector, vision system, computation) hidden away. Indeed, even in the case of no power, the desk and models still provide a view of the design space. Layered on top of the physical artifacts (desk and building models) are aspects of an underlying urban simulation including shadow, re/f_lections, and wind /f_low. /T_he seamlessness of this system relies on the natural interaction, rapid response, and in situ nature of the simulation data presented so that its presence is not noticed. /T_he simulation data and interactions appear natural, obvious, and in keeping with the task at hand. Although not ‚Äúvisually invisible,‚Äù Urp may be ‚ÄúeÔ¨Äectively invisible‚Äù 
FIGURE 6.6 Urp, architectural 3-D shapes with projected shadows beneath. (Copyright Tangible Media Group. Photograph taken by Dana Gordon.)
93606_Book.indb   2548/26/09   1:39:26 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  255in action or behavior to the designer. /T_his distinction between literal and eÔ¨Äective invisibility is important to understand.Posey is a computationally enhanced hub-and-strut kinematic con-struction kit (Weller et al., 2008). As with all types of construction kits such as Lego, Meccano, or Tinkertoy, Posey allows for a wide range of physical creations to be realized. In Posey, the basic objects are plastic childlike toy pieces, consisting of struts with a ball at each end and hubs with from one to four sockets. /T_he environment for Posey can be a typical child‚Äôs play area and the computational infrastructure for optocoupling with infrared (IR) light-emitting devices (LEDs) and photosensors and ZigBee wireless transmission remains hidden away. As with Urp, even without power, computation, or other digital-physical applications, Posey remains a usable toy. It is, a/f_ter all, a TUI, which aÔ¨Äords construction kit building activities. Aspects of the computationally enhanced system are currently rudimentary with Puppet Show outputs shown on a local dis-play. /T_he current version of Posey is not as seamless as proposed future versions, where the posable actions of Posey will be /f_luidly linked to the creation of animated character in a 3-D world for, example. Here, the cre-ation of an animated bear puppet from physical interaction may allow future versions of this TUI to be invisible in action./T_he /f_ield of TUI includes research and developments including areas such as audio systems (AudioCube, Audiopad (Patten et al., 2002), and Blockjam), construction toys (Topobo, Posey, FlowBlocks), physical tokens with inter-active surfaces (Microso/f_t domino tags, metaDesk, Audiopad, Reactable, TANGerINE), toolKits (iStuÔ¨Ä (Ballagas et al., 2003), Phidgets), ‚Äúedutain-ment‚Äù (DisplayCube), and consumer products (I/O Brush, Nabaztag). Core methods, technologies, and techniques have been developed that are suit-able for integration into physical artifacts, each of which contains many challenging research and engineering questions.Many ubicomp scenarios are currently realized with GUIs on hand-held computers, embedded displays, mobile phones, laptop, and desktop displays. In comparison, TUIs rely on devices concealed into everyday objects and everyday interaction modalities. /T_hese modalities rely on our basic motor skills and our physical senses. Rather than simply weaving GUI displays into our world with devices such as chumbys (http://www.chumby.com) or augmented refrigerators, TUIs are sites for computa-tion, input, and output within objects in our physical environment. For example, Phicons are a TUI whose physical appearance suggests natural mappings to corresponding computational actions (Fishkin et al., 2002; 
93606_Book.indb   2558/26/09   1:39:26 PM 256  /UIstop  Aaron QuigleyIshii and Ullmer, 1997). /T_he physical appearance serves as a metaphor for action. In high-end BMWs, the shape of a car seat control resembles the shape of the seat itself. /T_hus, pushing the physical button that is shaped like the bottom seat forward will cause the actual seat to move forward.Fishkin [18] details two dimensions of FNCPEJNFOU and NFUBQIPS to describe a taxonomy with which to describe TUIs. Embodiment is the extent to which a user thinks of the state of computation as being embod-ied within physical housing of the artifact. /T_his dimension includes four categories: full, nearby, environment, and distant (Fishkin, 2004). 1. With full, the output device is the input device. 2. With nearby, the output takes place near the input object, typically, directly proximate to it. 3. With environment, the output embodiment is around the user. 4. With a distant embodiment the output is ‚Äúover there‚Äù on another device./T_he dimension of metaphor relates physically aÔ¨Äorded metaphors due to an artifact‚Äôs physical tangibility. /T_his dimension includes /f_ive catego-ries: none, noun, verb, noun and verb, and full (Fishkin, 2004). 1. For none, the physical actions with the TUI are not connected to any real-world analogy (e.g., command line style UI). 2. For noun, the look of an input object is closely tied to the look of some real-world object but this is a super/f_icial spatial analogy only. 3. For verb, the analogy is to the gesture used. 4. For noun and verb, the physical and virtual objects still diÔ¨Äer but are related with appeal to analogy (e.g., Urp (UnderkoÔ¨Ñer and Ishii, 1999)). 5. Full gives a level of analogy where the virtual system is the physical system. /T_hese is no disconnect./T_his work uni/f_ies several previous frameworks and incorporates a view from calm computing to classical GUI interfaces. So, expanding on 
93606_Book.indb   2568/26/09   1:39:26 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  257Fishkin‚Äôs taxonomy, we de/f_ine the /f_ive key characteristics of a TUI for a UUI to 1. Provide a clear coupling of physical artifact to relevant and related computation, state, and information 2. Ensure contextually appropriate physical aÔ¨Äordances for computa-tional interaction 3. Ensure contextually sensitive coupling of physical artifact to intan-gible representation (audio/graphics) 4. Support ‚Äúinvisibility in action‚Äù (not literal invisibility) and natural behavior 5. Ensure a grounding of the TUI interaction design in the /f_ields of ethnography, industrial design, kinesthesiology, and architectureMoving TUI from research to deployment requires careful interaction design to ensure that the aÔ¨Äordances and computational support can be invisible in action and support natural behaviors. ‚Äú‚Ä¶ the appearance of the device must provide the critical clues required for its proper operation‚Äîknowledge has to be both in the head and in the world‚Äù (Norman, 2002). It is important to recall that even the original command line interface on terminal computers relied on tangible interfaces in the form of a physical keyboard and screen. Tangibility may be necessary to help realize many ubicomp scenarios, but by itself is not suÔ¨Écient, as the outputs cannot change to /f_it the context as the GUI can.6.3.2.  Surface User InterfaceAn SUI is a class of user interface that relies on a self-illuminated [e.g., liquid crystal display (LCD)] or projected horizontal, vertical, or spherical inter-active surface coupled with control of computation into the same physical surface (e.g., a touchscreen). As with a TUI, the outputs and inputs to an SUI are tightly coupled. /T_hey rely on computational techniques includ-ing computer vision, resistive membrane, capacitive and surface acoustic wave detection, to determine user input to the system. /T_hey are o/f_ten used in public places (kiosks, ATMs) or small personal devices (PDA, iPhone) where a separate keyboard and mouse cannot or should not be used./T_he scale of an SUI can range from small personal devices such as the iPhone or PDA, through a Tablet PC up to large public interactive 
93606_Book.indb   2578/26/09   1:39:26 PM 258  /UIstop  Aaron Quigley
surfaces such as the MERL DiamondTouch (Dietz and Leigh, 2001), as shown in Figures 6.7 and 6.9, or the Microso/f_t Surface as shown in Figures 6.2 and 6.8. An SUI can rely on a range of input types including passive stylus, active stylus, /f_ingers, or tangible objects, or it may be tied to just one, as is the case with the Tablet PC with its active powered sty-lus. Whereas the input to the SUI is simply being used as a surrogate for a mouse input, many SUI applications function as classical GUIs do and as such they can be subject to many of the same design and usability stud-ies and evaluations. In addition, large rendered or projected keyboards can further make such systems less ergonomic and functional than their GUI equivalents with attached keyboards and mice. Clearly, this is to be avoided.As with all types of interface, SUIs must be /f_it for purpose and not be foisted on users as a gratuitous replacement for desktop computing. Fitts‚Äô law still applies! /T_his law, although published more than 50 years ago, can be used to predict the time to move to a target area, as a function of the distance to the target and the size of that target. Equation (6.1) states that the movement time 5 (or MT as originally described), can be computed based on ", the distance to the center of the target from the starting posi-tion, and 8, the target width. /T_he empirically determined constants B and C are computed using a regression analysis on the movement time data. 
FIGURE 6.7 Microso/f_t surface detecting device and user touch. 
93606_Book.indb   2588/26/09   1:39:27 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  259
Re/f_inements to this formulation to ensure a more stable model for the Fitts law have also been proposed. 5BC"8¬§¬¶¬•¬≥¬µ¬¥log22 (6.1)As a result, small targets far away from where one‚Äôs hands currently are will be diÔ¨Écult to acquire rapidly. Instead, the research, design, and development of an SUI can be seen as an opportunity to move beyond the classical desktop, keyboard, and mouse setting, and into the realization of more natural interaction styles BTBQQSPQSJBUF. /T_he current generation of SUIs built into LCD displays or form factored into coÔ¨Äee tables cannot be considered a ‚Äúbasic object‚Äù in Weiser‚Äôs vision. However, display technolo-gies are now ubiquitous and if SUI interaction styles can be woven into the environments and activities of our everyday lives, then they will have achieved invisibility in action.Basic SUIs have been commonplace for more than 20 years in the form of interactive kiosks, ATMs, and point-of-sale systems with a touch- sensitive surface overlaid with the display. /T_hese systems rely on touch-screen technology with simple button style interfaces. /T_he basic technolo-gies in many products such as the Nintendo DS with its resistive touchscreen technology were established in hardware research decades ago. /T_he recent 
FIGURE 6.8 User participants sharing photos with gestures in SharePic.
93606_Book.indb   2598/26/09   1:39:28 PM 260  /UIstop  Aaron Quigleyheightened interest in SUI products such as the iPhone generally stems from the low cost of production and the interaction styles they can aÔ¨Äord beyond the desktop paradigm.Due to their low cost and form factor, PDAs with rendered SUIs have formed components of many of the published ubicomp systems in the lit-erature for the past 15 years, for example, the use of a PDA as memory aid for elders (Szymkowiak et al., 2005). Siren is a context-aware ubicomp system for /f_ire/f_ighting (Jiang et al., 2004). Each /f_ire/f_ighter carries a WiFi PDA on which the Siren messaging application is running. Each PDA has a Berkeley smart dust mote attached that is used as both a local sens-ing device and a communication facility to gather data from other motes embedded in the environment. In the Invisible Train system, an AR inter-face (SUI) is displayed on the screen of the PDA (Wagner et al., 2005). /T_he attached camera allows the PDA to determine its relative 3-D location and rotation with respect to printed /f_iducial makers in the environment. /T_he tracking and rendering overlay provides an SUI to a 3-D information space embedded within physical reality. In eÔ¨Äect, the SUI acts as a ‚Äúmagic lens‚Äù onto the world. Interface elements that appear overlaid on the world such as the train speed button or moving track switches can all be oper-ated with a tap on the rendered item on screen. Here, the small PDA acts as both input with stylus, touch, or gesture, and visual output to eÔ¨Äect an interactive SUI.Embedded, personal, or public displays provide opportunities for the development of an SUI. Smart phones can be used in ubicomp for taking and displaying context-aware notes tied to visual codes, photos, dictation, and text (Konomi and Roussos, 2007). It is important to note that coupling of input with output sometimes limits the tasks for which an SUI can be used. Consider the Audi Multi Media Interface (MMI), which provides controls for the company‚Äôs high-end in-car navigation, radio, and car sys-tems. /T_he ergonomically designed remote control panel aÔ¨Äords input while the two display outputs are in the driver‚Äôs primary /f_ield of view. /T_hese dis-plays use well-considered typography, shapes, shading, and opacity to help clearly present the information to the driver. However, this decoupling of input from output means the MMI is not a form of SUI unlike the more ubiquitous TomTom or Garmin navigation systems seen in-car./T_he PDA has represented the /f_irst truly small, low-cost SUI platform that researchers experimented with. /T_he interfaces developed have drawn heavily from GUI and mobile computing design and interaction styles. /T_he availability of GUI toolkits has further rendered many of the interfaces on 
93606_Book.indb   2608/26/09   1:39:28 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  261PDAs displays for the ‚Äúsmall screen‚Äù and the stylus or /f_inger as a surro-gate for the mouse. Character input, however, has moved beyond the GUI style with input languages such as GraÔ¨Éti and Unistrokes (Castelluci and MacKenzie, 2008). PDAs typically support single-point interaction and the inputs they can accept in terms of tap, double tap, and gestures re/f_lect this. Tablet PCs, although classi/f_ied as SUIs, have featured less prominently in ubicomp research due to their size, form factor, and supported styles of interaction. Weiser (1999) developed inch-, foot-, and yard-scale displays called ‚Äútabs, pads, and boards.‚Äù Tabs are akin to iPhones and PDAs, pads to the Tablet PC, and boards to larger SUIs.6.3.2.1  Large SUIsLarger interfaces that can act as an SUI have been researched and devel-oped for more than 20 years. Although they can be classi/f_ied in a number of ways, here we consider them from the standpoint of front-projected, rear-projected, and self-illuminated. For front-projected displays, the Digital Desk (Wellner, 1993) is a seminal ubicomp example incorporating an SUI. Both computer vision and audio sensing are used, and physical artifacts placed on the desk (under the gaze of a camera) act as interface elements. An exemplar application of a calculator has a paper sheet with printed but-tons. Pressing these buttons is registered by the vision system and the cur-rent total is projected into the total square. Urp, described in Section 6.3.1, is a form of SUI relying on tangible objects to interact with it.Various devices and applications rely on a single mouse input to operate. Single-touch interfaces can readily adapt to emulate single mouse input once issues of /f_inger size and double tapping are considered. However, people typically have four /f_ingers and one thumb on each of two hands. As a result, multitouch and multihanded interaction has emerged as an area of active research, and advances in both hardware and so/f_tware solutions are sup-porting multitouch gestures, two-handed input, and multiperson input./T_he DiamondTouch from MERL allows multiple, simultaneous users to interact with it as touch location information is determined independently for each user [16]. /T_he DiamondTouch operates by transmitting a unique electrical signal to an array of rows and columns embedded in the table surface as shown in Figure 6.9. Each user is connected to a pad (standing, sitting, or touching) so that when they touch the surface with any part of their body, signals are capacitively coupled from the particular rows and columns touched. /T_he DiamondTouch supports multipoint interaction and multiuser interaction, and is debris-tolerant and durable. SharePic is 
93606_Book.indb   2618/26/09   1:39:28 PM 262  /UIstop  Aaron Quigley
a novel gesture-driven photo-sharing framework and application built on top of the DiamondTouch (Apted et al., 2006)./T_he Sony SmartSkin consists of a mesh of transmitter/receiver electrodes (e.g., copper wires) on the surface that forms a sensing layer (Rekimoto, 2007). /T_he mesh can have a variable density, and it supports mouse emu-lation, shape-based manipulation, gestures, and capacitance tags on the bottom of tangible objects. When using capacitive sensing, both hand and /f_inger interaction is supported along with physical dials and controls. AudioPad is a musical performance system using tangible music controls on a project surface (Patten et al., 2002). TANGerINE is a tangible tabletop environment, incorporating physical objects with embedded wireless sen-sors (Baraldi et al., 2007). For example, the Smart Micrel Cube (SMCube) is a wooden cube case with a matrix of IR emitter LEDs on each face. It embeds a WiMoCA node with a triaxial accelerometer and Bluetooth. /T_he IR LEDs allow for computer vision methods to detect their position using simple noise removal, background subtraction, thresholding, and connected com-ponents analysis. Front-projected SUIs suÔ¨Äer from the problems of a per-son‚Äôs body or hand occluding the display or blocking the line of sight for a camera system. In addition, the space required for the projector mounting can make this form of SUI diÔ¨Écult to manage. Short throw projectors like those used in commercial systems such as the latest SmartBoard go some way to overcoming some of these problems.Rear-projected SUIs have made a large impression on the popular imag-ination in the past 5 years. /T_hey can be seen in nightly newscasts, during the Super Bowl, in the media, and new products from large multinational 
XY
FIGURE 6.9 MERL Diamondtouch Multiuser input schematic. (Courtesy of Circle Twelve.)
93606_Book.indb   2628/26/09   1:39:29 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  263corporations such as Microso/f_t. /T_he exact history of this part of the SUI /f_ield is both recent and deeply immersed in ‚Äúpatents pending.‚Äù As such, we will review four representative systems with regard to the research and design methods behind them and interactions they support. /T_he TouchLight relies on a rear-projected display onto a semitransparent acrylic plastic plane /f_it-ted with DNP HoloScreen material (Wilson, 2004). A touch image is com-puted on the plane situated between the user and a pair of cameras. An IR pass /f_ilter is applied to each camera and an IR cut /f_ilter to the projector if required. An IR illuminant is placed behind the display to illuminate the surface evenly in IR light. /T_his con/f_iguration separates the projected light into the visible spectrum and the sensed light into the IR spectrum. Methods including depth mapping, sobel edge /f_ilters, mouse emulation algorithms, connected components algorithms, and template matching are used in TouchLight‚Äôs computational support. /T_he reacTable operates in a similar manner but it relies on a horizontal orientation and TUI physi-cal objects with /f_iducial markers (Jord√† et al., 2005). An example SUI is a collaborative electronic music instrument with the tabletop tangible mul-titouch interface. /T_he Micoso/f_t Surface operates in a similar manner to TouchLight, a lbeit w it h signi/f_icant improvements in aspects such as indus-trial design, form factor, and so/f_tware support. /T_he IR lighting methods used here are typically referred to as EJÔ¨ÄVTFJMMVNJOBUJPO.Fourier transform infrared (FTIR)-based displays such the multitouch work of JeÔ¨Ä Han (2005) relies on the total internal reaction (TIR) of light being frustrated. /T_he frustration comes about when a object (e.g., /f_inger) makes contact with the surface. /T_he TIR is the same principal used in opti-cal waveguides such as optical /f_ibers. As with direct illumination, in FTIR IR illumination is used as the optical carrier. Here, a sheet of acrylic acts as a waveguide and is edge-lit by an array of high-power IR LEDs. IR light is emitted toward a pair of cameras situated behind the projected surface.Self-projected systems are typically developed around LCD or plasma screen technologies. Given the space requirements for both front- and rear-projected SUIs, this class of device is drawing on both fundamental touchscreen technologies and the realization that alternate form factors are required. /T_he digital vision touch relies on small cameras embedded in a device around the rim of the display. When an object enters the /f_ield of view, the angle within the /f_ield of view of the camera is calculated. Multiple cameras allow for triangulation and hence the location of the object (e.g., /f_inger) onscreen to be determined. /T_his is an area in its relative infancy as detecting multipoints as in FTIR or objects (e.g., the shape of a phone) as 
93606_Book.indb   2638/26/09   1:39:29 PM 264  /UIstop  Aaron Quigleyin TouchLight remains a signi/f_icant research challenge for systems that do not have a clear view of the touch image from the back, or the front.Regardless of the approach taken, the coupling of input with output into an SUI can cause a number of usability issues. /T_hese issues must be considered when developing an SUI component as part of a larger UUI: 1. /T_he user‚Äôs stylus, /f_ingers, and hands may partially occlude the interface. 2. Interface elements may be diÔ¨Écult to select due to size of stylus, /f_in-ger, or hand. 3. Users may suÔ¨Äer fatigue due to the range of human motion required. 4. /T_he scale of the display may not be suitable for all aspects of the task at hand. 5. /T_he screen surface can be damaged or dirty. 6. /T_here is a lack of tactile feedback from passive screen surfaces. 7. Calibration between the display (projector or LCD) and the sensing elements can become misaligned.Each of these problems can be addressed with careful design. For example, research is ongoing into the coupling of large displays with small personal displays (Terrenghi et al., 2009) to overcome the limitations of each type of SUI device. Other problems can be addressed with new tech-nological advances such as haptic output to overcome the lack of tactile feedback on small SUIs. For example, Sony has developed tactile touch-screen feedback based on a very small actuator that bends the screen. /T_he eÔ¨Äect provides a haptic feedback along with a visual one to give the user the sense of buttons that actually click (Poupyrev and Maruyama, 2003).Front, rear, or self-illuminated displays are becoming ubiquitous in our environment from ATMs to advertisements. Once coupled with support for HCI, they provide a key building block of the realization of always-on, always-available UUIs for ubicomp systems.6.3.3  Ambient User InterfacesSUIs require our engagement and involvement to operate correctly. Con sid er, however, a calm technology that can move easily from the periphery of our attention, to the center, and back again (Weiser, 1999). Ambient information 
93606_Book.indb   2648/26/09   1:39:29 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  265displays or outputs are intended to be ‚Äúignorable‚Äù or ‚Äúglanceable,‚Äù allowing users to perceive the information presented in the periphery of their atten-tion, but also to be bring this information (e.g., social reminders) into focus as required (Shannon et al., 2009). Although the periphery of our attention is a nebulous concept, it is grounded in the notion of our peripheral vision. Extensive research in vision science has demonstrated our abilities to recog-nize well-known structures and forms, to identify similar forms and par-ticularly movements from outside our foveal line of sight. In practice, an ambient display, sound, movement, or even smell can convey background or context outputs from a ubicomp system (Heiner et al., 1999). Figure 6.10 demonstrates constant feedback through a tactile ambient display to express a mobile phone‚Äôs state. Qualitative user studies demonstrated the ability to selectively ‚Äútune in and out‚Äù (Hemmert, 2009) status information was wel-comed, even if the rudimentary form of actuation was not. In the future, a low-power heating element or other peripherally ignorable form of actuation could provide constant ambient feedback one could selectively attune to.An ambient output (display or other) does not constitute a full user interface because it does not incorporate input. Many of the inputs we have described here would explicitly negate the glanceable nature of an AUI. As such, an AUI is a class of user interface where the output elements reside in the periphery of a user‚Äôs awareness, moving to the center of attention only 
FIGURE 6.10 Ambient information provided by a tactile ambient display in a mobile phone. (Courtesy of Fabian Hemmert.)
93606_Book.indb   2658/26/09   1:39:30 PM 266  /UIstop  Aaron Quigleywhen appropriate and desirable, and the inputs come from nonintrusive sens-ing or inference from other actions. Various dimensions of interest including a user‚Äôs information capacity, suitable noti/f_ication level, display represen-tational /f_idelity, and aesthetic emphasis have been explored to understand AUIs and their limits (Pousman and Stasko, 2006). Additional studies have demonstrated a person‚Äôs inability to recall the structure of an ambient infor-mation display, whereas the essential details and information conveyed can be recalled (Rashid and Quigley, 2009).Fully realized AUIs as de/f_ined are not yet commonplace in our daily lives. However, ambient displays (e.g., digital advertisements and signage (Rashid and Quigley, 2009)) are commercially available and the subject of active research and development as part of larger information systems. Aspects of, or objects in, the physical environment become representations for digital information rendered as subtle changes in form, movement, sound, color, or light that are peripherally noticeable. Such displays can provide constant/ situated awareness of information. Again, we can discuss these with reference to Weiser‚Äôs original vision of ‚Äúcomputation in basic objects, environments and the activities of our everyday lives in such a way that no one will notice its presence‚Äù (1999). Weiser himself discussed the Jeremjenko Dangling String called Live Wire showing network traÔ¨Éc in Xerox PARC as one of the earliest cited examples of an ambient display. Network activity caused the string to twitch, yielding a ‚Äúperipherally noticeable indication of traÔ¨Éc.‚Äù/T_he power-aware cord, as shown in Figure 6.11, is designed to visual-ize the energy /f_lowing through it rather than hiding it (GustaÔ¨Äson and 
FIGURE 6.11 Power-aware cord, a power-strip designed to actively visu-alize the energy in use. (Photograph by Magnus Gyllensw√§rd. Accessed from http://tii.se/static/press.htm)
93606_Book.indb   2668/26/09   1:39:30 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  267Gyllensw√§rd, 2005). /T_his AUI aims to provide increased consumer aware-ness of their energy consumption. Switching oÔ¨Ä/on or unplugging devices acts as an input to the system and the display consists of glowing patterns produced by electroluminescent wires molded into the transparent electri-cal cord. /T_his is a very basic object, present in our everyday environment, and with people ever more concerned with energy conservation, this has become a natural activity of our daily life, that is, consideration of energy usage. By relying on patterns of movement, this AUI can be attuned to in our periphery via peripheral vision. Longitudinal research studies of both the eÔ¨Äectiveness and the disturbance of our visual /f_ield are required for this AUI. Would a moving pattern ever truly blend its way into our envi-ronments so as we might not notice it?/T_he information percolator (Heiner et al., 1999) is an ‚Äúaesthetically pleasing decorative object.‚Äù Here, the display is created by the control and release of air bubbles that rise up a series of tubes. /T_he eÔ¨Äect appears as a set of pixels, which can be used to convey a message that scrolls up the dis-play. Sample applications include a personalized clock, activity awareness, a poetry display, and an interactive ‚Äúbubble painting‚Äù application. /T_he /f_irst three can be classed as AUIs as they require no explicit user input to oper-ate and can be truly glanceable. /T_he bubble painting treats the percolator as a large display with gestural input, thereby rendering it an SUI in this case. /T_his blending of multiple interface classes will be typical and expected of future UUI developments. /T_he percolator is not a basic object, but as a piece of installation art it can go unnoticed and thus remain glanceable.By contrast, described as JOGPSNBUJPOEFDPSBUJPO, the Datafountain dis-plays relative currency rates using three water fountains side by side as shown in Figure 6.12. /T_he relative heights of each fountain change with 
FIGURE 6.12 Datafountain displaying relative currency rates.
93606_Book.indb   2678/26/09   1:39:31 PM 268  /UIstop  Aaron Quigleyrespect to the currency changes (van Mensvoort, 2005). Here, the foun-tain is a basic object one would expect to /f_ind in day-to-day environments. However, unlike the information percolator, it remains only an output with inputs provided by a web service call. /T_he InfoCanvas paints an appealing and meaningful representation of user-identi/f_ied information on a virtual canvas. /T_his ambient display allows people to monitor information in a peripheral manner (Miller and Stasko, 2001).Finally, the suite of commercial systems for Ambient Devices includ-ing the Orb and Umbrella as shown in Figure 6.13 along with the Energy Joule represents the best examples of ambient displays, which have gained widespread deployment. /T_he Ambient Orb is a frosted ball that glows in diÔ¨Äerent colors to allow user to peripherally monitor changes of the status of everyday information. /T_he color range and movement can be tailored via a website to the user‚Äôs preference to show information including real-time stock market trends, pollen forecasts, weather, wind speed, and traf-/f_ic congestion. /T_he Ambient ‚ÄúEnergy Joule‚Äù glows red, yellow, or green to indicate current cost of energy. Further details can be determined upon closer inspection with a le/f_t status bar detailing the cost, and right bar showing your current energy consumption. With the Ambient Umbrella, if rain is forecast, then the handle of the umbrella glows so you will not forget to take it. /T_he Umbrella, as shown in Figure 6.13, is an everyday object, and deciding to take it or not each day is certainly an activity for those who live in rainy places. It remains an output only, but can move to the center of our focus if we peripherally notice the glowing handle. /T_he Orb and Joule represent special purpose devices, not everyday objects that exhibit Ambient display features. /T_he Orb may function as a component of a larger AUI or UUI as developed or designed in the future. With the 
FIGURE 6.13 Ambient Orb and Ambient Umbrella. (Courtesy of Ambient Devices.)
93606_Book.indb   2688/26/09   1:39:31 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  269Joule AUI turning on or oÔ¨Ä, an appliance can act as an input, whereas the color on the Joule provides ambient feedback that can remain glanceable.Further AUI examples include the context-aware Visual Calendar (Neely et al., 2007), AuraOrbs and ambient trolley (Stasko et al., 2007), Information Art (Stasko et al., 2004), CareNet (Consolvo et al., 2004), BusMobile, and Daylight Display (MankoÔ¨Ä et al., 2003).An AUI may exist in a device or environment for long periods with-out a conscious user action, yet the user is getting information from it, and by his/her actions or colocation, is providing it inputs. As a class of user interface, the ambient one conforms closest to Weiser‚Äôs vision of calm technology. /T_he design and evaluation of an AUI is particularly challeng-ing from many standpoints including engaging users, conveying the util-ity, determining the eÔ¨Äectiveness, eÔ¨Éciency, and usability (MankoÔ¨Ä et al., 2003), and collecting longitudinal eÔ¨Écacy data. In practice, an AUI may transition from implicit use to being an explicit SUI or from support for interaction with one to multiple users (Vogel and Balakrishnan, 2004). Clearly, there are limited types of information where the use of a dedicated single purpose AUI is useful. Hence, AUIs will form only part of a larger UUI for the system as a whole.6.4  INPUT TECHNOLOGIESA UUI relies on a broader range of inputs and outputs from the system than the classical GUI, TUI, or even an SUI. Examples of these inputs include physiological measurements, location, identity, video, audio, gesture, and touch. In addition, environmental sensors, personal/embedded sensors, data mining, historical data, inference, and preferences can all act as inputs to a system. Examples of the outputs that can be used include haptics, ambient displays, environmental updates, actuators, automated actions and personal-ized behaviors, and multiple audio/video channels. Such outputs are all reli-ant on our senses including sight, taste, smell, touch, hearing, and balance. As we have seen from our discussion on interface classes, some user actions will be interpreted via the UUI as an input to the system without the user being explicitly aware of it. Likewise, the UUI can provide outputs that are only intended for the periphery of the user‚Äôs attention. Of course, many inputs and outputs will require explicit user action to form the input and to process the output provided. As we have already reviewed a wide range of output tech-nologies, we focus on three categories of input namely sensor input, gesture input, and speech input for the purposes of concluding this chapter.
93606_Book.indb   2698/26/09   1:39:31 PM 270  /UIstop  Aaron Quigley6.4.1  Sensor InputA sensor is a device that can measure a physical property from the environ-ment. Sensors can reside in the environment or on the body. Environmental sensors are becoming more widely deployed as components of systems to monitor traÔ¨Éc, air quality, water quality, and light pollution. More locally, sensors can be found embedded in doorways, security systems, weight monitors, and health systems. When sensors are collecting measurements about the person they are attached to, they are called physiological sensors (e.g., heart rate or galvanic skin response measurements); when not used as such, they are called mobile sensors (e.g., light levels, pollution monitor-ing, temperature). Computational measurements such as network traÔ¨Éc or memory usage can be determined by so/f_tware sensors. /T_he measurements from all these sensors are aspects of the context data that a ubicomp system can use to function correctly. By a user‚Äôs regular actions, they can aÔ¨Äect the environment in which the sensors operate (e.g., opening a window, turn-ing on a stove, streaming a video). /T_hese actions can hence be viewed as implicit user inputs to a ubicomp system. For further details on sensors and context data, see Chapter 8 on context for ubicomp in this book./T_he SensVest is a physiological monitoring system built into a wear-able form factor. It measures aspects of human physical performance such as heart rate, temperature, and movement (Knight et al., 2005). /T_he ring sensor, which measures blood oxygen saturation via pulse oximetry, is a component of a 24-hour patient monitoring system (Rhee et al., 1998). In both cases, these measurements form inputs to a larger system. Some commercial sensor systems rely on inertial technology such as the Moven motion capture suit, which can capture full body human motion.As with many systems that rely on the collection of sensor inputs, the iHos-pital system is supported by a location and context-awareness infrastructure (Hansen et al., 2006). PCs can detect Bluetooth-enabled badges that the staÔ¨Ä are wearing when they come within a 10 meter range. No explicit input is required; instead, the location data are sensed from the wireless environment, interpreted, and acted upon with various feedback in the form of reminders and surgery status details, on personal and public displays. Body-worn sen-sors or sensors embedded in devices can also collect various environmental measurements. Infrastructures can also be adapted to subtly alter the envi-ronmental conditions that allows for novel sensing systems to be developed. For example, an economical transmitter circuit can be realized by adding few components to a commercial electronic ballast circuit for /f_luorescent lamps 
93606_Book.indb   2708/26/09   1:39:31 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  271
(Cheok and Li, 2008). A photo-receiver sensor can decode the pulse-frequency modulation that can allow this sensor to be localized. Once the location of the sensor, or more importantly the device or person it is attached to, can be determined, this can then provide an input to the system.Active RFID systems can be sensed at a distance, whereas passive RFID requires closer contact and typically explicit user action for the sensor sys-tem to read the tag as shown in Figure 6.14. Examples of such large-scale sensor deployments include the Oyster card ticketing system used at the London Underground in the United Kingdom and retail applications deployed in Japan as examples, and other large-scale ubiquitous sensor deployments (Konomi and Roussos, 2007). For further details on such deployment, see Chapter 7.6.4.2  Gesture InputA gesture is the movement of a part of the body to express an idea of meaning. Typical gestures such as pointing, waving, or nodding are formed with the hand or the head as appropriate. For example, in a sign language a speci/f_ic con/f_iguration and movement of the hands is consid-ered a gesture. Figure 6.15 shows another common gesture, namely, a handshake, which can be detected and matched and used to infer social relationships (see Haddock et al., 2009). Both basic gestures such as point-ing and complex gestures in sign language rely heavily on the appropriate cultural, geographical, or linguistic frame of reference for their interpreta-tion. An innocuous gesture in one country can easily be interpreted as an insult in another. As such, gesture recognition is the process of interpret-ing human gestures using various inputs and computational processing. Almost any type of input device or system can be used to collect data 
TagTagreaderLocationtransmitterFIGURE 6.14 Magic Touch: use of RFID reader for tagged object identi/f_ica-tion and tracking. (Courtesy of /T_homas Pederson.)
93606_Book.indb   2718/26/09   1:39:32 PM 272  /UIstop  Aaron Quigley
on a user gesture. /T_he diÔ¨Äerence between them is in the determination of how natural this movement actually is. Systems incorporating gesture recognition o/f_ten suÔ¨Äer from the problems of feedback and visibility as described in Section 6.1.2‚Äîthat is, how do I perform the gesture and how do I know what I just did was interpreted or not? Magic Touch, shown in Figure 6.16, is a novel gesture-driven object tracking and identi/f_ication system (Pederson, 2001). Here, pages are tagged (either by the user or from the printer) and, as a user touches any page, the system develops a model that replicates the real-world organization of books, papers, and pages. Here, a gesture is simply the act of picking up and placing down a piece of paper, that is, very natural.
25%25%800%400%200%100%66.6%50%10??Custom(d)800%400%200%100%66.6%50%7??.0CustomEraseShapes...Item...Text...Shapes...Text...Item...ZoomHighlightMove
(c)(b)(a)FIGURE 6.16 Flowmenu, single pen gesture to select option within a hierarchy.
FIGURE 6.15 Matching accelerometer data for sensing handshakes for social net-work development.
93606_Book.indb   2728/26/09   1:39:33 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  273Pen gestures using styli on PDAs and Tablets are the most ubiquitous example of gestural input to a computer system. Palm‚Äôs GraÔ¨Éti and GraÔ¨Éti 2 are in widespread use and allow for rapid character and state changes (caps lock, shi/f_t) using simple gestures. However, they represent only a very small number of body movements. Pen input helped give rise to research on alter-nate forms of menu selection using gestural input, which do provide feed-back and visibility. Circular pie, marking, and /f_low menus (Guimbreti√©re and Winograd, 2000) give each menu item a large target slice that is laid out radially and in diÔ¨Äerent directions. Once you know the directions, you can quickly and reliably move ahead without looking. /T_he user need not wait for the menus to render, so a single pen stroke can be a selection. Flow menus have a radial menu and overlaid submenus with eight octants. Experiments with it have shown that users can naturally learn gestures that require several strokes in one /f_luid gesture (Guimbreti√©re and Winograd, 2000). As single point inputs, all pen gestures can also be used with mouse input, although o/f_ten with noticeable performance degradation.Mouse gestures are commonly available for Web browsers such as Opera or FireFox via plugins. An example mouse gesture in Opera is for the user to hold down the right mouse button, move the mouse le/f_t, and release the right mouse button. /T_his gesture encapsulates a series of movements (from current position to the back button) and a mouse click. Alternatively, a cheat sheet can be provided to a user on the make up of the pen and mouse gestures. In this case, the gesture can be considered a DPNNBOEMBOHVBHF that must be memorized for eÔ¨Écient use. A speci/f_ic problem with mouse gestures is the lack of standardization across applications, hence limiting the bene/f_icial learning eÔ¨Äect enjoyed by having visual widgets in a GUI./T_he use of video input from a single or stereo camera array, relying on visi-ble or near-visible light (e.g., IR) is a common method for collecting gestural input. /T_his is a large /f_ield of research and development that is not limited to ubicomp scenarios. Classical UI interfaces augmented with video-based ges-tural input for gaming and sign language recognition are excellent examples of research in this /f_ield. /T_he gestural input on SUIs such as the Microso/f_t Surface relies on the capture of IR light and subsequent processing with computer algorithms. Established algorithms and methods for processing images and video for gesture recognition include hidden Markov models (HMM) (Wilson and Bobick, 1999) and neural networks (Murakami and Taguchi, 1991). For further details, we refer the reader to the review by Pavlovic et al. (1997) on the visual interpretation of hand gestures. In ubi-comp research, the FingerMouse (de la Hamette and Tr√∂ster 2008) relies on 
93606_Book.indb   2738/26/09   1:39:33 PM 274  /UIstop  Aaron Quigleya button-sized camera that can be worn on the body, capturing the user‚Äôs hand and supporting real-time segmentation and processing. Although not an everyday object, it is not a stretch to imagine such inputs factored into jewelry and other items commonly worn on the body.Physical artifacts can be instrumented with sensors to provide acceler-ometer data. Body movement with the artifact can form an input that can be interpreted as a gesture such as shake, bump, tap, bounce, and rotate. TiltType relies on the combination of tilting actions with button presses to input characters to the device (Fishkin et al., 2002)./T_he Display Cube provides gesture recognition and output through six displays mounted at the sides of the cube (Kranz et al., 2005). A form of TUI, this is a playful learning interface for children. Simple simultaneous button presses aÔ¨Äords SyncTap the ability to seamlessly authenticate two devices (Rekimoto, 2004). In contrast, simply holding two devices together and shaking them provides a method for automatic authentication in Shake Well Before Use (Mayrhofer and Gellersen, 2007). Smart-Its Friends are small embedded devices that become connected when a user holds them together and shakes them (Holmquist et al., 2001). /T_he Wiimote is a handheld wireless game controller that can sense motion. Although this is a special purpose device and not an everyday object, its widespread adop-tion and ease of use can make the combination of game input and output invisible in action. /T_he number of Wiimote devices that have ended up embedded in display screens is a testament to the fact that people forget it is a physical object that can damage other things and people!6.4.3  Speech InputSpeech is the ability to produce articulate sounds to express an idea or meaning, and is typically realized through a spoken language. Speech rec-ognition is the process of interpreting human speech using a variety of audio inputs and computational processing. As with video-based input processing, speech recognition is represented by a large body of research, development, and commercial deployment. /T_he most widespread deploy-ment of speech recognition can be found in phone call routing systems relying on a limited context sensitive vocabulary of words such as yes/no, numbers, and city names. /T_he next most common example is in com-mercial dictation systems such as Dragon NaturallySpeaking. /T_hese rely on training periods with the user and a relatively noise-free environment in which to achieve high levels of speech recognition. Many high-end cars 
93606_Book.indb   2748/26/09   1:39:33 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  275
use commercial systems such as IBM‚Äôs ViaVoice for embedded speech rec-ognition in automotive telematics and other basic controls.Speech represents a popular view of how humans will interact with computers as evidenced in literature and /f_ilm. From natural interaction with next-generation robotic systems to HAL seen 40 years ago in Arthur C. Clarke‚Äôs "4QBDF0EZTTFZ, speech represents one view of how peo-ple can interact naturally with future ubicomp systems. Speech recognition and natural speech output represent the backbone of natural language and anthropomorphic interfaces. In addition, speech is o/f_ten used as a second-ary input modality to multimodal systems. For example, Memento (West et al., 2007) uses a combination of speech and pen input for the creation of a digital-physical scrapbook as shown in Figure 6.17. Speech is recognized by Sphinx components (Huang et al., 1993), and gestures by the Microso/f_t handwriting and gesture recognition libraries. /T_he fused input forms the basis for action by Memento, which in this case is a digital-physical scrap-book for memory sharing.
Pen InputAgentAnoto DigitalPenAudio InputAgentAudioInput/Output
Audio OutputAgentGUI AgentMEMENTOAgentIdealizedConnection
GPRSInternetFIGURE 6.17 /T_he MEMENTO speech agent in a user‚Äôs personal area network.
93606_Book.indb   2758/26/09   1:39:34 PM 276  /UIstop  Aaron QuigleySpeech forms a central mode of input in infrastructure-rich visions of ubicomp as in Project Aura (Garlan et al., 2002). Here, the environment consists of many agents with which one can communicate using natural language. Aura represents a class of Intelligent Environment research pop-ular in ubicomp relying on a rich range of seamlessly coupled inputs and outputs. Beyond such next-generation environments, today there are many work environments where speech can provide a more natural interface. /T_hese are environments where the classic GUI with keyboard and mouse or even next-generation SUI or TUI cannot provide the required compu-tational support for the task at hand in a natural manner. Environments such as surgeries, dangerous work environments, and driving all represent environments where UUIs with speech as input have been researched and developed. Ubicomp scenarios incorporating in-car elements are a natural environment for the exploration of speech input in a UUI (Graham and Carter, 2000). SEAR (speech-enabled augmented reality) oÔ¨Äers a techni-cian a context-sensitive speech dialogue concerning industrial equipment in the technician‚Äôs immediate vicinity (Goose et al., 2003).Speech recognition systems using statistically based algorithms such as HMMs rely on both an acoustic and language model. For a UUI researcher and developer, there exist a number of toolkits that can speed up the rapid prototyping and iterative design process with speech. VoxForge can be used to create acoustic models for speech recognition engines. Designed to collect transcribed speech, VoxForge aims to create multiuser acoustic models that can be used without training. /T_he Julius large vocabulary con-tinuous speech recognition engine is by the Continuous Speech Recognition Consortium in Japan (Kawahara et al., 2004). Julius can be incorporated into a UUI, although it requires the computation power found in modern desktop PCs to operate. /T_he CMU Sphinx Group produces a series of Open Source Speech Recognition components (Huang et al., 1993). /T_hese include decoders, acoustic model training, and language model training. Other toolkits include the Internet-Accessible Speech Recognition Technology C++ libraries and the HMM Toolkit (Young et al., 2002). Other groups are attempting to realize the standardization seen in GUIs across ‚ÄúUniversal Speech Interfaces.‚Äù /T_he learning from interacting with one such USI can be transferred to future experiences with others (Rosenfeld et al., 2001).Although speech input is key, audio can be used to provide speech output of verbal instructions in a UUI (Bradley and Dunlop, 2005). ONTRACK provides navigation cues to a user navigating an environment by adapting the audio he or she is listening to. /T_his is achieved by modifying the spatial 
93606_Book.indb   2768/26/09   1:39:34 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  277balance and volume to help guide the user to his or her destination (Jones et al., 2007). NAVITIME, used by more than 1.82 million people in Japan, provides map-based routes, text routes, and provides turn-by-turn voice guidance for pedestrians on handheld mobile phones and PDAs (Arikawa et al., 2007). Gesture and speech interaction can be provided with patient information systems (O‚ÄôNeill et al., 2006). Bluetooth headsets can be used to provide direct audio and speech outputs to the user, as in the feedback provided in Memento, where the headset operates for both speech input and output in a personalized manner to the user (West et al., 2004).6.5  INTERFACE USABILITY METRICSUsability is a quality attribute that assesses how easy user interfaces are to use. /T_he word ‚Äúusability‚Äù also refers to methods for improving ease-of-use during the design process. Usability is de/f_ined by /f_ive quality components: learnability, eÔ¨Éciency, memorability, errors, and satisfaction.For a UUI, we can describe a set of interface usability metrics, as shown in Table 6.2.TABLE 6.2 Seven Key UUI Usability Metrics.FUSJD.FBOJOHConcisenessA few simple actions in a brief time can achieve a task. /T_his can be measured by time (attention or gaze), keystrokes, gestures, and taps.Expressiveness Does a combination of actions not anticipated give consistent results?EaseHow much does a user need to learn or recall just to start using the interface?Transparency How much does a user need to remember about the state of his or her problem while using the interface telephone speech interface versus a GUI?DiscoverabilityCan the user easily understand and form a mental model of the interface functionality?InvisibilityHow much does the interface make itself know when it could have inferred, deduced, or waited for the data required?Programmability Can the application, device, or service be used in repetitive tasks or can it become a component in a larger system?
93606_Book.indb   2778/26/09   1:39:35 PM 278  /UIstop  Aaron Quigley6.6  CONCLUSIONS/T_his chapter has provided an overview of the classes of interface both new and old that may be suitable to realize interfaces of applications in environments imbibed with computation, input, and output. /T_his chapter started by setting the context for what a UUI is and hence detailing 10 rules for UUI design (Table 6.1). We have shown contrasting approaches to interaction design and how these have impacted on each other and the relative merits of each approach in Section 6.2. Section 6.3 provided a rich description of diÔ¨Äerent classes of user interface. /T_hree novel forms of input modality are described in Section 6.4. /T_his chapter concludes with interface usability metrics described in Table 6.2 for UUIs in Section 6.5 and how these may be applied to future interface design.Although this chapter oÔ¨Äers a snapshot of the state of the art in UUI development, it is best viewed as an entry point to the research papers cited here. Considerable research and development has been undertaken in both ubicomp and the research areas that underpin the subject. Developing a UUI as a prototype or proof of concept to demonstrate an idea or run some small-scale user trials is fundamentally diÔ¨Äerent to the realization of a UUI and system for use in the wild. In the wild, an interface is expected to have all the properties shown in Table 6.1 and more. Anything less consti-tutes risk that people will not purchase, adopt, or use your system. General usability metrics and our ubicomp interface usability metrics are described in Table 6.2. When and where they are to be applied should be consid-ered and re/f_lected upon time and again in the research and development process./T_he ultimate goal for ubicomp is to have interfaces and hence sys-tems that seamlessly support the actions of their users. In the future, enhanced computational artifacts, environments, and full ubicomp sys-tems will become so commonplace in restaurants, colleges, workplaces, and homes that no one will notice their presence. Our job as research-ers, designers, developers, and ultimately users is to constantly question this vision to ensure we end up with calm and blissful digital-physical experiences.ACKNOWLEDGMENTS/T_he authors thank Ross Shannon, John Krumm, and Marc Langheinrich for helpful comments and discussions on this text.
93606_Book.indb   2788/26/09   1:39:35 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  279REFERENCESGregory D. Abowd and Elizabeth D. Mynatt. Charting past, present, and future research in ubiquitous computing. "$.5SBOTBDUJPOTPO$PNQVUFS)VNBO*OUFSBDUJPO 7(1):29‚Äì58, 2000.Christopher Alexander, Sara Ishikawa, and Murray Silverstein. "1BUUFSO-BOHVBHF5PXOT#VJMEJOHT$POTUSVDUJPO	$FOUFSGPS&OWJSPONFOUBM4USVDUVSF4FSJFT
. Oxford University Press, Oxford, 1977.Trent Apted, Judy Kay, and Aaron Quigley. T abletop sharing of digital photographs for the elderly. In $)*1SPDFFEJOHTPGUIF4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT, pp. 781‚Äì790, New Y ork, NY , USA, April 2006. ACM Press.Masatoshi Arikawa, Shin‚Äôichi Konomi, and Keisuke Ohnishi. Navitime: Supporting pedestrian navigation in the real world. *&&&1FSWBTJWF$PNQVUJOH 6(3): 21‚Äì29, 2007.Rafael Ballagas, Meredith Ringel, Maureen Stone, and Jan Borchers. iStuÔ¨Ä: A phys-ical user interface toolkit for ubiquitous computing environments. In $)*1SPDFFEJOHTPGUIF4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT, pp. 537‚Äì544, New Y ork, NY , USA, 2003. ACM.Stefano Baraldi, Alberto Del Bimbo, Lea Landucci, Nicola Torpei, Omar Ca/f_ini, Elisabetta Farella, Augusto Pieracci, and Luca Benini. Introducing tan-gerine: A tangible interactive natural environment. In .6-5*.&%*"1SPDFFEJOHTPGUIFUI*OUFSOBUJPOBM$POGFSFODFPO.VMUJNFEJB, pp. 831‚Äì834, New Y ork, NY , USA, 2007. ACM Press.Nicholas Bradley and Mark Dunlop. An experimental investigation into way-/f_inding directions for visually impaired people. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 9(6):395‚Äì403, 2005.Steven J. Castellucci and I. Scott MacKenzie. GraÔ¨Éti vs. unistrokes: An empiri-cal comparison. In $)*1SPDFFEJOHPGUIF5XFOUZ4JYUI"OOVBM4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT, pp. 305‚Äì308, New Y ork, NY , USA, 2008. ACM Press.Adrian Cheok and Yue Li. Ubiquitous interaction with positioning and navigation using a novel light sensor-based information transmission system. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 12(6):445‚Äì458, 2008.Adrian David Cheok, KokHwee Goh, Wei Liu, Farzam Farbiz, SiewWan Fong, SzeLee Teo, Yu Li, and Xubo Y ang. Human pacman: A mobile, wide-area entertainment system based on physical, social, and ubiquitous computing. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 8(2):71‚Äì81, 2004.Sunny Consolvo, Larry Arnstein, and Robert B. Franza. User study techniques in the design and evaluation of a ubicomp environment. 6CJ$PNQ6CJRVJUPVT$PNQVUJOH, pp. 281‚Äì290, 2002.Sunny Consolvo, Peter Roessler, and Brett E. Shelton. /T_he CareNet display: Lessons learned from an in home evaluation of an ambient display. 6CJ$PNQ6CJRVJUPVT$PNQVUJOH, pp. 1‚Äì17, 2004.Jo√´lle Coutaz, James L. Crowley, Simon Dobson, and David Garlan. Context is key. $PNNVOJDBUJPOTPGUIF"$. 48(3):49‚Äì53, 2005.
93606_Book.indb   2798/26/09   1:39:35 PM 280  /UIstop  Aaron QuigleyPatrick de la Hamette and Gerhard Tr√∂ster. Architecture and applications of the /f_ingermouse: A smart stereo camera for wearable computing HCI. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 12(2):97‚Äì110, 2008.Paul Dietz and Darren Leigh. Diamondtouch: A multi-user touch technology. In 6*451SPDFFEJOHTPGUIFUI"OOVBM"$.4ZNQPTJVNPO6TFS*OUFSGBDF4P/f_twBSFBOE5FDIOPMPHZ, pp. 219‚Äì226, New Y ork, NY , USA, 2001. ACM Press.Alan Dix, Janet E. Finlay, Gregory D. Abowd, and Russell Beale. )VNBO$PNQVUFS*OUFSBDUJPOSE&EJUJPO. Prentice Hall, Inc., Upper Saddle River, NJ, USA, 2003.Kenneth P . Fishkin. A taxonomy for and analysis of tangible interfaces. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 8(5):347‚Äì358, 2004.Kenneth P . Fishkin, Kurt Partridge, and Saurav Chatterjee. Wireless user inter-face components for personal area networks. *&&&1FSWBTJWF$PNQVUJOH 1(4):49‚Äì55, 2002.D. Fitton, K. Cheverst, C. Kray, A. Dix, M. Rounce/f_ield, and G. Saslis-Lagoudakis. Rapid prototyping and user-centered design of interactive display-based sys-tems. 1FSWBTJWF$PNQVUJOH*&&& 4(4):58‚Äì66, 2005.Erich Gamma, Richard Helm, Ralph Johnson, and John Vlissides. %FTJHO1BUUFSOT. Addison-Wesley Publishing, Reading, MA, 1994.David Garlan, Dan Siewiorek, Asim Smailagic, and Peter Steenkiste. Project aura: Toward distraction-free pervasive computing. *&&&1FSWBTJWF$PNQVUJOH 1(2):22‚Äì31, 2002.Stuart Goose, Sandra Sudarsky, Xiang Zhang, and Nassir Navab. Speech-enabled augmented reality supporting mobile industrial maintenance. *&&&1FSWBTJWF$PNQVUJOH 2(1):65‚Äì70, 2003.Robert Graham and Chris Carter. Comparison of speech input and manual con-trol of in-car devices while on the move. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 4(2):155‚Äì164, 2000.Adam Green/f_ield. &WFSZXBSF/T_hF%BXOJOH"HFPG6CJRVJUPVT$PNQVUJOH. Peachpit Press, Berkeley, CA, USA, 2006.Fran√ßois Guimbreti√©re and Terry Winograd. Flowmenu: Combining command, text, and data entry. In 6*451SPDFFEJOHTPGUIFUI"OOVBM"$.4ZNQPTJVNPO6TFS*OUFSGBDF4P/f_twBSFBOE5FDIOPMPHZ, pp. 213‚Äì216, New Y ork, NY , USA, 2000. ACM Press.Anton Gustafsson and Magnus Gyllensw√§rd. /T_he power-aware cord: Energy awareness through ambient information display. In $)*  $)* &YUFOEFE"CTUSBDUTPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT, pp. 1423‚Äì1426, New Y ork, NY , USA, 2005. ACM Press.David Haddock, Aaron Quigley, and Benoit Gaudin. Sensing handshakes of social network development. In 1SPDFFEJOHTPGUIF"SUJ“áDJBM*OUFMMJHFODFBOE$PHOJUJWF4DJFODFUI*SJTI*OUFSOBUJPOBM$POGFSFODFAICS, 2009.JeÔ¨Äerson Y . Han. Low-cost multi-touch sensing through frustrated total internal re/f_lection. In 6*451SPDFFEJOHTPGUIFUI"OOVBM"$.TZNQPTJVNPO6TFS*OUFSGBDF4P/f_twBSFBOE5FDIOPMPHZ, pp. 115‚Äì118, New Y ork, NY , USA, 2005. ACM Press.
93606_Book.indb   2808/26/09   1:39:35 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  281/T_homas Riisgaard Hansen, Jakob E. Bardram, and Mads Soegaard. Moving out of the lab: Deploying pervasive technologies in a hospital. *&&&1FSWBTJWF$PNQVUJOH 5(3):24‚Äì31, 2006.Jeremy M. Heiner, Scott E. Hudson, and Kenichiro Tanaka. /T_he information per-colator: Ambient information display in a decorative object. In 6*451SPDFFEJOHTPGUIFUI"OOVBM"$.4ZNQPTJVNPO6TFS*OUFSGBDF4P/f_tXBSFBOE5FDIOPMPHZ, pp. 141‚Äì148, New Y ork, NY , USA, 1999. ACM Press.Fabian Hemmert. Life in the pocket: /T_he ambient life project life-like movements in tactile ambient displays in mobile phones. *OUFSOBUJPOBM+PVSOBMPG"NCJFOU$PNQVUJOHBOE*OUFMMJHFODF 1(2):13‚Äì19, 2009.Lars Holmquist, Friedemann Mattern, Bernt Schiele, Petteri Alahuhta, Michael Beigl, and Hans W . Gellersen. Smart-Its friends: A technique for users to eas-ily establish connections between smart artefacts. 6CJDPNQ6CJRVJUPVT$PNQVUJOH, pp. 116‚Äì122, 2001.Xuedong Huang, Fileno Alleva, Hsiao-Wuen Hon, Mei-Yuh Hwang, and Ronald Rosenfeld. /T_he SPHINX-II speech recognition system: An overview. $PNQVUFS4QFFDIBOE-BOHVBHF 7(2):137‚Äì148, 1993.Hiroshi Ishii and Brygg Ullmer. Tangible bits: Towards seamless interfaces between people, bits and atoms. In $)*1SPDFFEJOHTPGUIF4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT, pp. 234‚Äì241, New Y ork, NY , USA, 1997. ACM Press.Anne Jardim. /T_hF'JSTU)FOSZ'PSE"4UVEZJO1FSTPOBMJUZBOE#VTJOFTT Lea d-ership. MIT University Press, Cambridge, MA, 1970Xiaodong Jiang, Nicholas Y . Chen, Jason I. Hong, Kevin Wang, Leila Takayama, and James A. Landay. Siren: Context-aware computing for /f_ire/f_ighting. 1FSWBTJWF$PNQVUJOH, pp. 87‚Äì105, 2004.Matt Jones, Steve Jones, Gareth Bradley, Nigel Warren, David Bainbridge, and GeoÔ¨Ä Holmes. Ontrack: Dynamically adapting music playback to support navigation. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH, 2007.Sergi Jord√†, Martin Kaltenbrunner, G√ºnter Geiger, and Ross Bencina. /T_he reactable*. In 1SPDFFEJOHTPGUIF*OUFSOBUJPOBM$PNQVUFS.VTJD$POGFSFODF	*$.$
, Barcelona, Spain, 2005.Tatsuya Kawahara, Akinobu Lee, Kazuya Takeda, Katsunobu Itou, and Kiyohiro Shikano. Recent progress of open-source LVCSR Engine Julius and Japanese model repository and Japanese model repository‚Äîso/f_tware of continuous speech recognition consortium. In */5&341&&$), pp. 3069‚Äì3072. http://julius.sourceforge.jp/, 2004.James F. Knight, Anthony Schwirtz, Fotis Psomadelis, Chris Baber, Huw W . Bristow, and /T_heodoros N. Arvanitis. /T_he design of the SensVest. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 9(1):6‚Äì19, 2005.Shin‚Äôichi Konomi and George Roussos. Ubiquitous computing in the real world: Lessons learnt from large scale RFID deployments. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 11(7):507‚Äì521, 2007.Matthias Kranz, Dominik Schmidt, Paul Holleis, and Albrecht Schmidt. A display cube as tangible user interface. In "EKVODU1SPDFFEJOHTPGUIF4FWFOUI*OUFSOBUJPOBM$POGFSFODFPO6CJRVJUPVT$PNQVUJOH	%FNP
, September 2005.
93606_Book.indb   2818/26/09   1:39:35 PM 282  /UIstop  Aaron QuigleyJames A. Landay and Gaetano Borriello. Design patterns for ubiquitous comput-ing. $PNQVUFS 36(8):93‚Äì95, 2003.Jennifer MankoÔ¨Ä, Anind K. Dey, Gary Hsieh, Julie Kientz, Scott Lederer, and Morgan Ames. Heuristic evaluation of ambient displays. In $)* 1SPDFFEJOHTPGUIF4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT, pp. 169‚Äì176, New Y ork, NY , USA, 2003. ACM Press.Rene Mayrhofer and Hans Gellersen. Shake Well Before Use: Authentication based on accelerometer data. In 1SPDFFEJOHTPGUI*OUFSOBUJPOBM$POGFSFODFPO 1FSWBTJWF$PNQVUJOH, pp. 144‚Äì161, 2007.Todd Miller and John Stasko. /T_he InfoCanvas: Information conveyance through personalized, expressive art. In $)*$)*&YUFOEFE"CTUSBDUTPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT, pp. 305‚Äì306, New Y ork, NY , USA, 2001. ACM Press.Florian Mueller, Gunnar Stevens, Alex /T_horogood, Shannon O‚ÄôBrien, and Volker Wulf. Sports over a distance. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 11(8):633‚Äì645, 2007.Kouichi Murakami and Hitomi Taguchi. Gesture recognition using recurrent neu-ral networks. In $)*1SPDFFEJOHTPGUIF4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT, pp. 237‚Äì242, New Y ork, NY , USA, 1991. ACM Press.Steve Neely, Graeme Stevenson, and Paddy Nixon. Assessing the suitability of context information for ambient display. In William R. Hazlewood, Lorcan Coyle, and Sunny Consolvo, Eds., 1SPDFFEJOHTPGUIFTU8PSLTIPQPO"NCJFOU*OGPSNBUJPO4ZTUFNT$PMPDBUFEXJUI1FSWBTJWF, Toronto, Canada, volume 254 of CEUR Workshop Proceedings, ISSN 1613‚Äì0073, May 2007.Jakob Nielsen. /T_he Myth of the Genius Designer, http://www.useit.com/alertbox/genius-designers.html, May 2007.Donald A. Norman. /T_hF%FTJHOPG&WFSZEBZ/T_hJOHT. Basic Books, New Y ork, NY , 2002.Eamonn O‚ÄôNeill, Manasawee Kaenampornpan, Vassilis Kostakos, Andrew Warr, and Dawn Woodgate. Can we do without GUIs? Gesture and speech interac-tion with a patient information system. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 10(5):269‚Äì283, 2006.James Patten, Ben Recht, and Hiroshi Ishii. Audiopad: A tag-based interface for musical performance. In /*.&1SPDFFEJOHTPGUIF$POGFSFODFPO/FX*OUFSGBDFTGPS.VTJDBM&YQSFTTJPO, pp. 1‚Äì6, Singapore, Singapore, 2002. National University of Singapore.Vladimir I. Pavlovic, Rajeev Sharma, and /T_homas S. Huang. Visual interpretation of hand gestures for human-computer interaction: A review. *&&&5SBOTBDUJPOTPO1BUUFSO"OBMZTJTBOE.BDIJOF*OUFMMJHFODF 19(7):677‚Äì695, 1997./T_homas Pederson. Magic touch: A simple object location tracking system enabling the development of physical-virtual artefacts in oÔ¨Éce environments. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 5(1):54‚Äì57, 2001.Ivan Poupyrev and Shigeaki Maruyama. Tactile interfaces for small touch screens. In 6*451SPDFFEJOHTPGUIFUI"OOVBM"$.4ZNQPTJVNPO6TFS*OUFSGBDF4P/f_twBSFBOE5FDIOPMPHZ, pp. 217‚Äì220, New Y ork, NY , USA, 2003. ACM Press.
93606_Book.indb   2828/26/09   1:39:35 PM From GUI to UUI: Interfaces for Ubiquitous Computing  /UIstop  283Zachary Pousman and John Stasko. A taxonomy of ambient information systems: Four patterns of design. In "7*1SPDFFEJOHTPGUIF8PSLJOH$POGFSFODFPO"EWBODFE7JTVBM*OUFSGBDFT, pp. 67‚Äì74, New Y ork, NY , USA, 2006. ACM Press.Aaron Quigley, Belinda Ward, Chris Ottrey, Dan Cutting, and Robert Kum-merfeld. Bluestar, a privacy centric location aware system. In 1PTJUJPO-PDBUJPOBOE/BWJHBUJPO4ZNQPTJVN	1-"/
, pp. 684‚Äì689, April 2004.Umer Rashid and Aaron Quigley. Ambient displays in academic settings: Avoiding their underutilization. *OUFSOBUJPOBM +PVSOBM PG "NCJFOU $PNQVUJOH BOE*OUFMMJHFODF 1(2):31‚Äì38, 2009.Leah M. Reeves, Jennifer Lai, James A. Larson, Sharon Oviatt, T. S. Balaji, St√©phanie Buisine, Penny Collings, Phil Cohen, Ben Kraal, Jean-Claude Martin, Michael McTear, T. V . Raman, Kay M. Stanney, Hui Su, and Qian Ying Wang. Guidelines for multimodal user interface design. $PNNVOJDBUJPOTPGUIF"$. 47(1):57‚Äì59, 2004.Jun Rekimoto. Smartskin: An infrastructure for freehand manipulation on inter-active surfaces. In $)*1SPDFFEJOHTPGUIF4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT, pp. 113‚Äì120, New Y ork, NY , USA, 2002. ACM Press.Jun Rekimoto. Synctap: Synchronous user operation for spontaneous network connection. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 8(2):126‚Äì134, 2004.Sokwoo Rhee, Boo-Ho Y ang, Kuowei Chang, and H. H. Asada. /T_he ring sensor: A new ambulatory wearable sensor for twenty-four hour patient monitoring. &OHJOFFSJOHJO.FEJDJOFBOE#JPMPHZ4PDJFUZ1SPDFFEJOHTPGUIFUI"OOVBM*OUFSOBUJPOBM$POGFSFODFPGUIF*&&&, 4:1906‚Äì1909, 1998.Peter Risborg and Aaron Quigley. Nightingale: Reminiscence and technology‚Äîfrom a user perspective. In 0;F8"*  "VTUSBMJBO 8FC "DDFTTJCJMJUZ*OJUJBUJWF. La Trobe University, Victoria, Australia, December 2003.Ronald Rosenfeld, Dan Olsen, and Alex Rudnicky. Universal speech interfaces. *OUFSBDUJPOT 8(6):34‚Äì44, 2001.Christian Sandor and Gudrun Klinker. A rapid prototyping so/f_tware infrastructure for user interfaces in ubiquitous augmented reality. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 9(3):169‚Äì185, 2005.Dan ShaÔ¨Äer. %FTJHOJOHGPS*OUFSBDUJPO$SFBUJOH4NBSU"QQMJDBUJPOTBOE$MFWFS%FWJDFT. Peachpit Press, Berkeley, CA, 2006.Ross Shannon, Eugene Kenny, and Aaron Quigley. Using ambient social remind-ers to stay in touch with friends. *OUFSOBUJPOBM+PVSOBMPG"NCJFOU$PNQVUJOHBOE*OUFMMJHFODF 1(2):70‚Äì78, 2009.John Stasko, Myungcheol Doo, Brian Dorn, and Christopher Plaue. Explorations and experiences with ambient information systems. In William R. Hazlewood, Lorcan Coyle, and Sunny Consolvo, Eds., 1SPDFFEJOHTPGUIFTU8PSLTIPQPO"NCJFOU*OGPSNBUJPO4ZTUFNT$PMPDBUFEXJUI1FSWBTJWF, Toronto, Canada, volume 254 of CEUR Workshop Proceedings ISSN 1613‚Äì0073, May 2007.John Stasko, Todd Miller, Zachary Pousman, Christopher Plaue, and Osman Ullah. Personalized peripheral information awareness through information art. 6CJ$PNQ6CJRVJUPVT$PNQVUJOH, pp. 18‚Äì35, 2004.
93606_Book.indb   2838/26/09   1:39:35 PM 284  /UIstop  Aaron QuigleyAndrea Szymkowiak, Kenny Morrison, Peter Gregor, Prveen Shah, Jonathan J. Evans, and Barbara A. Wilson. A memory aid with remote communication using dis-tributed technology. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 9(1):1‚Äì5, 2005.Lucia Terrenghi, Aaron Quigley, and Alan Dix. A taxonomy for and analysis of coupled displays. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH, 2009.Jenifer Tidwell. %FTJHOJOH *OUFSGBDFT 1BUUFSOT GPS &Ô¨ÄFDUJWF *OUFSBDUJPO %FTJHO. O‚ÄôReilly Media, Inc., November 2005.Brygg Ullmer and Hiroshi Ishii. Emerging frameworks for tangible user interfaces. *#.4ZTUFNT+PVSOBM 39(3‚Äì4):915‚Äì931, 2000.John UnderkoÔ¨Ñer and Hiroshi Ishii. Urp: A luminous-tangible workbench for urban planning and design. In 1SPDFFEJOHTPGUIF4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUFS4ZTUFNT/T_hF$)**TUIF-JNJU, pp. 386‚Äì393, Pittsburgh, V A, May 15‚Äì20, 1999.Koert van Mensvoort. Datafountain: Money translated to water, 2005.Daniel Vogel and Ravin Balakrishnan. Interactive public ambient displays: Transitioning from implicit to explicit, public to personal, interaction with multiple users. In 6*451SPDFFEJOHTPGUIFUI"OOVBM"$.4ZNQPTJVNPO6TFS*OUFSGBDF4P/f_twBSFBOE5FDIOPMPHZ, pp. 137‚Äì146, New Y ork, NY , USA, 2004. ACM Press.Daniel Wagner, /T_homas Pintaric, Florian Ledermann, and Dieter Schmalstieg. Towards massively multi-user augmented reality on handheld devices. In 1SPDFFEJOHTPGUIFSE*OUFSOBUJPOBM$POGFSFODFPO1FSWBTJWF$PNQVUJOH, pp. 208‚Äì219, 2005.Mark Weiser. /T_he computer for the 21st century. 4*(.0#*-&.PCJMF$PNQVUJOHBOE$PNNVOJDBUJPOT3FWJFX 3(3):3‚Äì11, 1999.Michael Philetus Weller, Ellen Yi-Luen Do, and Mark D. Gross. Posey: Instrumenting a poseable hub and strut construction toy. In 5&* 1SPDFFEJOHTPGUIFOE*OUFSOBUJPOBM$POGFSFODFPO5BOHJCMFBOE&NCFEEFE*OUFSBDUJPO, pp. 39‚Äì46, New Y ork, NY , USA, 2008. ACM Press.Pierre Wellner. Interacting with paper on the digitaldesk. $PNNVOJDBUJPOTPGUIF"$. 36(7):87‚Äì96, 1993.David West, Trent Apted, and Aaron Quigley. A context inference and multi-modal approach to mobile information access. In "SUJ“áDJBM*OUFMMJHFODFJO.PCJMF4ZTUFNT	XPSLTIPQPG6CJ$PNQ
, September 2004.David West, Aaron Quigley, and Judy Kay. Memento: A digital physical scrap-book for memory sharing. +PVSOBMPG1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 11(4):313‚Äì328, 2007. Special Issue on Memory and sharing of experiences.Andrew D. Wilson. TouchLight: An imaging touch screen and display for gesture-based interaction. In *$.*1SPDFFEJOHTPGUIFUI*OUFSOBUJPOBM$POGFSFODFPO.VMUJNPEBM*OUFSGBDFT, pp. 69‚Äì76, New Y ork, NY , USA, 2004. ACM Press.Andrew D. Wilson and Aaron F. Bobick. Parametric hidden Markov models for gesture recognition. *&&&5SBOTBDUJPOTPO1BUUFSO"OBMZTJTBOE.BDIJOF*OUFMMJHFODF 21(9):884‚Äì900, 1999.Steve J. Y oung, Gunnar Evermann, /T_homas Hain, Dan Kershaw, Gareth L. Moore, Julian J. Odell, Dave Ollason, Dan Povey, Valtcho Valtchev, and Phil C. Woodland. /T_hF)5,#PPL	7FSTJPO
. HTK, 2002.
93606_Book.indb   2848/26/09   1:39:35 PM 7CHAPTER Location in Ubiquitous ComputingAlexander Varshavsky and Shwetak PatelCONTENTS7.1 Introduction 2867.2 Characterizing Location Technologies 2887.2.1 Location Representation 2887.2.2 Infrastructure and Client-Based Location Systems 2897.2.3 Approaches to Determining Location 2907.2.3.1 Proximity 2917.2.3.2 Trilateration 2917.2.3.3 Hyperbolic Lateration 2947.2.3.4 Triangulation 2957.2.3.5 Fingerprinting 2957.2.3.6 Dead Reckoning 2977.2.4 Error Reporting 2987.2.4.1 Sources of Errors 2987.2.4.2 Reporting Error 2997.3 Location Systems 3007.3.1 Global Positioning System 3027.3.2 Active Badge 3047.3.3 Active Bat 3057.3.4 Cricket 3067.3.5 UbiSense 3077.3.6 RADAR 308
93606_Book.indb   2858/26/09   1:39:35 PM 286  /UIstop  Alexander Varshavsky and Shwetak Patel
7.1  INTRODUCTION/T_his chapter discusses the fundamentals of location technologies and gives an overview of both historical and current location systems. Location tech-nologies have been an important part of ubiquitous computing (ubicomp) and have been an active topic of research for the past decade (LaMarca and de Lara, 2008). /T_he ability to determine a user‚Äôs location enables a variety of ubicomp applications that provide services and functionality appropriate to the speci/f_ic location and context. In other words, location-aware applications use the location of the target to add value to the services they provide. For example, some of the earlier location-aware applications were routing phone calls to the phone closest to the user‚Äôs current location (Want et al., 1992), sending printouts to the nearest printer, and displaying /f_iles and programs speci/f_ic to the user‚Äôs location (Schilit et al., 1999). Since the early days, location-aware applications have grown in sophistication and utility, and people rely more and more on these applications. Today, people use location-aware applications in almost any life domain, includ-ing entertainment, navigation, asset tracking, health care monitoring, and emergency response. /T_he number of location-aware applications is still growing fast, with the annual market for global positioning system (GPS) and navigation services and products alone projected to grow to U.S.$200 billion by 2015 (Rizos et al., 2005).Location is one of the most important components of user context (Schilit et al., 1999). In addition to being useful in its own right, location information can also be used to infer additional pieces of context, such as user activity, mode of transportation, and social relationship. For example, spending time at a gym is indicative of exercising, changing location at a speed of 65 miles per hour is indicative of driving, and driving someone every morning to and from work is indicative of a close relationship. We refer the reader to Chapter 8 for an in-depth discussion on the use of con-textual information in ubicomp.7.3.7 Place Lab 3107.3.8 PowerLine Positioning 3117.3.9 ActiveFloor 3127.3.10 Airbus 3147.3.11 Tracking with Cameras 3157.4 Conclusions and Challenges 316References 317
93606_Book.indb   2868/26/09   1:39:36 PM Location in Ubiquitous Computing  /UIstop  287Location information can be conveyed in absolute, relative, or symbolic form. An absolute location describes an exact position, such as an address or geographic coordinates. For example, AT&T Labs is located at 180 Park Avenue, Florham Park, NJ. A relative location describes a position of an object relative to another absolute location. For instance, Dunn Gardens are located approximately 10 miles north of downtown Seattle, WA. A symbolic location is a descriptive name of a place, such as ‚Äúhome,‚Äù ‚Äúwork,‚Äù or ‚Äúbedroom.‚ÄùDespite the importance of location information, there is no single loca-tion technology that is accurate, low-cost, easy to deploy, and ubiquitous. Instead, there is a collection of location technologies each of which is best suited for a particular situation and need, ranging from accuracy of 1 millimeter using magnetic /f_ields (Ascension Technology) to tens of kilo-meters using FM radio signals (Krumm et al., 2003). Since location tech-nologies generally trade oÔ¨Ä accuracy for coverage and cost, one should choose the location system that satis/f_ies the accuracy requirement of the particular location-aware application of interest. For example, printing a document on the nearest printer will, in most cases, work as well with 1 meter accuracy as it will with 1 millimeter accuracy. /T_his chapter covers a variety of location systems with diÔ¨Äerent accuracy, coverage, and cost trade-oÔ¨Äs. In addition, most location-aware applications make an implicit assumption that location of a device, such as a mobile phone, is a good proxy for the location of the human using the device. Although, in prac-tice, it is not always the case (Patel et al., 2006a), for the ease of presenta-tion, this chapter refers to the location of the device and the location of the user using the device interchangeably./T_he outline of the rest of the chapter is as follows. Section 7.2 discusses various aspects of location technologies, including ways to specify loca-tion, diÔ¨Äerences between client-based and network-based location sys-tems, common approaches for determining location, and ways to describe location error. Section 7.3 gives an overview of both historical and current location systems, while helping distill why certain design decisions where made for each system. Section 7.4 concludes the chapter and lists some of the remaining challenges in the /f_ield of location tracking.Note that this chapter does not cover the important topics of loca-tion modeling, issues related to location privacy, and more advanced stochastic methods for inferring location. See Chapter 3 for a discussion on privacy and Chapter 9 for a description of how to process sequential sensor data.
93606_Book.indb   2878/26/09   1:39:36 PM 288  /UIstop  Alexander Varshavsky and Shwetak Patel7. 2  CHARACTERIZING LOCATION TECHNOLOGIESLocation technology is a combination of methods and techniques for determining a physical location of an object or a person in the real world. /T_his section describes various aspects of location technologies. /T_he section starts with discussing ways to represent absolute, relative, and symbolic locations. Next, Section 7.2.2 describes the diÔ¨Äerences between client-based, network-based, and network-assisted location systems. Section 7.2.3 surveys popular technologies for location determination. Finally, Section 7.2.4 discusses common sources of location error and ways to report the accuracy of a location system.7. 2.1  Location RepresentationLocation is a position in a physical space and it can be represented in abso-lute, relative, or symbolic form. /T_he most common means of specifying a precise absolute location is using the points‚Äô degrees of latitude and lon-gitude on the surface of the Earth, as de/f_ined by the geographic coordi-nate system. If Earth were a perfect ellipsoid, the latitude would measure the angle between the point and the equatorial plane from the center of Earth. In reality, however, the latitude, or the geodetic latitude, measures the angle between the equator and a line that is normal to the reference ellipsoid, which approximates the shape of Earth. /T_he longitude measures the angle along the Equator to the point. A line that passes near the Royal Observatory, Greenwich, England, is accepted as the zero-longitude point and it is called the Prime Meridian. Lines of constant latitude are called parallels and lines of constant longitude are called meridians. Meridians, unlike parallels, are not parallel and all intersect at the North and South Poles. /T_his form of representation is o/f_ten used in outdoor location sys-tems such as GPS. See Figure 7.1 for an example.One can specify any location on the surface of the Earth using latitude and longitude. For example, Seattle, WA, has a latitude of 47.60pN and a longitude of 122.33pW. /T_hus, a vector from the center of the Earth to a point 47.60p north of equator and 122.33p west of Greenwich, England, will pass through Seattle. By adding a vertical distance from the center of the Earth or, more commonly, from the mean sea level at a given point, it is possible to specify any location below or above the surface of the Earth.Although geographic coordinates are useful for specifying a precise absolute location, they are not convenient to use in the types of applica-tions that involve reasoning with location information by humans. One 
93606_Book.indb   2888/26/09   1:39:36 PM Location in Ubiquitous Computing  /UIstop  289
can rarely overhear a person saying: ‚ÄúI am at 40.7755 North, 74.4135 West. Do you want to grab a coÔ¨Äee at 40.789 North, 74.393 West in half an hour?‚Äù As an alternative, it is typical to use an address to specify a location (e.g., 40 St. George Street), a symbolic name of a place that is familiar to both parties (e.g., the mall) or a relative coordinate (e.g., 100 meters north of Main and Ridgedale). A geocoder, such as Microso/f_t‚Äôs Virtual Earth or AT&T‚Äôs Yellow Pages, can be used to translate an address or a zip code into a geographic coordinate. Translating a geographic coordinate into an address or a zip code can be performed using a reverse geocoder.Describing location within an indoor space is similarly challenging. A system may represent a location using a local coordinate system within the building by specifying an 9 and Y distance from a /f_ixed corner of the building. For a multistory building, an anchor point could be speci/f_ied for each /f_loor. Although these representations are useful at a system level, they are usually also mapped to higher-level relative or symbolic repre-sentations, such as ‚Äúliving room,‚Äù ‚Äúbedroom,‚Äù ‚ÄúJoe‚Äôs oÔ¨Éce,‚Äù or ‚Äúnext to the coÔ¨Äee pot.‚Äù7. 2. 2  Infrastructure and Client-Based Location Systems/T_his section describes the diÔ¨Äerences between three classes of location sys-tems: client-based, network-based, and network-assisted. In a client-based LongitudeEquatorLatitudeLine at right angleto ellipsoidPrimemeridian
aEllipsoidbN
FIGURE 7.1 An example of a latitude and longitude angles to a point on Earth. (Accessed from http://home.online.no/~sigurdhu/artimages/Lat-Long.gif)
93606_Book.indb   2898/26/09   1:39:36 PM 290  /UIstop  Alexander Varshavsky and Shwetak Patellocation system, a device computes its own location without relying on the network infrastructure. An example of a client-based location system is GPS, in which a device equipped with a GPS chip calculates its own loca-tion using signals received from at least four GPS satellites.In a network-based location system, the network infrastructure cal-culates the position of a device. An example of a network-based location system is the Active Badge system (Want et al., 1992), in which a badge carried by the user emits infrared (IR) signals captured by the IR receivers in the ceiling. /T_he receivers, in turn, transmit signal data to a networked processor that computes the badge‚Äôs location.In a network-assisted location system, both the device and the infra-structure participate in computing the location of the device. An exam-ple of a network-assisted location system is the Assisted GPS, in which a device calculates its own location based on its GPS measurements and additional information about the GPS constellation received over the cel-lular link from the cellular network infrastructure. /T_he additional infor-mation allows the device to calculate its location even if fewer than four satellites are in view and it reduces the time from turning on of the device to the initial location acquisition./T_he main advantage of a client-based location system is that it preserves the location privacy of the device. Since the mobile device simply listens to the beacons from the infrastructure without transmitting data, the infra-structure has no way of determining the location of the device, unless the device is willing to share the data. On the other hand, calculating the location on a device may reduce its battery life and it adds requirements on the device‚Äôs processing and storage capabilities. Note that the network infrastructure may learn the device‚Äôs location when the device requires additional information or services based on its location. For example, requesting maps or nearby restaurants requires the device to disclose its location with a certain degree of accuracy. For more information about preserving a user‚Äôs privacy, see Chapter 3.7. 2. 3  Approaches to Determining Location/T_his section describes six fundamental techniques for determining the location of a device: proximity, trilateration, hyperbolic lateration, trian-gulation, /f_ingerprinting, and dead reckoning. Some of these techniques assume a presence of one or more reference points, whose precise location is known in advance. Examples of a reference point include a GPS satellite, a WiFi access point (AP), or a cellular tower.
93606_Book.indb   2908/26/09   1:39:37 PM Location in Ubiquitous Computing  /UIstop  2917.2.3.1  ProximityProximity sensing is the simplest location technique. It uses the closeness of a device to a reference point to estimate the location of the device. /T_he device‚Äôs location is typically estimated to be the location of the reference point. Either the device or the reference point can sense the proximity. Note that detecting a device in close proximity does not necessarily reveal the identity of the device. /T_herefore, a separate identity detection mecha-nism may be necessary for recognizing the identity of the device.Proximity can be detected through either direct physical contact or detection of the device being in range of one or more reference points. For example, stepping on a pressure sensor reveals the presence of an indi-vidual on the sensor and communicating with a WiFi AP indicates that the device is near the AP. In the latter case, proximity sensing relies on a limited range of coverage of the underlying wireless communication tech-nology. For instance, the range of a near-/f_ield communication device is a few centimeters, the range of a Bluetooth device is tens of meters, the range of a WiFi device is hundreds of meters and a cellular phone may receive signals kilometers away. If the device happens to be in a range of several reference points, it is possible to compute a more accurate location estimate. For instance, it is possible to estimate the location of the device as an average of reference point positions. If the strength of the signal with which the reference points can overhear the device is available, a more precise location can be obtained using the weighted average of the refer-ence point positions. A more advanced technique that uses the actual dis-tances between a device and reference points is called trilateration, which is discussed in the next section.7.2.3.2  TrilaterationTrilateration is a location technique that computes the position of a device by measuring the distance between the device and a number of reference points at known locations. /T_he number of reference points required for computing the location is one greater than the number of the physical space dimensions. For example, calculating the device‚Äôs location in two dimensions (2-D) requires three noncoplanar reference points, whereas calculating the device‚Äôs location in 3-D requires four reference points.Figure 7.2 shows an example of trilateration in 2-D. Each black dot rep-resents a reference point and it de/f_ines a center of a circle with the radius equal to the estimated distance to the device. /T_hus, estimating the distance to a single reference point yields an in/f_inite number of possible locations 
93606_Book.indb   2918/26/09   1:39:37 PM 292  /UIstop  Alexander Varshavsky and Shwetak Patel
of the device on the perimeter of the circle; estimating the distances to two reference points yields two possible locations of the device at the intersec-tions of the two circles; and estimating the distances to three reference points uniquely de/f_ines the device‚Äôs location.To estimate the distance between a device and a reference point, it is common to either measure the time-of-/f_light of the signal or to measure the attenuation of the strength of the signal at the receiver. /T_he next two sections cover these distance estimation techniques.7. 2 . 3. 2 .1 Time of Flight Estimating the time-of-/f_light of a signal between a device and a reference point is possible because the speed of sound and the speed of light are known quantities (344 meters per second in 21pC air for sound and 299,792,458 meters per second for light). /T_herefore, by mea-suring the time it takes for the signal to travel the distance between the device and the reference point and multiplying it by the speed of travel, it is possible to estimate the traveled distance. For instance, if an ultrasonic pulse sent from a device to a reference point reached its destination in 
D
FIGURE 7.2 Example of trilateration in 2-D. /T_he black dots represent refer-ence points. /T_he gray dot represents the location of the device.
93606_Book.indb   2928/26/09   1:39:38 PM Location in Ubiquitous Computing  /UIstop  29329 milliseconds, the distance between the two is 10 meters. A radio or light signal would cover the same distance in 33.4 nanoseconds.Measuring the time-of-/f_light requires precise clock synchronization between the device and the reference point. /T_his is especially true when estimating the time-of-/f_light of a radio or light signal because small skews in the clocks will result in large measurement errors. To avoid the clock synchronization problem, instead of measuring the time-of-/f_light between two devices, some systems measure the round-trip delay and divide it by 2. /T_his eliminates the need to synchronize clocks on two devices because the same device both transmits and receives the signal./T_he time-of-/f_light can be measured either by the device or the network infrastructure. In the former, each reference point transmits a signal that is being received and decoded by the device. In the latter, the device sends a signal that is being received by all reference points. In both cases, the reference points need to have synchronized clocks for the precise time-of-/f_light calculation.7. 2 . 3. 2 . 2 Signal Strength Attenuation Another approach to estimate the distance between a device and a reference point is based on the ability to estimate the decrease in the strength of a signal as it travels away from its source. /T_he formula that estimates the strength of the signal at a certain distance from the source is called the signal attenuation model.A signal attenuation model depends on a multitude of factors, includ-ing the distance from the source, terrain contours, physical environment, propagation medium, and the height of the antennas at the source and the destination. For instance, the signal attenuation model for free space far-/f_ield radio frequency (RF) states that the strength of a radio signal decreases by a factor of 1/S2, where S is the distance from the radio source. For near-/f_ield inductively coupled communication, the attenuation of the signal could decrease by a factor of as high as 1/S6. /T_hus, given the correct signal attenuation model and the strengths of the signal at the source and at the destination, it is possible to estimate the distance between the source and the destination.Unfortunately, in more complex physical environments, such as an indoor oÔ¨Éce space, radio attenuation models have trouble estimating the distance accurately due to complex interactions of the signal with objects in the physical space. As the signal travels, it may be re/f_lected, refracted, or diÔ¨Äracted, which may cause the signal to change direction, reach areas that would not be possible to reach if the radio signals traveled in a direct 
93606_Book.indb   2938/26/09   1:39:38 PM 294  /UIstop  Alexander Varshavsky and Shwetak Patelline, or arrive at the destination by two or more paths. /T_hese complex interactions present a formidable challenge for creating accurate signal attenuation models.7.2.3.3  Hyperbolic LaterationHyperbolic lateration uses the diÔ¨Äerence between the signal arrival times from a device to three or more reference points, instead of using the sig-nal travel time itself. /T_he hyperbolic lateration technique is also applicable when a device receives signals that were simultaneously transmitted by three or more reference points. For the ease of presentation, this section explains hyperbolic lateration in 2-D./T_he signal transmitted from a device will be received at diÔ¨Äerent times by reference points located at diÔ¨Äerent distances from the device. /T_he dif-ference between the signal arrival times at two reference points restricts the possible location of the device to be along a hyperbolic line, with the two reference points serving as the foci of the hyperbola. In other words, transmitting a signal while being located at any point on the hyperbola will result in the same time diÔ¨Äerence of arrival of the signal to the two reference points. Adding a third reference point gives two more pairs of TDOA and therefore two more hyperbolas. Intersection of any two of the hyperbolas de/f_ines the unique possible location of the device. Figure 7.3 shows an example of hyperbolic lateration in two dimensions. /T_he inter-section of the two hyperbolas uniquely de/f_ines the location of a device.
D
FIGURE 7.3 An example of hyperbolic lateration in 2-D. /T_he black dots rep-resent reference points. /T_he gray dot represents the location of the device.
93606_Book.indb   2948/26/09   1:39:38 PM Location in Ubiquitous Computing  /UIstop  295
7.2.3.4  TriangulationTriangulation uses the angle of arrival (AOA) of signals traveling from a device to reference points to estimate the device‚Äôs location. See Figure 7.4 for an example of triangulation in 2-D. Measuring the angle at which the signal arrives from the device (represented as the gray dot) to a reference point (represented as a black dot) restricts the position of the device along the line that passes through the reference point along the AOA. Measuring angles from two reference points results in two lines that uniquely de/f_ine the device‚Äôs location at the point of intersection. /T_hus, it is enough to have angle measurements from only two reference points to determine the loca-tion of the device in two dimensions; in practice, however, more than two reference points are used to reduce angle measurement errors.To estimate the AOA of a signal, either a directional antenna or an antenna array is needed. Since neither is typically available on a mobile device, most existing location systems based on triangulation choose to measure the AOA at the reference points.7.2.3.5  FingerprintingFingerprinting is a location technology that uses pattern matching tech-niques to estimate the location of a device. For the ease of presentation, this section describes RF /f_ingerprinting; however, the techniques pre-sented in this section are applicable to other signal sources as well, such as sound and colored light.RF /f_ingerprinting relies on two properties of radio signals: temporal stability and spatial variability. Temporal stability refers to the stability 

FIGURE 7.4 An example of triangulation in 2-D. /T_he black dots represent reference points. /T_he gray dot represents the location of the device.
93606_Book.indb   2958/26/09   1:39:39 PM 296  /UIstop  Alexander Varshavsky and Shwetak Patelof a radio signal from a radio source at any given location over time. For example, the strength of the signal from a nearby cellular tower at one‚Äôs oÔ¨Éce is likely to be similar tomorrow and next week. Spatial vari-ability refers to the variability of the radio signal from the same radio source at two diÔ¨Äerent locations. For instance, the strength of the signal from a nearby cellular tower is diÔ¨Äerent at the oÔ¨Éce and at the cafeteria. Fingerprinting location systems take advantage of these two properties by capturing radio pro/f_iles at various physical locations and using them for location determination at a later time./T_he accuracy of a /f_ingerprinting system is closely tied to the degree of spatial variability of the signal. For example, signal strength from WiFi APs exhibits spatial variability at the 1 to 10 meter level, or, in other words, a given WiFi AP may be heard stronger or not at all a few meters away. /T_his allows for WiFi-based /f_ingerprinting systems with about 1 meter of spatial error.Fingerprinting relies on a training phase to build a radio map of the tar-get environment before it can be used for location determination. During the training phase, a device moves through the environment, taking mea-surements of the strength of signals emanating from a group of radio sources (e.g., WiFi APs). An example of a radio measurement is shown in Table 7.1. /T_he table shows a list of WiFi APs and the signal strengths as received from each of the APs.At the end of the training process, the /f_ingerprinting system has a radio pro/f_ile for a multitude of locations in the target physical space. Since /f_in-gerprinting does not model radio propagation, a fairly dense grid of radio measurements needs to be collected to achieve good accuracy. /T_he origi-nal /f_ingerprinting system (Bahl and Padmanabhan, 2000), for example, collected measurements of WiFi signal strengths about 1 m apart.Once the training phase is complete, a device can estimate its location by collecting a measurement and feeding it to the /f_ingerprinting system, which may reside either on the device itself or in the network infrastruc-ture. /T_he /f_ingerprinting system estimates the location of the device based TABLE 7.1 An Example of a Measurement /T_hat Includes Names, MAC Addresses, and Received Signal Strength Indicator Values of /T_hree WiFi Access Points44*%	/BNF
 #44*%	."$"EESFTT
 4JHOBM4USFOHUI	344*
linksys00:0F:66:2A:61:0018starbucks 00:0F:C8:00:15:1315newark wi/f_i 00:06:25:98:7A:0C23
93606_Book.indb   2968/26/09   1:39:39 PM Location in Ubiquitous Computing  /UIstop  297on the similarity between the current measurement and the measure-ments recorded during the training phase./T_he similarity between measurements can be computed in a variety of ways, but it is common to use the Euclidean distance in signal space. For example, if one WiFi measurement contains signal strengths for / APs (41,‚Ä¶,4O) and another measurement contains signal strengths for the same / sources (31,‚Ä¶,3O), then the Euclidean distance between the two /f_inger-prints will be calculated as: &434343//()()()1122222$If an AP is not present in one of the measurements, it is common to sub-stitute its signal strength with either the minimal signal strength found in this measurement or with a /f_ixed predetermined value./T_here are several variations of the /f_ingerprinting algorithm. A /f_in-gerprinting system based, for example, on the nearest neighbor (NN) algorithm estimates the location of a device to be the location of the mea-surement in the training radio pro/f_ile with the smallest Euclidean distance to the current measurement. A ,-NN algorithm produces an estimate of the device‚Äôs location by averaging the locations of the , measurements in the training pro/f_ile with the smallest Euclidean distance to the current measurement. /T_he ideal , value can be determined through experimenta-tion in a representative environment, but a small value of 3 or 4 was shown to work well in practice (Cheng et al., 2005).7.2.3.6  Dead ReckoningDead reckoning is a location technique that computes the location of a device based on its previously known location, or /f_ix, elapsed time, direc-tion, and average speed of movement. /T_he assumption behind dead reck-oning is that the direction and the average speed of movement since the last /f_ix is either known or can be estimated. Figure 7.5 illustrates the prin-ciple behind dead reckoning. /T_he black dot represents the last known loca-tion of the device. Knowing the last /f_ix, the direction, and the average speed, it is possible to estimate the new location of the device at the loca-tion of the gray dot.Since dead reckoning calculates the SFMBUJWF position since the last /f_ix, it is being used in combination with another location technology capable of calculating the absolute location of the device. Dead reckon-ing is thus o/f_ten used to re/f_ine the estimates of another location system 
93606_Book.indb   2978/26/09   1:39:40 PM 298  /UIstop  Alexander Varshavsky and Shwetak Patel
or to calculate the estimates when the other location system becomes temporary unavailable (e.g., when a car enters a tunnel and loses signals from GPS satellites)./T_he accuracy of dead reckoning depends on the quality of estimation of the speed and direction of movement. /T_hese can be estimated either through extrapolation from two or more previous /f_ixes or measured by the sensors on the device itself. Some of the sensors that are o/f_ten used for dead reckoning are accelerometers, which can be used to measure the acceleration of the device; odometers, which can be used to measure the distance traveled by a car; and gyroscopes, which can be used to measure the direction of movement.7. 2.4  Error Reporting/T_he goal of a location system is to produce accurate location estimates. Unfortunately, in practice, location systems o/f_ten produce inaccurate esti-mates due to a variety of reasons. /T_his section surveys some of the com-mon reasons for errors in location systems and describes the common procedure for reporting location errors.7.2.4.1  Sources of ErrorsLocation systems are designed to produce accurate location estimates given that the measurements that the location system uses are accurate as well. Unfortunately, there are several factors that introduce errors into location systems.


	New location
Last Ô¨ÅxFIGURE 7.5 An example of dead reckoning in 2-D. /T_he black dot repre-sents the position of the last /f_ix. /T_he gray dot represents the estimated location of the device.
93606_Book.indb   2988/26/09   1:39:40 PM Location in Ubiquitous Computing  /UIstop  299*ODPSSFDUSFGFSFODFQPJOUDPPSEJOBUFT. Location systems that require the precise location of reference points produce location errors when the given locations are incorrect. /T_his problem can be mitigated or eliminated for stationary reference points by carefully mapping the location of the refer-ence points. However, for reference points that are mobile (e.g., GPS satel-lites) this may be a diÔ¨Écult problem due to unexpected factors (e.g., solar winds) that may alter a reference point‚Äôs location.*POPTQIFSJDBOEUSPQPTQIFSJDEFMBZ. Signals traveling through the iono-sphere and troposphere experience delays due to interactions with the Earth‚Äôs atmosphere. Although there are mathematical models that try to estimate the delay, it stills accounts for the major part of error in GPS-based positioning.$MPDLTZODISPOJ[BUJPO. Precise time measurement requires tight clock synchronization between the sender and the receiver of the signal, or between devices that transmit signals simultaneously. Existing synchro-nization algorithms reduce the eÔ¨Äect of clock skews, but do not eliminate them completely. Clock skews are a common error source for all location systems that use time measurements for location determination..VMUJQBUI. A signal traveling through space may arrive at the destina-tion along several paths due to interactions with obstacles along the way. Copies of the signal may overlay at the receiver, causing distortions of the amplitude and phase of the signal. Having no line of sight between the sender and the receiver exacerbates the multipath problem, making mea-surement errors more severe.(FPNFUSZ. /T_he con/f_iguration geometry of the reference points has an eÔ¨Äect on accuracy. Positioning the reference points too close to each other or on a line typically results in large location errors.7.2.4.2  Reporting Error/T_he quality of location estimates produced by a location system varies depending on many factors, including the physical location, the time of day, the current weather, and the environment. /T_herefore, to fully under-stand the quality of a location system, it is necessary to collect a large number of location estimates under various conditions. /T_he procedure for reporting location errors depends on whether the location system pro-duces symbolic or absolute locations.Location systems estimating symbolic locations, such as home or work, produce estimates that are either correct or not. In this case, the most common means of expressing the accuracy of a location system is to pres-ent it as a percentage. For instance, a location system may determine the 
93606_Book.indb   2998/26/09   1:39:40 PM 300  /UIstop  Alexander Varshavsky and Shwetak Patelroom in a building correctly 85% of the time. Repeating the experiment several times allows for the calculation of con/f_idence intervals of the accu-racy of the location system.For location systems estimating absolute locations, such as geographic coordinates, it is typical to show a cumulative distribution function of the location error. In this case, a location error is de/f_ined as the distance between the true and the estimated locations. It is also common to specify the 50th and the 95th percentile of the location error, both of which can be derived from the cumulative distribution function. If the location system performs diÔ¨Äerently along horizontal and vertical dimensions, then it is common to specify the location error separately for each dimension.7. 3  LOCATION SYSTEMS/T_he /f_irst part of this chapter discussed techniques and general concepts for building location systems. /T_he remainder of this chapter discusses speci/f_ic commercial and research location systems that use these principles and techniques. In addition, this chapter also attempts to highlight important characteristic that should be considered when applying a particular tech-nology to an application.Localization has been a very active research problem in the ubiquitous computing community in the preceding decade. Several characteristics distinguish the diÔ¨Äerent solutions, such as the underlying signaling tech-nology (e.g., IR, RF, load sensing, computer vision, or audition), line-of-sight requirements, accuracy, and cost of scaling the solution over space and over the number of objects. /T_his section provides an overview of some of the historically important and current location systems and highlights the diÔ¨Äerent characteristics of each system. /T_he intent of this section is not to present an entire survey of location systems, but to highlight important historic and current systems that have addressed the general problem of location tracking in variety of ways.It is important to note that there is no one perfect location system. Each system must be evaluated based on the intended application across a vari-ety of dimensions such as its accuracy, the infrastructure requirements, the ability to scale, etc. Table 7.2 summarizes location systems covered in this section and dimensions that one should consider when evaluating, building, and using a location system. An important consideration is the performance or accuracy of the system and its resolution (e.g., low reso-lution for weather forecasts and high resolution for indoor navigation). At the same time, one must consider the infrastructure requirements to 
93606_Book.indb   3008/26/09   1:39:41 PM Location in Ubiquitous Computing  /UIstop  301TABLE 7. 2 Location Tracking Technologies across a Collection of Factors Used to Evaluate a Particular Location System-PDBUJPO5ZQF3FTPMVUJPO"DDVSBDZ*OGSBTUSVDUVSF3FRVJSFNFOUT-PDBUJPO%BUB4UPSBHF4QFDUSBM3FRVJSFNFOUT-PDBUJPO4ZTUFN5ZQFActive Badge SymbolicIndoorRoom level IR Sensors and customs tagCentral IRCustom active taggingActiveBat AbsoluteIndoor3 cm, 90% Ultrasonic (US) receivers and transmittersCentral 30 kHz ultrasound  and 900 MHz RFCustom active taggingActiveFloor SymbolicIndoor1 m, 91% Custom /f_loor tiles Central Load sensorPassiveAirbus SymbolicIndoorRoom level, 88% Single sensor in HV AC Central Pressure sensorPassiveCricket AbsoluteIndoor3 cm, 90% US receivers and transmittersLocal30 kHz ultrasound and 900 MHz RFCustom active taggingGPSAbsoluteOutdoor10 m, 50% GPS receiverLocal1500 MHz RFCustom active taggingPlaceLab (GSM) SymbolicIndoor/Outdoor20 m, 90%5 m, 50%Existing GSM towersLocal900‚Äì2000 MHz RF Active taggingLaceLab (WiFi) SymbolicIndoor/Outdoor20 m, 50% Existing WiFi APsLocal2.4 GHz RFActive taggingPowerLine PositioningSymbolicIndoor2 m, 93%0.75 m, 50%2 plug-in module and custom tagLocal or central300‚Äì1600 kHz RF Custom active taggingRADAR SymbolicIndoor6 m, 90%2‚Äì3 m, 50%3‚Äì5 WiFi APsLocal2.4 GHz RFActive taggingUbisense AbsoluteIndoor/Outdoor15 cm, 90% Custom sensors and tags Central 2.5 GHz and 6‚Äì8 Ghz wideband RFCustom active taggingVisionAbsoluteIndoor/Outdoor1 m, 50‚Äì80% (varies by camera density)Multiple cameras CentralRF for wireless camerasPassiveNote that the accuracy is reported as a percentile.
93606_Book.indb   3018/26/09   1:39:41 PM 302  /UIstop  Alexander Varshavsky and Shwetak Patelevaluate the ease of deployment, cost and installation, and maintenance burden. For example, targeting location systems for the home presents several challenges. One major challenge is cost. In a commercial setting, more resources are typically available for disposal, and thus a company can justify the investment based on added productivity and reduction of other costs. On the other hand, the average homeowner would have dif-/f_iculty justifying a high cost. Also, consider a researcher wanting to install location systems in various homes for a study. /T_he cost of simultaneously deploying a system in multiple homes is much greater than a single, larger commercial building, such as an oÔ¨Éce building or a hospital, because parts of the infrastructure have to be replicated for each home being stud-ied. Other important considerations are the spectral requirements of the location system. For example, certain parts of a hospital have very strict regulations on RF emission. /T_hus, in these environments, one may choose an IR-based solution. Another important consideration may be whether it is practical to have an individual carry a location tag. Finally, certain applications may require the protection of one‚Äôs privacy, thus requiring a location system that computes its location locally as opposed to at a cen-tral server.7. 3.1  Global Positioning SystemCurrently, GPS is the most popular outdoor location tracking system worldwide. GPS /f_irst originated for military applications, but today, GPS-based solutions permeate throughout many civilian and consumer appli-cations, such as in-car navigation systems, marine navigation, and /f_leet management services. Civilian GPS has a median accuracy of 10 meters outdoor, but areas with substantial occlusions, such as tall buildings and large mountains can reduce the accuracy of the system. GPS typically does not work well in most indoor settings, because of constant occlusions from the GPS satellites.GPS consists of receivers that passively receive signals being transmitted from a subset of at least 24 geosynchronous satellites orbiting the Earth. Each GPS satellite transmits data that contains its location and the current time. Although the signals transmitted by the satellites are synchronized, they arrive at the receiver at diÔ¨Äerent times due to the diÔ¨Äerence in dis-tance between the satellites and the receiver. /T_hus, the distance to the GPS satellites can be determined by estimating the amount of time it takes for their signals to reach the receiver. At least four GPS satellites are needed to calculate the position of the receiver.
93606_Book.indb   3028/26/09   1:39:41 PM Location in Ubiquitous Computing  /UIstop  303/T_hese GPS satellites transmit data over various radio frequencies, desig-nated as L1, L2, etc. Civilian GPS uses the L1 frequency of 1575.42 MHz in the ultrahigh frequency band. /T_his signal consists of three diÔ¨Äerent pieces of information‚Äîa pseudorandom ID code, ephemeris data, and almanac data. /T_he pseudorandom code is a simple ID code that identi/f_ies which sat-ellite is transmitting information. /T_he ephemeris data indicates to the GPS receiver where each GPS satellite should be located (orbital data) at a given time in the day. Finally, the almanac data contains information about the status of the satellite (healthy or unhealthy), current date, and time.Unlike the GPS satellites, GPS receivers do not have atomic clocks and are not synchronized with the GPS satellites. /T_herefore, a GPS receiver calculates the time diÔ¨Äerence of arrival (TDOA) using the timing slack required to synchronize the GPS receiver‚Äôs generation of a pseudorandom ID code with those being transmitted by the satellite to determine the sig-nals‚Äô travel time. To determine its location, the receiver applies hyperbolic lateration in 3-D using the estimated TDOA values. In addition, a fourth satellite is required to correct any synchronization errors.A GPS receiver also takes into account a variety of correction factors that may impact the signal delay. Here are some factors the can degrade the quality of the GPS signal originating from the satellites:Multipath‚Äîoccurs when the GPS signal is re/f_lected oÔ¨Ä tall build-tings, thus increasing the time-of-/f_light of the signal.Too few satellites visible‚Äîoccurs when there are major obstructions t(e.g., GPS does not work well indoors or underground).Atmospheric delays‚Äîsignals can slow as they pass through the tatmosphere./T_here are several ways to minimize some of these errors. One way is to predict and model the atmospheric delays and apply a constant correction factor to the received signal. /T_he other strategy is to increase the number of channels in the receiver to allow for more satellite signals to be seen. A recent system, called diÔ¨Äerential GPS, uses a collection of terrestrial beacons to emit correction codes (using long wave radio between 285 and 325 kHz) in multipath-prone areas. /T_he accuracy of diÔ¨Äerential GPS has been shown to be 1.8 meters at least 95% of the time (LaMarca and de Lara, 2008). Another approach called Real-Time Kinematic GPS uses phase measurements from existing GPS signals to provide receivers with real-time corrections.
93606_Book.indb   3038/26/09   1:39:41 PM 304  /UIstop  Alexander Varshavsky and Shwetak Patel
7. 3. 2  Active Badge/T_he Active Badge (Want et al., 1992) was /f_irst introduced by the Olivetti Research Laboratory in Cambridge and was one of the /f_irst indoor loca-tion tracking systems developed. /T_he Active Badge is designed to be worn by visitors and employees of an organization to allow a central database to keep track of their location within the building (see Figure 7.6). /T_he badge transmits a unique code via a pulse-width modulated IR signal to networked sensors/receivers deployed throughout a building. /T_he Active Badge uses 48-bit ID codes and is capable of two-way communication./T_he badge periodically beacons the unique code (approximately every 10‚Äì15 seconds), and the information regarding which sensors detected this signal is stored in a central database. /T_he IR-based solution is designed to operate up to 6 meters away from a sensor. /T_he IR signal is strong enough to be re/f_lected oÔ¨Ä walls and ceiling, so that sensors can detect these sig-nals in a small room without line-of-sight operation. Since the IR signal does not travel through walls, the sensors are deployed throughout the space. /T_he walls of the room can also be used as a natural boundary to contain IR signals, thus enabling a receiver to identify the badge within a room. /T_he density and the strategic placement of the sensors also dictate the resolution of the location tracking. For example, multiple sensors may 
FIGURE 7.6 Original Active Badges used at Olivetti (http://koo.corpus.cam.ac.uk/projects/badges/index.html).
93606_Book.indb   3048/26/09   1:39:42 PM Location in Ubiquitous Computing  /UIstop  305be deployed in a large conference room to detect if the individual is near the podium or sitting at the table. /T_he Active Badge system uses a lookup table in the central server for determining the location of the badge, based on which sensors are detecting the badge. /T_his physical location is associ-ated to each sensor with an initial setup and installation phase.Based on the Active Badge system, other IR-based location tracking solutions have also been developed, such as the SPECs project from HP Labs and the Versus system (http://www.versustech.com/). Although the disadvantage of these solutions is that they require line-of-sight operation, the use of IR allows for a low-cost and simple tag and receiver design.7. 3. 3  Active BatActive Bat (Ward et al., 1997) is an ultrasonic-based location tracking systems consisting of ultrasound receivers dispersed in a space and loca-tion tags that emit ultrasonic pulses. Active Bat tags emit short pulses of ultrasound and are detected by receivers mounted at known points on the ceiling, which measure the time-of-/f_light of each pulse. Using the speed of sound, the distance from the tag to each receiver is calculated. Given three or more measurements to the receivers, the 3-D position of the tag can be determined using trilateration. One key concept of Active Bat is the use of an RF signal to cue the tag to transmit its ultrasonic pulse. /T_he RF cue gives the receivers in the environment a starting point for timing the received ultrasonic pulse. Since the speed of light is signi/f_icantly faster than the speed of sound, the RF signal delay is negligible and does not need to be considered for calculating the time-of-/f_light of the acoustical signal./T_he information about the location of Active Bat tags is managed by a central server. /T_his coordination is essential in garnering eÔ¨Écient use of the available ultrasound bandwidth among all the tags. Multiple tags must coordinate their pulses so as not to interfere with each other‚Äôs time-of-/f_light calculations. In addition, multiple receivers are needed to ensure line-of-sight operation and to reduce multipath problems. Active Bat has a location accuracy of 90% at 3 centimeters. /T_he system supports 75 tags being tracked in a 1000 square meters space consisting of 720 receivers. Although Active Bat oÔ¨Äers precise indoor location tracking, it does require signi/f_icant instrumentation to the space.One of the drawbacks of the Active Bat architecture is its active approach of the tag beaconing, as opposed to using a passive approach, where the tag listens to pulses emanating from the environment (see Figure 7.7). /T_he 
93606_Book.indb   3058/26/09   1:39:42 PM 306  /UIstop  Alexander Varshavsky and Shwetak Patel
passive architecture scales better than the active architecture as the den-sity of location tags increase, because the RF and acoustical channels use is independent of the number of tags in the environment. In addition, the active mobile architecture requires a signi/f_icant network infrastructure to connect the deployed receivers to a central server. /T_his also leads to pri-vacy concerns, because the central server knows the position of all tags in the systems. In contrast, the passive architecture allows a mobile device to estimate its location locally on each tag (see Cricket).7. 3.4  Cricket/T_he Cricket location system (Priyantha et al., 2000), unlike ActiveBat or ActiveBadge, does not rely on a centralized architecture to compute loca-tion information. Each Cricket tag is a small platform incorporating an RF transceiver, a microcontroller, and hardware receiving ultrasonic signals. 
Infrastructure transmittersInfrastructure receivers
Active mobile devicePassive mobile deviceFIGURE 7.7 Top: Active Bat tags and example placement of receivers (http://research.microso/f_t.com/en-us/people/shodges/past.aspx). Bottom: Active (e.g., Active BAT) versus passive (e.g., Cricket) approach to location tracking systems.
93606_Book.indb   3068/26/09   1:39:43 PM Location in Ubiquitous Computing  /UIstop  307
Cricket beacons are aÔ¨Éxed to known locations and are typically attached to the ceilings or walls of a building (see Figure 7.8). Each beacon periodi-cally transmits a wireless (RF) message while at the same time sending a short ultrasonic pulse that allows the receiver tag to measure the distance from the beacon using the time-of-/f_light of the ultrasonic signal (similar to the technique used in Active Bat). /T_he tag determines the time-of-/f_light of the acoustical signal and computes the position of the tags relative to the nearby beacons using trilateration. Each tag then uses these distance measures and the beacon position information contained in the RF mes-sages to compute their location relative to the space. Since the tags do not actively transmit data, the scaling of the system is independent of the number of tags in the environment.Unlike the ActiveBat system, Cricket is decentralized, so it preserves privacy by performing location calculations directly on the tag itself. In addition, the beacons deployed in the space do not have to be net-worked together, reducing some of the installation burden. Similar to the ActiveBat, line-of-sight operation is needed between each tag and at least three beacons, which requires suÔ¨Écient installation of Cricket beacons to ensure full coverage in a space.7. 3. 5  UbiSenseUbisense (http://www.ubisense.net) is a commercial location tracking sys-tem using an ultrawideband (UWB) signal for localization (see Figure 7.9). Ubisense oÔ¨Äers high precision at about 15 cm (at 90th percentile) by tri-angulating the location of active tags (called Ubitags) from a collection of networked sensors (called Ubisensors) distributed in a space. Each Ubitag incorporates a conventional RF radio (2.4 GHz) and a UWB radio (6‚Äì8 GHz). /T_he conventional radio is used to coordinate and schedule when a 
FIGURE 7.8 Cricket tags and example placement of the transmitters (http://nms.lcs.mit.edu/projects/cricket/).
93606_Book.indb   3078/26/09   1:39:44 PM 308  /UIstop  Alexander Varshavsky and Shwetak Patel
particular Ubitag should transmit its UWB pulse. /T_he Ubisensors consist of a collection of phased array antennas.A/f_ter a tag is queried to transmit its UWB pulse, the Ubisense system uses TDOA and AOA to triangulate the location of the tag. /T_hus, at least two Ubisensors are needed to calculate the 3-D position of a Ubitag. /T_he TDOA information is computed from sensors connected together with a physical timing cable. /T_he advantage of using UWB pulses is that it is easier to /f_ilter multipath signals and can endure some occlusion. However, Ubisense does require line-of-sight operation for optimal performance. Since a timing cable is required to each Ubisensor, the installation process can be challenging in certain environments.7. 3.6  RADAR/T_he cost and eÔ¨Äort of installation of the necessary infrastructure is a major drawback to wide-scale deployment of a location system. /T_hus, there have been eÔ¨Äorts in developing location-based systems that reuse existing infrastructure to ease the burden of deployment and lower the 
SensorMasterSensorSensor
NetworkNetwork
UWB PulseTagUWB PulseUWB Pulse
FIGURE 7.9 Top: Infrastructure architecture for Ubisense. Bottom: Ubitags are shown on the le/f_t and Ubisensor on the right (http://www.ubisense.net).
93606_Book.indb   3088/26/09   1:39:45 PM Location in Ubiquitous Computing  /UIstop  309cost. /T_he RADAR system implements a location service using the infor-mation obtained from an already existing 802.11 WiFi network (Bahl and Padmanabhan, 2000). RADAR uses the RF signal strength [also known as the received signal strength indicator (RSSI)] as an indicator of the dis-tance between an AP and a receiver. /T_he major advantage of this approach is that a consumer does not have to purchase any specialized equipment and can still bene/f_it from a location-aware application. For example, exist-ing devices, such as WiFi-enabled mobile phones, PDAs, or laptops, can be repurposed as a receiver or tag./T_he initial RADAR system used a trilateration approach on the RSSI values, but problems with multipath led researchers to use a mapping or /f_ingerprinting approach for localization, where an oÔ¨Ñine signal map is constructed before the operation of the system. /T_he signal map consists of locations in a building and the signal strength of RF waves emanating from nearby WiFi APs. For example, at a location (Y,Z) there are signal values associated with that position, one for each detectable WiFi base sta-tion. /T_he creation of this signal map involves a user walking to several diÔ¨Äerent locations with a location tag in the building and recording the physical coordinates of each location together with the signal strength from each AP.To determine the position of the WiFi-enabled device, the receiver measures the signal strength of each of the APs and then searches through the signal map to determine the signal strength values that best matches the signal strengths seen in the past. An NN approach is used to /f_ind the closest signal values and then the system estimates the location associated with the best-matching signal strengths.Experiments with this approach have shown that RADAR has a median position error of about 3 meters and 90 percentile resolution of 6 meters. At least three APs are needed to be in range for eÔ¨Äective localization. Some of the drawbacks of this approach are that changes in the environment (moving furniture, appliances, etc.) may change the signal propagation patterns in the space. /T_his would require another site survey to be con-ducted to update the signal map. Some solutions to help reduce this prob-lem are to use more APs and environmental modeling.Based on the results of RADAR, many commercial WiFi-based indoor positioning systems have also emerged. Ekahau is a positioning system that oÔ¨Äers 3 to 5 meter resolution using six enterprise WiFi APs (http://www.ekahau.com). Similarly, Cisco also oÔ¨Äers a /f_ingerprinting-based location tracking services with their WiFi APs.
93606_Book.indb   3098/26/09   1:39:45 PM 310  /UIstop  Alexander Varshavsky and Shwetak PatelAnother /f_ingerprinting approach has looked at leveraging existing GSM cell towers to localize GSM mobile phones indoors (Varshavsky et al., 2007). /T_heir approach /f_ingerprints signal values of all available GSM channels to provide higher dimensionality to increase localization accu-racy. Similar to WiFi localization solutions, a /f_ingerprinting approach is used to determine the location of the device from a known signal map. /T_his approach has a known median error of 5 meters and a 90 percentile resolu-tion of 15‚Äì20 meters. Although this solution provides eÔ¨Äective localization with little to no additional hardware to be deployed in an environment, one major drawback is that the user has very little control of the infrastructure itself. /T_he performance of the system relies on publicly accessible infra-structures (e.g.GSM cellular towers), which can change over time. Service providers can adjust the operation parameters of the cellular towers with little warning, thus requiring an update to the signal map.7. 3.7  Place LabPlace Lab (LaMarca et al., 2005) is a so/f_tware-based indoor and outdoor localization system developed by Intel‚Ñ¢ Research. Place Lab runs on com-modity devices such as notebooks, PDAs, and mobile phones, and deter-mines their position using radio beacons, such as 802.11 APs, GSM cell phone towers, and /f_ixed Bluetooth devices that are already deployed in the environment (www.placelab.org). An advantage of Place Lab is that clients can determine their location privately without having to reveal informa-tion to a central service provider. In general, clients running the Place Lab so/f_tware determine their location by detecting multiple unique IDs from these existing radio beacons and referring to a map of these devices.PlaceLab‚Äôs WiFi localization approach is very similar to RADAR and Ekahau, but there are two important distinctions. /T_he aim of Place Lab is to provide location tracking at a large scale, whereas RADAR and Ekahau are primarily for smaller indoor environments. /T_hese approaches require calibration by the installer of the system. /T_he aim of Place Lab is to use less dense calibration data that is contributed by a community of users so there is no need for an individual to populate a signal map.Much of the Place Lab data is derived from the war driving commu-nity. War driving is the process of driving around with a mobile device equipped with a GPS receiver and an 802.11, GSM, and/or Bluetooth radio to collect traces of wireless base stations. Most of the war driving data is time-stamped recordings containing GPS coordinates and the associ-ated signal strength of any beacons heard at the location. Wigle.net and 
93606_Book.indb   3108/26/09   1:39:45 PM Location in Ubiquitous Computing  /UIstop  311Worldwidewardrive.org are some examples of war driving repositories that contain millions of known APs. /T_hese data are used to estimate the position of the wireless beacons using a centroid approach, which esti-mates the position of the device to be a weighted average of positions of the overheard beacons. Although this approach only infers the location of the beacons, it has the added bene/f_it that millions of beacon estimates have already been determined. /T_hus, this allows the ability to scale a loca-tion tracking system much more quickly despite the loss in accuracy. /T_his approach has shown a median accuracy of 20‚Äì30 meters in large cities.A similar eÔ¨Äort was also started in Japan by the Sony Computer Science Laboratory called PlaceEngineTM (http://www.placeengine.com/en). Place Engine provides a mechanism for a community of users to update 802.11 beacon positions and the ability to track the location of any WiFi-enabled device. Place Lab also inspired commercial products such as Skyhook (http://www.skyhookwireless.com/) and Navizon (http://www.navizon.com/).7. 3.8  PowerLine PositioningInspired by this strategy of leveraging existing infrastructure and recog-nizing that there are drawbacks to relying on public infrastructure or the deployment of many beacons, PowerLine Position (PLP) was developed to provide indoor localization that would work in nearly every building (Patel et al., 2006b; Stuntebeck et al., 2008). With the signi/f_icant insight being to use the power line as the signaling infrastructure, PowerLine Positioning is the /f_irst example of a whole-house or whole-building indoor localization system that repurposes the electrical system. PLP requires the installation of two small, plug-in modules for every 1000 square meters. In a home, only two modules would be necessary (see Figure 7.10). /T_hese modules inject a mid- frequency (300‚Äì1600 kiloHertz), attenuated signal throughout the electrical system of the home. Both modules continually emit their respective signals over the power line, and location tags equipped with specially tuned tags sense these signals in a building and relay them wirelessly to a receiver in the building. Depending on the location of the tag, the detected signal levels provide a distinctive signature, or /f_ingerprint, resulting from the density of electrical wiring present at the given location and the distance from the plug-in module. PowerLine Positioning is capable of providing subroom-level positioning for multiple regions of a building. /T_he current PLP system has a median error of 0.75 meters and a 90 percentile accuracy of 1 meter.One drawback of PLP is that it requires a complete site survey to be conducted before the deployment of the system (similar to WiFi- and 
93606_Book.indb   3118/26/09   1:39:45 PM 312  /UIstop  Alexander Varshavsky and Shwetak Patel
GSM-based /f_ingerprinting solutions). However, the minimal infrastruc-ture requirements and potential lower deployment costs is an impor-tant consideration for low-cost application, especially those that may be deployed in a home.7. 3.9  ActiveFloorMany of the location tracking solutions discussed in this chapter require the attachment of a specialized tag to a device or a person carrying the tag. In addition, some of these tags require line-of-sight operation, which constrains where and how the tag is placed on a device. /T_he tags also have to be associated with the attached device in a database. Because of these constraints, the tagging-based solution may not be appropriate for some 
Module 1
Module 2
FIGURE 7.10 Top le/f_t: Placement of two signal-generating modules at extreme ends of a house. Top right: Signal generator plug-in modules. Bottom: Prototype PowerLine Positioning tag.
93606_Book.indb   3128/26/09   1:39:46 PM Location in Ubiquitous Computing  /UIstop  313applications. ActiveFloor is one example of a location tracking technology that is designed to locate a person in a space without an individual having to carry or wear a special tag (Addlesee et al., 1997). ActiveFloor consists of load sensors embedded within /f_loor titles. /T_he location trace of a per-son is determined through the weight distribution throughout the /f_loor. Although ActiveFloor does not require a tag to be carried by a person, it does require signi/f_icant instrumentation to a space.ActiveFloor uses 50 cm square plywood /f_loor tiles supported by load sensors distributed across an entire /f_loor (see Figure 7.11). /T_he load cells are sampled at 500 Hz, which is suÔ¨Écient for most walking and running activities. /T_he static weight of the /f_loor and the systematic errors are cal-ibrated out by capturing sensor values with no additional weight being applied to the surface. When an individual walks on the surface, the reac-tion that the load sensors produce in response to the weight and inertia of a body in contact with the /f_loor is called the ground reaction force (GRF) (in this case, the person‚Äôs foot). As a person walks on the /f_loor, the GRF values from each load sensor can be averaged to /f_ind the location of the mass. In addition, as a person steps on the tile, the GRF is not always constant, because individuals push of with their toe and plant their heel (heel strike) 
Heel Strike
Time (Sample Number)41 81 121 161 201 241Transfer from Heel to ToeAverage Load Cell ResponseToe Push
FIGURE 7.11 Top: GRF response of a single footstep. Bottom: Load sensor supporting a /f_loor tile (http://www.cc.gatech.edu/fce/smart/f_loor/).
93606_Book.indb   3138/26/09   1:39:47 PM 314  /UIstop  Alexander Varshavsky and Shwetak Patelas they walk. /T_his heel-to-toe transfer time and heel/toe GRF values can be used to calculate a footstep signature. ActiveFloor uses these features from the footstep signatures to build a hidden Markov model in order to identify the person. For further reading, a similar approach is also used by the Smart Floor project (http://www.cc.gatech.edu/fce/smart/f_loor/).7. 3.10  AirbusRecent work has looked at providing passive tracking of individuals with-out having people carry a tag, similar in spirit to ActiveFloor. New strate-gies have tried to greatly reduce the amount of additional infrastructure needed for deployment. Airbus (Patel et al., 2008) is a location tracking system capable of detecting gross human movement and room transitions by sensing diÔ¨Äerential air pressure in a home (see Figure 7.12). /T_he solu-tion leverages central heating, ventilation, and air conditioning (HVAC) systems present in many homes. /T_he home forms a closed air circulation circuit, where the HVAC system provides a centralized air/f_low source and a convenient single monitoring point for the entire circuit. Disruptions in home air/f_low caused by human movement through the house, espe-cially those caused by the blockage of doorways and thresholds, result in static pressure changes in the HVAC air handler unit. /T_he system detects and records this pressure variation using diÔ¨Äerential sensors mounted on the air /f_ilter and classi/f_ies where certain movement events are occurring, such as an adult walking through a particular doorway or the opening and closing of a door. Results have shown that the system can classify the opening and closing of speci/f_ic doors with up to 80% accuracy with the HVAC in operation and 68% with the HVAC not in operation using sup-port vector machines. /T_hese door events are used to compute a trace of where an individual is moving through the space.An alternative strategy might be to install a collection of motion detec-tors in a space to directly sense the presence of a person to determine the path of a person (Wilson and Atkeson, 2005). /T_his solution is more accu-rate than Airbus and would be necessary for environments that are not equipped with an HVAC system. /T_he motion detector approach would also provide more resolution depending on the density of the installation. However, the other tradeoÔ¨Ä is that the HVAC approach is much less obtru-sive than installing motion detectors throughout a living space. Although the HVAC sensing provides location information at a lower /f_idelity than other tagging-based solutions, it does not require a person to carry a 
93606_Book.indb   3148/26/09   1:39:47 PM Location in Ubiquitous Computing  /UIstop  315
location tag and there is only a single location where the sensors reside and that has to be maintained. However, this technique does not work well for determining the identity of a person in a building. Airbus is more appropriate for applications that need to know people‚Äôs presence, such as for smart heating and cooling or lighting control.7. 3.11  Tracking with CamerasAnother popular strategy to tracking the location of people is the use of cameras and computer vision techniques. /T_he advantage of this solution is 
SensorHVAC
FIGURE 7.12 Top: Diagram of air/f_low from return and supply ducting in a home. Bottom: Instrumentation of a standard HVAC air /f_ilter with pres-sure sensors able to detect air/f_low in both directions. /T_he air /f_ilter is then installed in the HVAC‚Äôs air handler unit.
93606_Book.indb   3158/26/09   1:39:49 PM 316  /UIstop  Alexander Varshavsky and Shwetak Patelthere is no requirement for a person to carry a specialized tag and it is pos-sible to leverage existing cameras typically found in many environments (e.g. surveillance cameras, closed-circuit television, etc.), reducing the deployment burden. Existing solutions have looked at using stereo camera images for locating the position of people in a space, and the color images for inferring identities (Krumm et al., 2000). To determine the distance to any point in the environment in a stereo vision system, a stereo cam-era identi/f_ies where that point appears in both camera views. Traditional stereo vision algorithms (Forsyth and Ponce, 2002) rely on distinctive tex-tures in the pair of images to determine which points from the le/f_t camera image corresponds to a particular point in the right camera image. /T_his provides additional depth information to the color information already present in a single camera‚Äôs view. Blob detection and background subtrac-tion techniques are used to infer the location of moving objects (usually people) in the camera‚Äôs view. Nonoverlapping cameras can also be used to provide location information on a planar surface (i.e., using overhead cameras) (Yang and Bobick, 2005). In addition to color histograms, more advanced face recognition approaches are used to determine the identity of a tracked person.Although camera-based tracking provides an attractive solution for environments that may already have a deployed camera infrastructure, there are some drawbacks to this approach. /T_he eÔ¨Äective tracking range is limited to the /f_ield of view of a camera and covering large spaces requires coordination between adjacent views from multiple cameras. Similar to IR- and ultrasonic-based solutions, this approach does not work well in environments where there might be numerous occlusions. Tracking the position and the trajectory of a person in a fairly open space works well when using a camera, but tracking objects that might reside in cabinets and drawers would require a diÔ¨Äerent technique. Finally, the stigma and privacy concerns associated with cameras may hinder the adoption of these techniques for certain applications.7.4  CONCLUSIONS AND CHALLENGES/T_his chapter introduced the basic concepts of location technologies and surveyed some of the current and historical location systems. Furthermore, it described the diÔ¨Äerences between client-based and network-based posi-tioning and identi/f_ied some of the major sources of error in location sys-tems. Finally, this chapter ends with a discussion of some of the challenges and opportunities facing developers of location systems.
93606_Book.indb   3168/26/09   1:39:49 PM Location in Ubiquitous Computing  /UIstop  317/T_here is no single location technology today that is ubiquitous, accurate, low-cost (in terms of required hardware and installation), and easy to deploy. Although a novel location technology that /f_its all these parameters might still become available in the future, a more realistic approach is to combine several of the existing technologies into an integrated location system. For instance, although the median error of GPS is 10 meters, the combined solu-tion of GPS and European‚Äôs global navigation satellite system called Galileo (as soon as it comes online) should yield a median accuracy of 1.5 meters.Developers of location-aware applications are faced with the challenge of building and maintaining location-aware middleware and location-aware back-end services from limited existing solutions. /T_hese include collecting and reasoning about low-level sensor readings, storing loca-tion information on the back-end servers, and making the information available to third-party applications in a scalable and privacy-preserv-ing manner. Although there are several existing middleware and back-end solutions available today (FireEagle; Hong and Landay, 2004), there is no well-accepted standard that is widely available for application developers.Privacy remains as one of the main challenges for the proliferation of location services (Krumm, 2008). /T_here is a need to hand over the control of location information disclosure to the user, without overwhelming him/her with privacy con/f_igurations, while still providing useful location ser-vices. For example, a recent study showed that users want plausible deni-ability in a location system (Iachello et al., 2005). Another study showed that people‚Äôs preferences for disclosing location information diÔ¨Äers based on many parameters, including the location of the user and the other per-son, the current user activity, and the relationship between the user and the other person (Consolvo et al., 2005). Refer to Chapter 4 for further discussion on user privacy in ubicomp.REFERENCESAddlesee, M., Jones, A., Livesey, F., and Samaria, F. ORL Active Floor. *&&&1FSTPOBM$PNNVOJDBUJPOT 4(5), 35‚Äì41, 1997.Ascension Technology Corporation, www.ascension-tech.com.Bahl, P ., and Padmanabhan, V . RADAR: An in-building RF-based user location and tracking system. In 1SPDFFEJOHTPG*&&&*OGPDPN, Los Alamitos, 2000, pp. 775‚Äì784.Cheng, Y . C., Chawathe, Y ., LaMarca, A., and Krumm, J. Accuracy characteriza-tion for metropolitan-scale Wi-Fi localization. In 1SPDFFEJOHTPG .PCJ4ZT, 2005, pp. 233‚Äì245.
93606_Book.indb   3178/26/09   1:39:49 PM 318  /UIstop  Alexander Varshavsky and Shwetak PatelConsolvo, S., Smith, I. E., Matthews, T., LaMarca, A., Tabert, J., and Powledge, P . Location disclosure to social relations: Why, when, & what people want to share. In 1SPDFFEJOHTPGUIF$POGFSFODFPO)VNBO'BDUPSTBOE$PNQVUJOH4ZTUFNT$)*A, Portland, OR, Apr. 2005, pp. 81‚Äì90.Forsyth, D. A., and Ponce, J. $PNQVUFS7JTJPO".PEFSO"QQSPBDI. Prentice Hall, Upper Saddle, NJ, 2002.Hong, J., and Landay, A. J. An architecture for privacy-sensitive ubiquitous computing. In 1SPDFFEJOHTPGUIFOE*OUFSOBUJPOBM$POGFSFODFPO.PCJMF4ZTUFNT"QQMJDBUJPOTBOE4FSWJDFT	.PCJ4ZT
, Boston, MA, 2004, pp. 177‚Äì189.Iachello, G., Smith, I., Consolvo, S., Abowd, G., Hughes, J., Howard, J., Potter, F., Scott, J., Sohn, T., Hightower, J., and LaMarca, A. Control, deception, and communication: Evaluating the deployment of a location-enhanced messag-ing service. In 1SPDFFEJOHTPG6CJDPNQ 2005, Tokyo, Japan. September 2005.Krumm, J. A survey of computational location privacy. 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH, 2008.Krumm, J., Cermak, G., and Horvitz, E. RightSPOT: A novel sense of location for smart personal objects. In 1SPDFFEJOHTPGUIF'J/f_tI*OUFSOBUJPOBM$POGFSFODFPO6CJRVJUPVT$PNQVUJOH, Seattle, W A, 2003, pp. 36‚Äì43.Krumm, J., Harris, S., Meyers, B., Brumitt, B., Hale, M., and Shafer, S. Multi-camera multi-person tracking for easyliving, IEEE Workshop on Visual Surveillance, July 2000.LaMarca, A., Chawathe, Y ., Consolvo, S., Hightower, J., Smith, I., Scott, I., Sohn, T., Howard, J., Hughes, J., Potter, F., Tabert, J., Powledge, R., Borriello, G., and Schilit, B. Place Lab: Device positioning using radio beacons in the wild. *O1SPDFFEJOHTPGUIF*OUFSOBUJPOBM$POGFSFODFPO1FSWBTJWF$PNQVUJOH	1FSWBTJWF
, Munich, Germany, 8‚Äì13 May 2005, pp. 116‚Äì133.LaMarca, A., and de Lara, E. -PDBUJPO4ZTUFNT"O*OUSPEVDUJPOUPUIF5FDIOPMPHZCFIJOE-PDBUJPO"XBSFOFTT. Morgan and Claypool Publishers, San Rafael, CA, 2008.Patel, S. N., Kientz, J. A., Hayes, G. R., Bhat, S., and Abowd, G. D. Farther than you may think: An empirical investigation of the proximity of users to their mobile phones. In 1SPDFFEJOHTPG6CJDPNQ, Orange County, CA, 2006a, pp. 123‚Äì140.Patel, S. N., Reynolds, M. S., and Abowd, G. D. detecting human movement by diÔ¨Äerential air pressure sensing in HV AC system ductwork: An explora-tion in infrastructure mediated sensing. In 1SPDFFEJOHTPGUIF*OUFSOBUJPOBM$POGFSFODFPO1FSWBTJWF$PNQVUJOH	1FSWBTJWF
, Springer LNCS 5013, 2008, pp. 1‚Äì18.Patel, S. N., Truong, K. N., and Abowd, G. D. PowerLine Positioning: A practi-cal sub-room-level indoor location system for domestic use. In 1SPDFFEJOHTPGUIF*OUFSOBUJPOBM$POGFSFODFPO6CJRVJUPVT$PNQVUJOH	6CJDPNQ
, Orange County, CA, 2006b, pp. 441‚Äì458.Priyantha, N. B., Chakraborty, A., and Balakrishnan, H. /T_he Cricket location-support system. In 1SPDFFEJOHTPGUIF*OUFSOBUJPOBM$POGFSFODFPO.PCJMF$PNQVUJOHBOE/FUXPSLJOH	.PCJDPN
, Boston, MA, 2000, pp. 32‚Äì43.
93606_Book.indb   3188/26/09   1:39:50 PM Location in Ubiquitous Computing  /UIstop  319Rizos, C., Higgins, M. B., and Hewitson S. New global navigation satellite sys-tem developments and their impact on survey service providers and sur-veyors. In 1SPDFFEJOHTPG44$4QBUJBM*OUFMMJHFODF*OOPWBUJPOBOE1SBYJT/T_hF/BUJPOBM#JFOOJBM$POGFSFODFPGUIF4QBUJBM4DJFODFT*OTUJUVUF, September 2005.Schilit, B., Adams, N., and Want, R. Context-aware computing applications. In 1SPDFFEJOHTPGUIF8PSLTIPQPO.PCJMF$PNQVUJOH4ZTUFNTBOE"QQMJDBUJPOT, 1999.Stuntebeck, E. P ., Patel, S. N., Robertson, T., Reynolds, M. S., and Abowd, G. D. Wideband powerline positioning for indoor localization. In 1SPDFFEJOHTPGUIF*OUFSOBUJPOBM$POGFSFODFPO6CJRVJUPVT$PNQVUJOH	6CJDPNQ
, 2008, pp. 94‚Äì103.Varshavsky, A., de Lara, E., LaMarca, A., Hightower, J., and Otsason, V . GSM indoor localization. 1FSWBTJWFBOE.PCJMF$PNQVUJOH+PVSOBM	1.$
 3(6), 698‚Äì720, 2007.Want, R., Hopper, A., Falcao, V ., and Gibbons, J. /T_he Active Badge location system. "$.5SBOTBDUJPOTPO*OGPSNBUJPO4ZTUFNT 10, 91‚Äì102, 1992.Ward, A., Jones, A., and Hopper, A. A new location technique for the active oÔ¨Éce. *&&&1FSTPOBM$PNNVOJDBUJPOT 4(5), 42‚Äì47, 1997.Wilson, D. H., and Atkeson, C. G. Simultaneous tracking and activity recogni-tion (STAR) using many anonymous, binary sensors. In 1SPDFFEJOHT PG*OUFSOBUJPOBM$POGFSFODFPO1FSWBTJWF$PNQVUJOH	1FSWBTJWF
, 2005, pp. 62‚Äì79.Y ang, Z., and Bobick, A. F. Visual integration from multiple cameras. In 1SPDFFEJOHTPG"QQMJDBUJPOPG$PNQVUFS7JTJPO8"$7.05*0/4, 2005, pp. 488‚Äì493.
93606_Book.indb   3198/26/09   1:39:50 PM 93606_Book.indb   3208/26/09   1:39:50 PM 8CHAPTER Context-Aware ComputingAnind K. DeyCONTENTS8.1 Introduction to Context-Aware Computing 3228.2 What Is Context? 3258.3 What Is Context Awareness? 3278.3.1 Categorization of Features for Context-Aware Applications 3298.4 Context-Aware Applications 3328.4.1 Historical Context-Aware Applications 3328.4.1.1 Tour Guides 3338.4.1.2 Reminders 3348.4.1.3 Environmental Controls 3348.4.2 Contemporary Context-Aware Applications 3348.5 Designing and Implementing Context-Aware Applications 3358.5.1 Design Process 3358.5.2 Tools for Building 3378.6 Issues to Consider when Building Context-Aware Applications 3428.6.1 Context Is a Proxy for Human Intent 3428.6.2 Context Inferencing 3438.6.3 Context Ambiguity 3438.6.4 Rules versus Machine Learning 3448.6.5 Privacy 3448.6.6 Evaluation 3458.6.7 End User Issues 3458.7 Challenges in Writing Academic Papers on Context Awareness 3468.8 Summary 348References 348
93606_Book.indb   3218/26/09   1:39:51 PM 322  /UIstop  Anind K. Dey8.1  INTRODUCTION TO CONTEXT-AWARE COMPUTINGHumans are quite successful conveying ideas to each other and reacting appropriately. /T_his is due to many factors, including the richness of the language they share, the common understanding of how the world works, and an implicit understanding of everyday situations. When humans speak with humans, they are able to use information apparent from the current situation, or DPOUFYU, to increase the conversational bandwidth. Unfortunately, this ability to convey ideas does not transfer well when humans interact with computers. Computers do not understand our lan-guage, do not understand how the world works, and cannot sense informa-tion about the current situation, at least not as easily as most humans can. In traditional interactive or desktop computing, users have an impover-ished mechanism for providing information to computers, typically using a keyboard and mouse. As a result, information must explicitly be provided to computers, producing an eÔ¨Äect contrary to the promise of transparency in Weiser‚Äôs vision of ubiquitous computing (Weiser, 1991). Users translate what they want to accomplish into speci/f_ic minutiae on how to accomplish the task, and then use the keyboard and mouse to articulate these details to the computer so that it can execute their commands. /T_his is nothing like our interaction with other humans. Consequently, computers are not currently enabled to take full advantage of the context of the human- computer dialogue. By improving the computer‚Äôs access to context, users can increase the richness of communication in human-computer interac-tion and make it possible to produce more useful computational services.Many research areas are attempting to address this input de/f_iciency, but they can mainly be seen in terms of two basic approaches:Improving the language that humans can use to interact with tcomputersIncreasing the amount of situational information, or context, that is tmade available to computers/T_he /f_irst approach tries to improve interaction by allowing the human user to communicate in a much more natural manner. /T_his type of com-munication is still very explicit, in that the computer only knows what the user tells it. With natural input techniques such as speech and gestures, no other information besides the explicit input is available to the computer. As we know from human‚Äìhuman interactions, situational information 
93606_Book.indb   3228/26/09   1:39:51 PM Context-Aware Computing  /UIstop  323such as facial expressions, emotions, past and future events, the existence of other people in the room, and relationships to these other people are crucial to understanding what is occurring. /T_he process of building this shared understanding between two people is called HSPVOEJOH (Clark and Brennan, 1991). Since both human participants in such an interaction share this situational information, there is no need to make it explicit. /T_his helps to explain why a driver /f_inds it easier to talk to a passenger than to someone on a cell phone‚Äîwith the passenger, there is grounding with-out explicit communication. However, this need for explicitness does exist in human‚Äìcomputer interactions, because the computer does not share this implicit situational information or context. /T_he goal of context-aware computing is to use context as an implicit cue to enrich the impoverished interaction from humans to computers, making it easier to interact with computers.Researchers in context awareness want to make it easier, not harder, for users to interact with computers and the environment, by allowing users to not have to think consciously about using the computers. Weiser coined the term DBMNUFDIOPMPHZ to describe an approach to ubiquitous computing, where computing moves back and forth between the center and periphery of the user‚Äôs attention (Weiser and Brown, 1997). To this end, the approach to context-aware application development is to collect JNQMJDJU contextual information through automated means, make it eas-ily available to a computer‚Äôs runtime environment, and let the application designer decide what information is relevant and how to deal with it. /T_his is the better approach, because it removes the need for users to make all information explicit and it puts the decisions about what is relevant into the designer‚Äôs hands. Furthermore, it is likely that most users will not know which information is potentially relevant and, therefore, will not know what information to provide. /T_he application designer should have spent considerably more time analyzing the situations under which their application will be executed and can more appropriately determine what information could be relevant and how to react to it./T_he need for context is even greater when we move into ubicomp environments. Mobile computing and ubiquitous computing have given users the expectation that they can access whatever information and ser-vices they want, whenever they want, and wherever they are. With com-puters being used in such a wide variety of situations, interesting new problems arise, and the need for context is clear: users are trying to obtain diÔ¨Äerent information from the same services or systems in diÔ¨Äerent 
93606_Book.indb   3238/26/09   1:39:51 PM 324  /UIstop  Anind K. Deysituations. Context can be used to help determine what information or services to make available or to bring to the forefront for users.Applications that use context, whether on a desktop or in a mobile or ubiquitous computing environment, are called DPOUFYUBXBSF. /T_he increased availability of commercial, oÔ¨Ä-the-shelf sensing technologies is making it more viable to sense context in a variety of environments. /T_he prevalence of powerful, networked computers makes it possible to use these technologies and distribute the context to multiple applications, in a somewhat ubiquitous fashion. Mobile computing allows users to move throughout an environment while carrying their computing power with them. Combining this with wireless communications allows users to have access to information and services not directly available on their porta-ble computing device. /T_he increase in mobility creates situations where the user‚Äôs context, such as his or her location and the people and objects around him/her, is more dynamic. With ubiquitous computing, users move throughout an environment and interact with computer-enhanced objects within that environment. /T_his also allows them to have access to remote information and services. With a wide range of possible user situ-ations, we need to have a means for the services to adapt appropriately, in order to best support the human‚Äìcomputer and human‚Äìenvironment interactions. Context-aware applications are becoming more prevalent and can be found in the areas of wearable computing, mobile computing, robotics, adaptive and intelligent user interfaces, augmented reality, adap-tive computing, intelligent environments, and context-sensitive interfaces. It is not surprising that in most of these areas, the user is mobile and his or her context is changing rapidly.For example, the most common context-aware application is a mobile tour guide. A mobile tour guide is a handheld device that one receives when visiting a museum or historical site. It can present information to a user about exhibits the user is interested in, using audio, video/images, or text. Today, most mobile tour guides require users to explicitly enter the name or ID of the exhibit they want more information about. However, context-aware mobile tour guides remove this need for explicit input. /T_hey automatically sense which exhibit the user is closest to (e.g., using radio frequency ID (RFID) tags on each exhibit and an RFID reader in the tour guide) and automatically present the appropriate exhibit information.In the remainder of this chapter, de/f_initions of context and context awareness are provided, along with descriptions of diÔ¨Äerent types of con-text awareness. Following these descriptions, a discussion of context-aware 
93606_Book.indb   3248/26/09   1:39:51 PM Context-Aware Computing  /UIstop  325applications, including historical and more contemporary applications, along with design processes and tools for building context-aware applica-tions, is presented. /T_hen, a number of issues in building context-aware applications, including sensor fusion, privacy, and evaluation, are out-lined. Finally, the chapter ends with a discussion of the pitfalls in writing academic papers about context-aware computing.8.2  WHAT IS CONTEXT?Realizing the need for context is only the /f_irst step toward using it eÔ¨Äectively. Most researchers have a general idea about what context is and use that general idea to guide their use of it. However, a vague notion of context is not suÔ¨É-cient; in order to use context eÔ¨Äectively, we must attain a better understanding of what context is. A better understanding of context will enable application designers to choose what context to use in their applications and provide insights into the types of data that need to be supported and the abstractions and mechanisms required to support context-aware computing.In the work that /f_irst introduces the term DPOUFYUBXBSF, Schilit and /T_heimer (1994) refer to context as location, identities of nearby people and objects, and changes to those objects. In a similar de/f_inition, Brown et al.(1997) de/f_ine context as location, identities of the people around the user, the time of day, season, temperature, etc. Ryan et al. (1998) de/f_ine context as the user‚Äôs location, environment, identity, and time. In a previ-ous work, Dey (1998) enumerated context as the user‚Äôs emotional state, focus of attention, location and orientation, date and time, and objects and people in the user‚Äôs environment. /T_hese de/f_initions de/f_ine context by example and are diÔ¨Écult to apply. When you want to determine whether a type of information not listed in the de/f_inition is context, it is not clear how to use these enumerations to do so..FSSJBN8FCTUFSde/f_ines context as ‚Äúthe interrelated conditions in which something exists or occurs.‚Äù Other de/f_initions have simply pro-vided synonyms for context, referring, for example, to context as the envi-ronment or situation. Some consider context to be the user‚Äôs environment, whereas others consider it to be the application‚Äôs environment. Brown (1996a) de/f_ined context to be the elements of the user‚Äôs environment that the user‚Äôs computer knows about. Franklin and Flaschbart (1998) see it as the situation of the user. Ward et al. (1997) view context as the state of the application‚Äôs surroundings, and Rodden et al. (1998) de/f_ine it to be the application‚Äôs setting. Hull et al. (1997) included the entire environ-ment by de/f_ining context as aspects of the current situation. As with the 
93606_Book.indb   3258/26/09   1:39:51 PM 326  /UIstop  Anind K. Deyde/f_initions by example, de/f_initions that simply use synonyms for context are extremely diÔ¨Écult to apply in practice.Schilit et al. (1994) claim that the important aspects of context are as follows: where you are, whom you are with, and what resources are nearby. /T_hey de/f_ine context to be the constantly changing execution environment. /T_hey include the following elements of the environment:$PNQVUJOH FOWJSPONFOUt‚Äîavailable processors, devices accessible for user input and display, network capacity, connectivity, and costs of computing6TFS FOWJSPONFOUt‚Äîlocation, collection of nearby people, and social situation1IZTJDBMFOWJSPONFOUt‚Äîlighting and noise levelDey et al. (1998) de/f_ine context to be the user‚Äôs physical, social, emo-tional, or informational state. Finally, Pascoe (1998) de/f_ines context to be the subset of physical and conceptual states of interest to a particu-lar entity. /T_hese de/f_initions, although closer to an ideal de/f_inition, are too speci/f_ic. Context is all about the whole situation relevant to an application and its set of users. It is not possible to enumerate which aspects of all situ-ations are important, because this will change from situation to situation. For example, in some cases, the physical environment may be important, whereas in others it may be completely immaterial.Finally, Dey and Abowd (2000a) de/f_ine context asany information that can be used to characterize the situation of an entity. An entity is a person, place, or object that is considered rel-evant to the interaction between a user and an application, includ-ing the user and application themselves.Context-aware applications look at the XIP‚Äôs, XIFSF‚Äôs, XIFO‚Äôs, and XIBU‚Äôs (i.e., what activities are occurring) of entities and use this information to determine XIZa situation is occurring. An application does not actually determine why a situation is occurring, but the designer of the application does. /T_he designer uses incoming context to determine the VTFSTJOUFOU, or why a situation is occurring, and uses this to encode some action in the appli-cation that helps to satisfy this intent. For example, in a context-aware tour guide, a user carrying a handheld computer approaches some interesting 
93606_Book.indb   3268/26/09   1:39:52 PM Context-Aware Computing  /UIstop  327site resulting in information relevant to the site being displayed on the com-puter (Abowd et al., 1997). In this situation, the designer has encoded the understanding that when a user approaches a particular site (the ‚Äúincoming context‚Äù), it means that the user is interested in the site (the ‚Äúwhy‚Äù) and the application should display some relevant information (the ‚Äúaction‚Äù)./T_his de/f_inition of context includes not only implicit input but also explicit input. For example, the identity of a user can be implicitly sensed through face recognition or can be explicitly determined when a user is asked to type in her name using a keyboard. From the application‚Äôs per-spective, both are information about the user‚Äôs identity and allow it to perform some added functionality. Context awareness uses a generalized model of input, including implicit and explicit input, allowing BOZappli-cation to be considered more or less context-aware insofar as it reacts to input. However, most work in context awareness is concerned with the gathering and use of JNQMJDJUinput by applications./T_here are certain types of context that are, in practice, more important than others. /T_hese are MPDBUJPO (where), JEFOUJUZ (who), UJNF (when), and BDUJWJUZ (what). Location, identity, time, and activity are important context types for characterizing the situation of a particular entity. /T_hese context types not only answer the questions of who, what, when, and where, but also act as indices into other sources of contextual information. For exam-ple, given a person‚Äôs identity, we can acquire many pieces of related infor-mation such as phone numbers, addresses, email addresses, a birth date, list of friends, relationships to other people in the environment, etc. With an entity‚Äôs location, we can determine what other objects or people are near the entity and what activity is occurring near the entity. /T_his attempt at a categorization of context is clearly incomplete. For example, it does not include hierarchical or containment information. An example of this for location is a point in a room. /T_hat point can be de/f_ined in terms of coordinates within the room, by the room itself, the /f_loor of the building the room is in, the building, the city, etc. (Schilit and /T_heimer, 1994). It is not clear how this categorization helps to support this notion of hierarchi-cal knowledge. How to represent and model context is still an open ques-tion that researchers are addressing.8.3  WHAT IS CONTEXT AWARENESS?Context-aware computing was /f_irst discussed in 1994 by Schilit and /T_heimer as so/f_tware that ‚Äúadapts according to its location of use, the col-lection of nearby people and objects, as well as changes to those objects 
93606_Book.indb   3278/26/09   1:39:52 PM 328  /UIstop  Anind K. Deyover time.‚Äù However, it is commonly agreed that the /f_irst research inves-tigation of context-aware computing was the Olivetti Active Badge (Want et al., 1992) work in 1992. Since then, there have been numerous attempts to describe context-aware computing./T_he /f_irst de/f_inition of context-aware applications given by Schilit and /T_heimer (1994) expanded the idea of context awareness from applications that are simply informed about context to applications that BEBQUthem-selves to context. Context-aware has become somewhat synonymous with other terms: adaptive (Brown, 1996a), reactive (Cooperstock et al., 1995), responsive (Elrod et al., 1993), situated (Hull et al., 1997), context sensitive (Rekimoto et al., 1998), and environment directed (Fickas et al., 1997). Previous de/f_initions of context-aware computing fall into two categories: using context and adapting to context.Let us /f_irst discuss the more general case of using context. Hull et al. (1997) and Pascoe et al. (Pascoe, 1998; Pascoe et al., 1998; Ryan et al., 1998) de/f_ine context-aware computing as the ability of computing devices to detect and sense, interpret and respond to aspects of a user‚Äôs local envi-ronment and the computing devices themselves. Dey et al. (Dey, 1998; Dey et al., 1998; Salber et al., 1999) have de/f_ined context awareness as the use of context to automate a so/f_tware system, to modify an interface, and to provide maximum /f_lexibility of a computational service./T_he following de/f_initions are in the more speci/f_ic ‚Äúadapting to context‚Äù category. Many researchers (Schilit et al., 1994; Brown et al., 1997; Dey and Abowd, 1997; Ward et al., 1997; Abowd et al., 1998; Davies et al., 1998; Kortuem et al., 1998) de/f_ine context-aware applications to be applications that dynamically change or adapt their behavior based on the context of the application and the user. More speci/f_ically, Ryan (1997) de/f_ines them as applications that monitor input from environmental sensors and allow users to select from a range of physical and logical contexts according to their current interests or activities. /T_his de/f_inition is slightly more restric-tive than the previous one by identifying the method in which applica-tions acts upon context. Brown (1998) de/f_ines context-aware applications as applications that automatically provide information and/or take actions according to the user‚Äôs present context as detected by sensors. He also takes a narrow view of context-aware computing by stating that these actions can take the form of presenting information to the user, executing a pro-gram according to context, or con/f_iguring a graphical layout according to context. Fickas et al. (1997) de/f_ine environment-directed (practical syn-onym for context-aware) applications as applications that monitor changes 
93606_Book.indb   3288/26/09   1:39:52 PM Context-Aware Computing  /UIstop  329in the environment and adapt their operation according to prede/f_ined or user-de/f_ined guidelines. Dey and Abowd (2000a) de/f_ine context aware-ness more generally with the following statement:A system is context-aware if it uses context to provide relevant information and/or services to the user, where relevancy depends on the user‚Äôs task./T_his de/f_inition is more general and inclusive to include all context-aware applications, including both those that adapt to context and those that display the user‚Äôs context.8.3.1  Categorization of Features for Context-Aware ApplicationsIn a further attempt to help de/f_ine the /f_ield of context-aware computing, researchers have categorized features of context-aware applications. /T_here have been three attempts to develop such a taxonomy. /T_he /f_irst was pro-vided by Schilit et al. (1994) and had two orthogonal dimensions: whether the task is to obtain information or to execute a command, and whether the task is executed manually or automatically. Applications that retrieve information for the user manually based on available context are classi/f_ied as QSPYJNBUFTFMFDUJPO applications. Proximate selection is an interaction technique where a list of objects (printers) or places (oÔ¨Éces) is presented and where items relevant to the user‚Äôs context are emphasized or made easier to choose. Applications that retrieve information for the user auto-matically based on available context are classi/f_ied as BVUPNBUJDDPOUFYUVBMSFDPO“áHVSBUJPO. It is a system-level technique that creates an automatic binding to an available resource based on current context. Applications that execute commands for the user manually based on available context are classi/f_ied as DPOUFYUVBMDPNNBOE applications. /T_hey are executable services made available due to the user‚Äôs context or whose execution is modi/f_ied based on the user‚Äôs context. Finally, applications that execute commands for the user automatically based on available context use DPOUFYUUSJHHFSFEBDUJPOT. /T_hey are services that are executed automatically when the right combination of context exists, and are based on simple if-then rules.More recently, Pascoe (1998) proposed a taxonomy of context-aware fea-tures. /T_here is considerable overlap between the two taxonomies but some crucial diÔ¨Äerences as well. Pascoe‚Äôs taxonomy was aimed at identifying the core features of context awareness, as opposed to the previous taxonomy, 
93606_Book.indb   3298/26/09   1:39:52 PM 330  /UIstop  Anind K. Deywhich identi/f_ied classes of context-aware applications. In reality, the fol-lowing features of context awareness map well to the classes of applications in the Schilit taxonomy. /T_he /f_irst feature is DPOUFYUVBMTFOTJOH and is the ability to detect contextual information and present it to the user, augment-ing the user‚Äôs sensory system. /T_his is similar to QSPYJNBUFTFMFDUJPO, except that in this case, the user does not necessarily need to select one of the context items for more information (i.e., the context may be the informa-tion required). /T_he next feature is DPOUFYUVBMBEBQUBUJPO and is the ability to execute or modify a service automatically based on the current context. /T_his maps directly to Schilit‚Äôs DPOUFYUUSJHHFSFEBDUJPOT. /T_he third feature, DPOUFYUVBMSFTPVSDFEJTDPWFSZ, allows context-aware applications to locate and exploit resources and services that are relevant to the user‚Äôs context. /T_his maps directly to BVUPNBUJDDPOUFYUVBMSFDPO“áHVSBUJPO. /T_he /f_inal fea-ture, DPOUFYUVBMBVHNFOUBUJPO, is the ability to associate digital data with the user‚Äôs context. A user can view the data when he is in that associated context. For example, a user can create a virtual note providing details about a broken television and attach the note to the television. When another user is close to the television or attempts to use it, he will see the virtual note le/f_t previously. /T_his feature does not exist in Schilit‚Äôs taxonomy.Pascoe and Schilit both list the ability to exploit resources relevant to the user‚Äôs context, the ability to execute a command automatically based on the user‚Äôs context, and the ability to display relevant information to the user. Pascoe goes further in terms of displaying relevant information to the user by including the display of context, and not just information requiring fur-ther selection (e.g.,showing the user‚Äôs location vs. showing a list of printers and allowing the user to choose one). Pascoe‚Äôs taxonomy has a category not found in Schilit‚Äôs taxonomy: DPOUFYUVBMBVHNFOUBUJPO, or the ability to associate digital data with the user‚Äôs context. Finally, Pascoe‚Äôs taxonomy does not support the presentation of commands relevant to a user‚Äôs context. /T_his presentation is called DPOUFYUVBMDPNNBOETin Schilit‚Äôs taxonomy.Dey and Abowd (2000a) combine the ideas from these two taxonomies and take into account the three major diÔ¨Äerences. Similar to Pascoe‚Äôs tax-onomy, it is a list of the context-aware features that context-aware applica-tions may support. /T_here are three categories: 1. 1SFTFOUBUJPOof information and services to a user 2. Automatic FYFDVUJPOof a service 3. 5BHHJOHof context to information for later retrieval
93606_Book.indb   3308/26/09   1:39:52 PM Context-Aware Computing  /UIstop  331Presentation is a combination of Schilit‚Äôs proximate selection and con-textual commands. To this, Pascoe‚Äôs notion of presenting context (as a form of information) to the user has been added. Examples of the /f_irst feature is a mobile computer that dynamically updates a list of closest printers as its user moves through a building, a peripheral display of activity in a remote location, and awareness of the location or activity of a friend or family member. Automatic execution is the same as Schilit‚Äôs context-triggered actions and Pascoe‚Äôs contextual adaptation. Examples of the second feature is when the user prints a document and it is printed on the closest printer to the user, alarms being triggered to indicate that activity in a remote location has increased beyond a threshold, and mobile texting a friend automatically when she is within a certain dis-tance of the friend. Tagging is the same as Pascoe‚Äôs contextual augmenta-tion. An example of the third feature is when an application records the names of the documents that the user printed, the times when they were printed and the printer used in each case. /T_he user can than retrieve this information later to help him determine where the printouts are what he forgot to pick up./T_his last taxonomy has two important distinguishing characteristics: the decision not to diÔ¨Äerentiate between information and services, and the removal of the exploitation of local resources as a feature. In most cases, it is too diÔ¨Écult to distinguish between a presentation of information and a presentation of services. For example, Schilit writes that a list of printers ordered by proximity to the user is an example of providing information to the user. But whether that list is a list of information or a list of services depends on how the user actually uses that information. For example, if the user just looks at the list of printers to become familiar with the names of the printers nearby, she is using the list as information. However, if the user chooses a printer from that list to print to, she is using the list as a set of services. Rather than try to assume the user‚Äôs state of mind, we chose to treat information and services in a similar fashion./T_his taxonomy also does not use the exploitation of local resources or resource discovery, as a context-aware feature, but instead includes this as part of the /f_irst two categories. Resource discovery is the ability to locate new services according to the user‚Äôs context. /T_his ability can be seen as no diÔ¨Äerent than choosing services based on context. For example, when a user enters an oÔ¨Éce, his or her location changes and the list of nearby printers changes. /T_he list changes by having printers added, removed, or being reordered (e.g., by proximity). Is this an instance of resource 
93606_Book.indb   3318/26/09   1:39:52 PM 332  /UIstop  Anind K. Deyexploitation or simply a presentation of information and services? Rather than giving resource discovery its own category, it was split into two of the existing categories: presenting information and services to a user and automatically executing a service. When an application presents informa-tion to a user, it falls into the /f_irst category, and when it automatically executes a service for the user, it falls into the second category.De/f_initions of context aware have provided researchers with a way to conclude whether an application is context aware or not. /T_his has been useful in determining what types of applications to focus on. Categorizations of context-aware features provide two main bene/f_its. /T_he /f_irst is that it further speci/f_ies the types of applications that researchers provide support for. /T_he second bene/f_it is that it describes the types of features that developers should be thinking about when building context-aware applications.8.4  CONTEXT-AWARE APPLICATIONSWith a basic understanding of context and context awareness, this section discusses historical context-aware applications that originated the /f_ield of context awareness, and more contemporary applications.8.4.1  Historical Context-Aware ApplicationsAs noted earlier, the Active Badge system (Want et al., 1992) is commonly viewed as the /f_irst context-aware system. In this application (Figure 8.1), users wore Active Badges, infrared transmitters that transmitted a unique identity code. As users moved throughout their building, a database was being dynamically updated with information about each user‚Äôs current location, the nearest phone extension, and the likelihood of /f_inding some-one at that location (based on age of the available data). When a phone call was received for a particular user, the receptionist used the database to forward the call to the last known location of that user, rather than blindly forwarding the call to the user‚Äôs oÔ¨Éce, where he may not be located. /T_his application, along with much of the early work in context-aware comput-ing was focused on location-aware computing, or, as they are more com-monly known today, MPDBUJPOCBTFETFSWJDFT./T_he other seminal work in context-aware computing was performed by the Ubicomp group at (then) Xerox Palo Alto Research Center (PARC), in the early 1990s. Schilit et al. coined the term DPOUFYUBXBSFOFTT, and built a system architecture that supported the building of context-aware 
93606_Book.indb   3328/26/09   1:39:53 PM Context-Aware Computing  /UIstop  333
applications (1994, 1995), as a part of the highly in/f_luential PARCTAB work (Want et al., 1995). In the PARCTAB work, the provided systems pres-ent information to users based on proximity to services (e.g., printers and people), turn devices on or recon/f_igure them based on the people who are nearby, present information or services based on where the user is located, and automatically execute a service in a particular manner depending on movement or proximity of users to speci/f_ic rooms or devices.Since then, although there has been work that has applied context aware-ness in a huge number of domains, there are three canonical classes of applications: tour guides, reminder systems, and environmental control.8.4.1.1  Tour GuidesAs described earlier, the mobile tour guide is the most canonical context-aware application. When interacting with a mobile tour guide system, users carry a portable computing device as they travel through some area such as a museum or a city. As users go to diÔ¨Äerent exhibits or tourist locations, their mobile devices present information relevant to those loca-tions. Although early systems focused heavily on location (Bederson, 1996; Abowd et al., 1997), later systems took into account users‚Äô interests and the amount of time they spent at a tourist location or the amount of time they ProbabilityLocationNamePerson 1      101        100%Person 2      242        80%Person 3      242        70%Person 4      103        MondayPerson 5      135        100%Person 6      228        AWAYPerson 7      217        2:40
FIGURE 8.1 Rendition of the original Active Badge application showing the location and certainty of Active Badge wearers.
93606_Book.indb   3338/26/09   1:39:53 PM 334  /UIstop  Anind K. Deyhad to tour in choosing what information to show (Brown, 1996b; Davies et al., 1998), and what tourist locations to recommend.8.4.1.2  RemindersA second canonical context-aware application is the context-aware reminder system. Context-aware reminders present reminders to indi-viduals, triggered by changes in context. An alarm clock uses a simple contextual trigger, time, to set oÔ¨Ä an alarm, a simple form of reminder. Similarly, location-based services can deliver reminders when users are at a particular location or within some distance of each other (Schilit, 1995). More sophisticated reminder systems use a combination of diÔ¨Äerent forms of context to trigger reminders. In being more sophisticated, these applica-tions can remind users more appropriately, delivering the right reminder in the right situation (Dey and Abowd, 2000b; Ludford et al., 2006).8.4.1.3  Environmental ControlsA third canonical context-aware application is a system to control an envi-ronment‚Äôs heating and lighting, generally for the purposes of being energy eÔ¨Écient or saving users eÔ¨Äort. As many people o/f_ten leave lights on unnec-essarily, or have to manually change heating or cooling levels to remain comfortable, many systems have been developed that can control these on behalf of users. Some are based on simple rules (Elrod et al., 1993), whereas others use more sophisticated mechanisms to learn how users use a space and sets heating and lighting accordingly (Mozer, 1998).8.4.2  Contemporary Context-Aware ApplicationsAlthough these context-aware applications may seem quite simple today, researchers still continue to build these applications. In fact, many of these are starting to move out of the world of research and into commercial use.Beyond these three canonical domains, researchers and developers have built applications in a wide variety of domains, includingInterpersonal communications including instant messaging (Avra-thamiet al., 2008)Interruptibility in the oÔ¨Éce and while mobile (Fogarty et al., 2005; tIqbal et al., 2005)Phone calls (Schmidt et al., 2000)tHealth care (Bardram and N√∏rskov, 2008)t
93606_Book.indb   3348/26/09   1:39:53 PM Context-Aware Computing  /UIstop  335Location-aware systemstAgriculture (Kj√¶r, 2008)tApplication personalization (Weiss et al., 2008)tTo peripheral displays of information (Wisneski et al., 1998)t/T_his is by no means an exhaustive list. Rather than go into the details of each of these applications, or to provide a de/f_initive list, both of which will be outdated soon, it is more important to point out that the /f_ield of context-aware computing is headed in the right direction. It is moving away from toy problems of little consequence to real users toward critical and fundamental issues that address aspects of everyday life and critical situations. /T_he /f_ield has crossed a threshold in maturity, and researchers and developers are focusing their attention not on showing what is pos-sible, but on what is compelling, and we should all be excited by this.Another important point to note is that a greater number of research-ers are building context-aware applications, but their focus is not context awareness. /T_hey are simply building a useful, compelling application that just happens to be context-aware. Although this may seem like a small distinction, context awareness will certainly have reached an appropriate level of maturity when it is commonly viewed as an application feature, rather than as the focus of an application.8.5  DESIGNING AND IMPLEMENTING CONTEXT-AWARE APPLICATIONSGiven the focus on building compelling context-aware applications, it is important to understand how designers and developers of context-aware applications should think about building them, and what types of tools exist for building applications.8.5.1  Design Process/T_he design process for building the vast majority of context-aware appli-cations can be boiled down to a pretty simple idea: /f_igure out what context your application needs and when you receive that context, /f_igure out what you want to do with it. Unfortunately, it takes a little more work than this to build a context-aware application (see Table 8.1 for an example). /T_he /f_irst step in building an application is context TQFDJ“áDBUJPO‚Äîdetermining 
93606_Book.indb   3358/26/09   1:39:54 PM 336  /UIstop  Anind K. Dey
what context-aware behaviors your application will have and in which situations (or collections of context) each behavior should be executed and how. /T_his step is o/f_ten performed by studying a combination of the domain and the expected users of the application, and determining what services would be bene/f_icial. /T_he second step is context BDRVJTJUJPO‚Äî determining what hardware and/or so/f_tware sensors are required to acquire the context identi/f_ied in the /f_irst step. /T_his includes installing the so/f_tware on the appropriate platform, understanding exactly what type of information the sensor provides, using an application program-ming interface (API) (if any) to communicate with the sensor, deter-mining how to query the sensor, and how to be noti/f_ied when changes occur, and, if applicable, store the context, combine it with other context, and perform inference on the sensor data to achieve some higher-level understanding of the situation. /T_he third step is context EFMJWFSZ‚Äî specifying how context should be delivered from the sensors to the (possibly remote) applications that will use the context. /T_he fourth step is context SFDFQUJPO‚Äîhaving the application specify what context it is interested in (possibly indicating from which sensors) and receiving that context. /T_his includes converting the context into a form usable by the application through interpretation, and then analyzing the context to determine whether this context, when combined with other available context, describes a relevant user situation for the application. Finally, the last step is BDUJPO‚Äîanalyzing all the received context to determine TABLE 8.1 Steps for Building an Application for Sharing Awareness of Remote Room Activity4UFQ&YBNQMF1 Speci/f_ication Light up diÔ¨Äerent colored light emitting devices (LEDs) (red, yellow, green) depending on the amount of activity in remote location2 Acquisition Write so/f_tware to analyze frame-to-frame changes in video camera image of remote location, and install camera3 Delivery Make the percentage change in activity available to interested applications, using publish-subscribe approach4ReceptionApplication wants to receive all changes in activity above a particular threshold5 Action Application analyzes received activity changes, and lights up the appropriate LEDs (red, low activity; yellow, moderate activity; green, high activity)
93606_Book.indb   3368/26/09   1:39:54 PM Context-Aware Computing  /UIstop  337what context-aware behavior to execute, and then execute it. Although applications can be more complex than this (see the section on issues in developing applications), most applications can be described and built using this simple design process (or multiple instances of it for applica-tions with multiple context-aware behaviors).8.5.2  Tools for BuildingBased on this design process, a number of toolkits or so/f_tware architec-tures have been built to support the building of context-aware applications. Although every application developer needs to perform the speci/f_ication step for his/her application, the rest of the design process may or may not be relevant depending on what the underlying toolkit oÔ¨Äers the developer. In the best-case scenario, the speci/f_ication of the relevant situations and the corresponding context-aware behaviors would be enough to cause context to /f_low from the appropriate sensors to applications, with relevant inferencing and interpretation occurring, and then the correct context-aware behavior being executed.In general, there are three main alternatives used for building appli-cations: no support, a widget- or object-based system (Figure 8.2), and a blackboard-based system (Figure 8.3). /T_he vast majority of systems, par-ticularly those built before 1998, were built with OPBSDIJUFDUVSBMTVQQPSU or with highly customized support for a small class of applications. For each of these applications, the entire design process must be applied and so/f_tware implemented to support the process on an individual basis. Very little, if any, code can be reused between application instances, as most of the code is customized for each application.
Widget‚Ä¶ApplicationApplicationApplication‚Ä¶
SensorWidgetSensorWidgetSensorWidgetSensorFIGURE 8.2 Widget-based system for building context-aware applications.
93606_Book.indb   3378/26/09   1:39:55 PM 338  /UIstop  Anind K. Dey
Before 1998, the exceptions were Schilit‚Äôs (1995) Context-Aware Computing Architecture upon which most, if not all, the context-aware applications at Xerox PARC were based on, and the University of Kent‚Äôs Stick-e Notes platform (Brown, 1996b). The Context-Aware Computing Architecture moved away from having to rewrite loca-tion sensing modules and context delivery from scratch each time, and instead allowed application developers to focus on the application details of what should be done when a user or users were in a particu-lar location. The Stick-e Notes platform similarly provided a common infrastructure for building context-aware applications, but focused on making the authoring of applications accessible to end users (by mak-ing the process similar to that of constructing web pages). However, neither system was used much beyond the groups that developed these systems, so reuse was naturally limited. These systems showed the promise of context-aware systems and pointed the way toward reus-able infrastructure.Since 1998, a large number of context-aware infrastructures have been built, using either the widget-based approach or the blackboard-based approach. /T_hese infrastructures were developed primarily to make con-text-aware system components reusable, to provide a persistent executable infrastructure that could support multiple applications running at the same time and to simplify the building of context-aware applications./T_he general XJEHFUCBTFEBQQSPBDI is based on the model of building graphical user interfaces (GUIs). In the early 1980s, there was no common SensorSensorWrapper‚Ä¶ApplicationApplicationApplication‚Ä¶Blackboard
SensorWrapperSensorFIGURE 8.3 Blackboard-based system for building context-aware applications.
93606_Book.indb   3388/26/09   1:39:55 PM Context-Aware Computing  /UIstop  339model for handling user input, and no support for reuse of widgets. By the mid 1980s, we began to see GUI toolkits that supported reuse, includ-ing infrastructure for handling input events and a component or widget library with widgets that could be used across multiple applications. /T_hese toolkits made it fundamentally easier to build GUIs and provided the fol-lowing bene/f_its:/T_hey hide speci/f_ics of physical interaction devices from the applica-ttion‚Äôs programmer so that those devices can change with minimal impact on applications. Whether the user points and clicks with a mouse or /f_ingers and taps on a touchpad or uses keyboard shortcuts does not require any changes to the application./T_hey manage the details of the interaction to provide applications twith relevant results of user actions. Widget-speci/f_ic dialogue is handled by the widget itself, and the application o/f_ten only needs to implement a single callback to be noti/f_ied of the result of an interac-tion sequence./T_hey provide reusable building blocks of presentation to be de/f_ined tonce and reused, combined, and/or tailored for use in many applica-tions. Widgets provide encapsulation of appearance and behavior. /T_he programmer does not need to know the inner workings of a wid-get to use it.In a similar manner, in the late 1990s and early 2000s, context-aware toolkits, such as the Context Toolkit (Dey et al., 2001) and Java Context-Aware Framework (Bardram, 2005) adopted a similar model and took a context widget approach. A context widget is a so/f_tware component that provides applications with access to context information from their oper-ating environment. In the same manner GUI widgets insulate applications from some presentation concerns, context widgets insulate applications from context acquisition concerns by wrapping sensors with a uniform interface. Context widgets provide the following bene/f_its:/T_hey provide a separation of concerns by hiding the complexity of tthe actual sensors used from the application. Whether the presence of people is sensed using Active Badges, /f_loor sensors, video image processing, or a combination of these should not impact the design of the application.
93606_Book.indb   3398/26/09   1:39:55 PM 340  /UIstop  Anind K. Dey/T_hey abstract context information to suit the expected needs of tapplications. A widget that tracks the location of a user within a building or a city noti/f_ies the application only when the user moves from one room to another, or from one street corner to another, and does not report less signi/f_icant moves to the application. Widgets provide abstracted information that we expect applications to need most frequently./T_hey provide easy access to context data through querying and noti-t/f_ication mechanisms (i.e., publish-subscribe) available through a common, uniform interface for accessing context. No matter what type of context is being sensed from the environment, all widgets make it available in the same manner./T_hey provide reusable and customizable building blocks of context tsensing. A widget that tracks the location of a user can be used by a variety of applications, from tour guides to oÔ¨Éce awareness systems. Furthermore, context widgets can be tailored and combined in ways similar to GUI widgets. For example, a Presence widget senses the presence of people in a room. A Meeting widget may be built on top of a Presence widget and assume a meeting is beginning when two or more people are present.In addition to context widgets, these infrastructures provided compo-nents for combining context information, making higher-level inferences from low-level context, collecting or aggregating context from multiple sources, and discovering appropriate components to use. As a collection, they not only provide components that can be composed to create indi-vidual applications, but serve as a persistent distributed infrastructure that can serve multiple applications at the same time. /T_his approach is becoming much more mainstream, with Microso/f_t Windows 7‚Äôs inclusion of a Sensor and Location Platform that provides an API to access location and light sensors, among others, to enable the building of context-aware applications./T_he main contrasting approach to the widget approach is the black-board-based approach. Blackboards originated from the Linda program-ming language and tuple space model from the early 1980s (Gerlernter, 1985). Linda supported a small number of functions for interacting with a globally accessible persistent storage system, the tuple space. Executable 
93606_Book.indb   3408/26/09   1:39:56 PM Context-Aware Computing  /UIstop  341components can place information into the storage system, and read or remove this information. Later blackboard systems added the ability to notify components when information of interest has been added to the blackboard.A number of infrastructures that support the building of context-aware applications use this blackboard approach including EQUIP (Greenhalgh, 2002), the Event Heap (Johanson and Fox, 2002), and the Open Agent Architecture (Cheyer and Martin, 2001). In contrast to the widget-based approach in which requests for information are o/f_ten made directly to a particular component or indirectly through a discovery mechanism, the blackboard approach allows requests for information to come to and be handled by a single, centralized tuple space. In general, the blackboard-based context systems tend to be straightforward implementations of tra-ditional blackboard systems, optimized for performance and augmented to support XML encoding and decoding of information.Both approaches have their advantages and disadvantages. Blackboard approaches are o/f_ten too ineÔ¨Écient particularly as the amount of data in the tuple space grows and searching for speci/f_ic tuples becomes harder, can o/f_ten be too tightly integrated with the applications they are support-ing to make it easy to modify those applications, can o/f_ten suÔ¨Äer from synchronization issues as the order of tuple space operations is not neces-sarily guaranteed, and generally do not support complex data structures. /T_he widget-based model can o/f_ten be too rigid, from a robustness and con/f_igurability standpoint, to handle the dynamic nature of context-aware applications that need to connect and disconnect from diÔ¨Äerent compo-nents as a user moves around and his/her context changes, and can pro-vide a more complex model to deal with from an application developer‚Äôs point of view.However, these two approaches are not mutually exclusive either. From an infrastructure developer‚Äôs perspective, both approaches require sources of context input, either to create widgets around or to place context into a tuple space. /T_he context widget approach provides a nice model for utiliz-ing context sources, regardless of which approach is actually being used to support applications. On the other hand, the blackboard model pro-vides a simpler abstraction for these context sources to actually deliver their context to context consumers. /T_his model can be used in the widget approach, where widgets can be told to connect to a particular centralized component (e.g., a discovery system), which then determines how to route 
93606_Book.indb   3418/26/09   1:39:56 PM 342  /UIstop  Anind K. Deycontext from a widget to a consumer(s). From an application developer‚Äôs perspective, the ability to both abstract away the details of the underlying sensing technology via context widgets and to not worry about making individual connections to components via blackboards or context widgets and a discovery mechanism, makes things easier. In fact, there has been some recent work in augmenting the context widget model to include an advanced discovery and connection mechanism that leverages the advan-tages of both the context widget and blackboard approaches (Dey and Newberger, 2009).8.6  ISSUES TO CONSIDER WHEN BUILDING CONTEXT-AWARE APPLICATIONSNow that we have discussed the design process and diÔ¨Äerent approaches for supporting context-aware applications, we will discuss aspects that designers need to consider when building applications.8.6.1  Context Is a Proxy for Human Intent/T_he holy grail of context awareness is to divine or understand human intent. Applications would use this human intent to adapt appropriately by providing information or taking some actions. However, context informa-tion is only a proxy for this intent. In museum tour guides, a user standing in front of a particular exhibit may not represent interest in the exhibit, but may simply represent that a user has her back turned to the exhibit and is having a conversation with a friend there. Additional context is required to understand human intent. /T_his is true for almost any situa-tion and application. No matter how much context you can acquire for an application, you will always need more to truly determine the intent of the user. When designing an application, a developer must appropri-ately scope the types of situations that the application should sense and understand, realizing that the application may make an incorrect adapta-tion when a situation arises that is outside the scope or understanding of the designed application. Applications should express a certainty in their beliefs about their sensed information and inferences, as the Active Badge application did (Figure 8.1), and, if that certainty is not above an appro-priate threshold, ask for con/f_irmation of this information before taking action, exempli/f_ied by the Microso/f_t agent Clippy and the Lookout system (Horvitz, 1999).
93606_Book.indb   3428/26/09   1:39:56 PM Context-Aware Computing  /UIstop  3438.6.2  Context InferencingContext-aware systems take data as input, and then determine how to adapt or respond to these data. Context inferencing is the act of making sense of these input data from sensors and other sources, to determine or infer the user‚Äôs situation. Once the user‚Äôs situation has been inferred, then the application can take an appropriate action. As described in the previ-ous subsection, the sensed input is o/f_ten not enough to infer the situation appropriately, so this brings up additional issues such as how to resolve ambiguity or uncertainty in context, and the role of rules and machine learning. /T_hese issues are discussed in the following subsections.8.6.3  Context AmbiguityContext-aware systems have many sources of ambiguity or errors: context sensors can sense incorrectly, fail, or be unsure about what they sensed; context inferencing systems can inaccurately reach conclusions about a situation or be unsure about their inferences; and applications can take an incorrect action or be unsure about what action to take. However, the vast majority of context-aware systems pretend that this source of ambi-guity does not exist, and behave as if there are no errors or ambiguity. One important decision for designers of context-aware infrastructures and applications is whether to model context as being ambiguous or not. Acting as if there is no ambiguity in a system simpli/f_ies the design and use of a system, but leads to brittle systems in the face of ambiguity. In contrast, accepting that ambiguity exists means that the modeled systems better represent the real world, but are more challenging to create and use. Ambiguity is o/f_ten speci/f_ied as a single number representing the likeli-hood or certainty of a particular context value.One approach to dealing with context ambiguity is to combine multiple disparate sources of the same type of context to improve the accuracy or dependability of the provided context. /T_his is commonly known as sensor fusion (Wu, 2003). For example, in activity recognition, a hidden Markov model (see Chapter 9) can be used with diÔ¨Äerent sensors and the fused results can be represented as a confusion matrix over the set of possible activities (Lester et al., 2006). An alternate approach is to allow users to manually disambiguate ambiguity in context (Dey and MankoÔ¨Ä, 2005). Rather than rely on an automated approach, this approach leverages a user‚Äôs knowledge of the situation to help resolve and remove any ambiguity in the sensed or inferred context. A user may be presented with, for example, 
93606_Book.indb   3438/26/09   1:39:56 PM 344  /UIstop  Anind K. Deyan /-best list, a list of the / most likely interpretations of context, ranked by likelihood, and asked to select the ‚Äúcorrect‚Äù interpretation.8.6.4  Rules versus Machine LearningContext-aware applications are most commonly designed from a set of if-then rules: JG the application senses a particular situation, UIFO it should perform a particular action. Rules are easy to create because all the knowl-edge for each rule is represented in a homogenous format, and rule-based systems are relatively easy to build because there is a large number of exist-ing rules engines that determine when a rule has been satis/f_ied. Rules are also relatively intuitive and are thus easy to work with. However, rule-based systems also have some disadvantages: they are prone to con/f_licts between rules due to hidden dependencies between rules, making it challenging to understand the impact of adding or removing a rule particularly as the number of rules grows larger‚Äîthey are notoriously diÔ¨Écult to debug when the number of rules grows larger because it is diÔ¨Écult to understand or fol-low the /f_low of control between rules, and they are a source of ineÔ¨Éciency because a rules engine must examine all rules to determine which rule, if any, should be executed. Finally, rules are rigid, meaning that they are also brittle. Small exceptions to a rule mean that a rule will not be /f_ired or a dif-ferent rule will be /f_ired (than the one the developer would like).A common alternative approach is to apply machine learning. Rather than create a series of rules about how an application should adapt its behavior, instead, an application developer can collect data on the types of situations that a user will experience and the types of adaptation desired. Machine learning can then be applied to learn the QSPCBCJMJTUJD relationships between the situations and adaptations, rather than have these relationships be hard-coded and deterministic. /T_his still requires that the application or support-ing infrastructure provide the ability to perform context inferencing to map the sensor data to user situations. Alternatively, machine learning can be applied to learn the relationships between the sensor data and the adapta-tions, skipping the middle step of context inferencing. /T_he disadvantages of applying machine learning are that these relationships may be diÔ¨Écult to learn, may require a large amount of data to learn, are diÔ¨Écult to debug, and may not be intuitive to the application developer or end user.8.6.5  PrivacyContext-aware systems have the capability and o/f_ten the need to col-lect tremendous amounts of information about individuals. An inherent 
93606_Book.indb   3448/26/09   1:39:56 PM Context-Aware Computing  /UIstop  345danger in collecting this information is in releasing information to the wrong person or during the wrong situation. In particular, as context systems are distributed across a computer network or networks, there is a real concern that context information could either be disseminated inappropriately or disseminated to a component that is not completely trustworthy, and may disseminate the information further. Developers of context-aware infrastructure need to ensure that data are only shared between components that actually have a real need to share and use that information. Similarly, developers of context-aware applications need to ensure that a user‚Äôs privacy is maintained and that information is not being used inappropriately, or in a manner that the user deems inappro-priate. /T_he issue of privacy is very complex, and is the subject of another chapter within this book. /T_here are no easy answers about how to sup-port privacy.8.6.6  EvaluationContext-aware applications, like most ubicomp applications, are diÔ¨Écult to evaluate. Because context-aware applications are context-dependent, they can rarely be tested in a laboratory environment. /T_he contexts or situations of interest o/f_ten cannot be simulated. Even in /f_ield evalua-tions, these situations may be rare enough that they can be challenging to test and evaluate in anything other than a qualitative manner. How to evaluate such applications has been the subject of much ongoing research (e.g., Carter et al., 2008; O‚ÄôNeill et al., 2007; Oh et al., 2007; Scholtz and Consolvo, 2004).8.6.7  End User Issues/T_he goal of any context-aware application is to provide users with appro-priate support based on their current situation. Until recently, the devel-opment of context-aware applications has limited user involvement to observation in the formative stages and being active users a/f_ter deploy-ment. However, there are two end user issues that developers should consider when building their applications. /T_he /f_irst is JOUFMMJHJCJMJUZ of applications‚Äîhow a user forms an understanding of a context-aware application‚Äôs behavior (Bellotti and Edwards, 2001). As context primar-ily consists of implicit input, it is much more challenging for a user to understand that an application took some action based on nonexplicit input, to understand what nonexplicit input that was, and to understand what action was even taken (in some cases). Unlike typical non-ubicomp 
93606_Book.indb   3458/26/09   1:39:56 PM 346  /UIstop  Anind K. Deyapplications, context-aware applications do not always have a mechanism for providing appropriate feedback to users to indicate that some action has been taken or why. /T_his is challenging enough for rules-based systems, but even more challenging for machine learning‚Äìbased systems because they are usually not amenable to generating explanations. /T_his is an active area of research (e.g., Assad et al., 2007; Dey and Newberger, 2009; Lim et al., 2009; Tullio et al., 2007), with a workshop series on the topic of explanation-aware computing.A second end-user issue of concern is DPOUSPM. Developers o/f_ten design their applications based on knowledge of a particular domain. However, context-aware applications also need to be personalized to their users, rather than use a ‚Äúone-size-/f_its-all‚Äù approach. Rather than developing individual variations of applications for each individual user, developers should consider putting the control for how an application should behave in the hands of users, that is, letting users create the rules that govern a context-aware application‚Äôs behavior. Particularly for long-lasting applica-tions when there can be many changes (to the environment, to the situa-tions that a user experiences, and/or to the preferences that a user has for application behavior), users should have the ability to modify and custom-ize the application to their needs. For example, iCAP allows end users to visually create rules-based context-aware applications (Dey et al., 2006),  and a CAPpella supports end users in building simple context-aware applications using a programming by demonstration approach (Dey et al., 2004). By addressing both intelligibility and control, developers can sig-ni/f_icantly increase the usability of context-aware applications.8.7  CHALLENGES IN WRITING ACADEMIC PAPERS ON CONTEXT AWARENESSTo complete this chapter, a discussion of the pitfalls that researchers o/f_ten fall into when writing about context-aware systems is presented. /T_he two most common topics in context-aware research are applications and infrastruc-ture, and the discussion of pitfalls will center around these two topics.From an application standpoint, there are two main issues that authors continue to have when writing papers about context awareness. /T_he /f_irst is building one of the canonical applications described above (tour guide, reminder system, environmental control) without a novel contribution. Far too many researchers build a simple prototype of one of these applications, and try to publish a paper about it. With so many papers already published about these applications, it is WFSZEiÔ¨ÉDVMU to make a novel contribution.
93606_Book.indb   3468/26/09   1:39:57 PM Context-Aware Computing  /UIstop  347/T_he second issue is related to the /f_irst issue, but also applies to applica-tion design. It is not enough to just build an application; the application must also have a novel facet to it: whether the application itself is in a novel domain that involves a unique set of challenges, has a unique set of users that brings on some unique challenge, solves a unique and signi/f_icant problem for users, or has some interesting scaling aspects (number of users, number of services provided or amount of context used, or period of deployment that reveals interesting long-term usage characteristics and issues). Not only should the application be built and studied, but in the write-up of the work, the authors NVTU declare their contribution that diÔ¨Äerentiates the work from the vast amount of existing literature on context-aware applications.From a development standpoint, there are numerous context-aware infra-structures that have been built and written about. When designing yet another context infrastructure, there are two pitfalls that researchers tend to fall into. /T_he /f_irst is in failing to make a novel contribution that forms an improve-ment beyond existing infrastructures, and the second is in failing to dem-onstrate that the contribution is actually a contribution. First, with so many toolkits and infrastructures that have been written about that make it easier to build context-aware applications, or that better support a particular issue (e.g., privacy, modeling, ambiguity) or application domain, it is challenging to make a novel contribution. /T_he biggest pitfall is to ignore the vast literature and to reinvent the wheel, claiming a contribution where an existing system already does what the proposed system is claiming to do. Much of this can be addressed in the planning stages for a research project, simply by perform-ing an in-depth literature review‚Äîsee Bauldauf et al. (2007) and Chen and Kotz (2000) as a potential starting point. O/f_ten, a new infrastructure is built to support some application because the appropriate existing infrastructures are either not publicly available or the existing infrastructures are determined to not be appropriate. Researchers then try to publish the infrastructure that was mainly built to support research and development of a particular application, and the novelty of the infrastructure is marginal at best./T_he second pitfall that infrastructure researchers fall into is failing to demonstrate the contribution of their novel infrastructure or novel aspects of their infrastructure. If your infrastructure makes it faster to build context-aware applications or easier to build context-aware applications, you must either provide a well-reasoned argument why this is the case, or better yet, perform some evaluation that concretely demonstrates that the infrastructure has this bene/f_it. If your infrastructure addresses a novel or interesting issue such as privacy or ambiguity, you must demonstrate how 
93606_Book.indb   3478/26/09   1:39:57 PM 348  /UIstop  Anind K. Deyyour infrastructure addresses the problem in the context of an actual appli-cation. Too o/f_ten, authors describe their infrastructure and either neglect to describe an application built with the infrastructure or leave too little space in which to adequately describe the application. When writing about the infrastructure, do not make the mistake of describing the entire infrastruc-ture in great detail‚Äîthat takes too much space. Instead, describe the novel aspects in detail, and provide more cursory details of the less novel aspects. /T_hen, be sure to save space for a rigorous evaluation, demonstrating that the infrastructure provides the novel bene/f_its that you are claiming.8.8  SUMMARY/T_his chapter introduced the concept of context awareness, a core aspect of ubiquitous computing. It presented a historical perspective on context awareness, including de/f_initions of context and taxonomies of context awareness. It surveyed a wide variety of context-aware applications, and discussed diÔ¨Äerent approaches for building context-aware applications. /T_his chapter highlighted a number of open research questions and challenges for the /f_ield of context-aware computing. Finally, this chapter presented advice to those looking to publish papers and to conduct research in con-text-aware computing, pointing out pitfalls that can be avoided to increase the likelihood of producing novel and publication-worthy research.Context awareness is a central feature of ubicomp systems. Although the /f_ield of context-aware computing is already growing rapidly, as more and more sensors proliferate throughout the world, its growth will accel-erate and its importance will only increase. Addressing the open questions described in this chapter is necessary for a future world of ubicomp.REFERENCESAbowd, G. D., Atkeson, C. G., Hong, J., Long, S., Kooper, R., and Pinkerton, M. (1997). Cyberguide: A mobile context-aware tour guide. "$. 8JSFMFTT/FUXPSLT3(5), 421‚Äì433.Abowd, G. D., Dey, A. K., Orr, R. J., and Brotherton, J. (1998). Context-awareness in wearable and ubiquitous computing. 7JSUVBM3FBMJUZ3, 200‚Äì211.Assad, M., Carmichael, D., Kay, J., and Kummer/f_ield, B. (2007). PersonisAD: Distributed, active, scrutable model framework for context-aware services. In 1SPDFFEJOHTPG1FSWBTJWF, pp. 55‚Äì72.Avrahami, D., Fussell, S. R., and Hudson, S. E. (2008). IM waiting: Timing and responsiveness in semi-synchronous communication. 1SPDFFEJOHTPG$4$8, pp. 285‚Äì294.
93606_Book.indb   3488/26/09   1:39:57 PM Context-Aware Computing  /UIstop  349Bardram, J. E. (2005). /T_he Java Context Awareness Framework (JCAF)‚ÄîA service infrastructure and programming framework for context-aware applications. 1SPDFFEJOHTPG1FSWBTJWF, pp. 98‚Äì115.Bardram, J. E., and N√∏rskov, N. (2008). A context-aware patient safety system for the operating room. 1SPDFFEJOHTPG6CJDPNQ, pp. 272‚Äì281Bauldauf, M., Dustdar, S., and Rosenberg, F . (2007). A survey on context-aware sys-tems. *OUFSOBUJPOBM+PVSOBMPG"E)PDBOE6CJRVJUPVT$PNQVUJOH 2(4), 263‚Äì277.Bederson, B. B. (1995). Audio augmented reality: A prototype automated tour guide. In 1SPDFFEJOHTPG)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT	$)*
, New Y ork, ACM Press, pp. 210‚Äì211.Bellotti, V ., and Edwards, K. (2001). Intelligibility and accountability: Human consider-ations in context-aware systems. )VNBO$PNQVUFS*OUFSBDUJPO 16(2), 193‚Äì212.Brown, M. G. (1996a). Supporting user mobility. In 1SPDFFEJOHTPGUIF*'*1$POGFSFODFPO.PCJMF$PNNVOJDBUJPOT	*'*1
, Canberra, Australia, pp. 69‚Äì77.Brown, P . J. (1996b). /T_he Stick-e Document: A framework for creating con-text-aware applications. In 1SPDFFEJOHT PG UIF &MFDUSPOJD 1VCMJTIJOH , pp. 259‚Äì272.Brown, P . J., Bovey, J. D., and Chen, X. (1997). Context-aware applications: From the laboratory to the marketplace. *&&&1FSTPOBM$PNNVOJDBUJPOT4(5), 58‚Äì64.Brown, P . J. (1998). Triggering information by context. 1FSTPOBM5FDIOPMPHJFT2(1), 1‚Äì9.Carter, S., MankoÔ¨Ä, J., Klemmer, S., and Matthews, T. (2008). Exiting the cleanroom: On ecological validity and ubiquitous computing. )$*+PVSOBM 23(1), 47‚Äì99.Chen, G., and Kotz, D. (2000). A survey of context-aware mobile computing research. Dartmouth Computer Science Technical Report TR2000-381, Dartmouth College, Hanover, NH.Cheyer, A., and Martin, D. (2001). /T_he open agent architecture. +PVSOBM PG"VUPOPNPVT"HFOUTBOE.VMUJ"HFOU4ZTUFNT4(1), 143‚Äì148.Clark, H., and Brennan, S. (1991). Grounding in communication. In: Resnick, L., Levine, L., and Teasley, S. (Eds.), 1FSTQFDUJWFTPO4PDJBMMZ4IBSFE$PHOJUJPO. APA Books, Washington, DC, pp. 127‚Äì149.Cooperstock, J. R., Tanikoshi, K., Beirne, G., Narine, T., and Buxton, W . (1995). Evolution of a reactive environment. In 1SPDFFEJOHT PG UIF  "$.$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT	$)*
, pp. 170‚Äì177.Davies, N., Mitchell, K., Cheverst, K., and Blair, G. (1998). Developing a context-sensitive tour guide. 1st Workshop on Human Computer Interaction for Mobile Devices.Dey, A. K. (1998). Context-aware computing: /T_he CyberDesk project. In 1SPDFFEJOHTPGUIF"""*4QSJOH4ZNQPTJVNPO*OUFMMJHFOU&OWJSPONFOUT (AAAI Technical Report SS-98-02), pp. 51‚Äì54.Dey, A. K., and Abowd, G. D. (1997). CyberDesk: /T_he use of perception in con-text-aware computing. In 1SPDFFEJOHTPGUIF8PSLTIPQPO1FSDFQUVBM6TFS*OUFSGBDFT	16*A
, pp. 26‚Äì27.Dey, A. K., and Abowd, G. D. (2000a). Towards a better understanding of context and context-awareness. Workshop on the What, Who, Where, When and How of Context-Awareness, aÔ¨Éliated with the 2000 ACM Conference on Human Factors in Computer Systems (CHI 2000).
93606_Book.indb   3498/26/09   1:39:57 PM 350  /UIstop  Anind K. DeyDey, A. K., and Abowd, G. D. (2000b). CybreMinder: A context-aware system for supporting reminders. 1SPDFFEJOHTPGUIFOE*OUFSOBUJPOBM4ZNQPTJVNPO)BOEIFMEBOE6CJRVJUPVT$PNQVUJOH	)6$
, pp. 172‚Äì186.Dey, A. K., and MankoÔ¨Ä, J. (2005). Designing mediation for context-aware appli-cations. "$.5SBOTBDUJPOTPO$PNQVUFS)VNBO*OUFSBDUJPO 12(1), 53‚Äì80.Dey, A. K., and Newberger, A. (in press). Support for context intelligibility and control. In 1SPDFFEJOHTPG$)*.Dey, A. K., Abowd, G. D., and Salber, D. (2001). A conceptual framework and a toolkit for supporting the rapid prototyping of context-aware applications. )VNBO$PNQVUFS*OUFSBDUJPO 16(2), 97‚Äì166.Dey, A. K., Abowd, G. D., and Wood, A. (1998). CyberDesk: A framework for providing self-integrating context-aware services. ,OPXMFEHF#BTFE4ZTUFNT11(1), 3‚Äì13.Dey, A. K., Hamid, R., Beckmann, C., Li, I., and Hsu, D. (2004). aCAPpella: Programming by demonstration of context-aware applications. In 1SPDFFEJOHTPG$)* pp. 33‚Äì40.Dey, A. K., Sohn, T., Streng, S., and Kodama, J. (2006). iCAP: Interactive con-text-aware prototyping. In 1SPDFFEJOHTPG'PVSUI*OUFSOBUJPOBM$POGFSFODFPO1FSWBTJWF$PNQVUJOHpp. 254‚Äì271.Elrod, S., Hall, G., Costanza, R., Dixon, M., and des Rivieres, J. (1993). Responsive oÔ¨Éce environments. $PNNVOJDBUJPOTPGUIF"$.36(7), 84‚Äì85.Fickas, S., Kortuem, G., and Segall, Z. (1997). So/f_tware organization for dynamic and adaptable wearable systems. In 1SPDFFEJOHT PG UIF TU *OUFSOBUJPOBM4ZNQPTJVNPO8FBSBCMF$PNQVUFST	*48$
, pp. 56‚Äì63.Fogarty, J., Hudson, S. E., Atkeson, C. G., Avrahami, D., Forlizzi, J., Kiesler, S., Lee, J. C., and Y ang, J. (2005). Predicting human interruptibility with sensors. "$.5SBOTBDUJPOTPO$PNQVUFS)VNBO*OUFSBDUJPO 12(1), 119‚Äì146.Franklin, D., and Flaschbart, J. (1998). All gadget and no representation makes Jack a dull environment. In 1SPDFFEJOHTPGUIF"""*4QSJOH4ZNQPTJVNPO*OUFMMJHFOU&OWJSPONFOUT (AAAITechnical Report SS-98-02), pp. 155‚Äì160.Gerlernter, D. (1985). Generative communication in Linda. "$.5SBOTBDUJPOTPO1SPHSBNNJOH-BOHVBHFTBOE4ZTUFNT7(1), 80‚Äì112.Greenhalgh, C. (2002). EQUIP: An extensible platform for distributed collabora-tion. Workshop on Advanced Collaborative Environments 2002.Horvitz, E. (1999). Principles of mixed-initiative user interfaces. In 1SPDFFEJOHTPG$)*, pp. 159‚Äì166.Hull, R., Neaves, P ., and Bedford-Roberts, J. (1997). Towards situated computing. In 1SPDFFEJOHTPGUIFTU*OUFSOBUJPOBM4ZNQPTJVNPO8FBSBCMF$PNQVUFST	*48$
, pp. 146‚Äì153.Iqbal, S. T., Adamczyk, P . D., Zheng, X. S., and Bailey, B. P . (2005). Towards an index of opportunity: Understanding changes in mental workload during task execution. In 1SPDFFEJOHTPGUIF4*($)*$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT, pp. 311‚Äì320.Johanson, B., and Fox, A. (2002). /T_he event heap: A coordination infrastructure for interactive workspaces. In 1SPDFFEJOHTPGUIFUI*&&&8PSLTIPQPO.PCJMF$PNQVUJOH4ZTUFNTBOE"QQMJDBUJPOT, pp. 83‚Äì93.
93606_Book.indb   3508/26/09   1:39:57 PM Context-Aware Computing  /UIstop  351Kj√¶r, K. E. (2008). Designing middleware for context awareness in agriculture. In 1SPDFFEJOHTPGUIFUI.JEEMFXBSF$POGFSFODF%PDUPSBM4ZNQPTJVN, pp. 19‚Äì24.Kortuem, G., Segall, Z., and Bauer, M. (1998). Context-aware, adaptive wearable com-puters as remote interfaces to ‚Äòintelligent‚Äô environments. In 1SPDFFEJOHTPGUIFOE*OUFSOBUJPOBM4ZNQPTJVNPO8FBSBCMF$PNQVUFST	*48$
, pp. 58‚Äì65.Lester, J., Choudhury, T., and Borriello, G. (2006). A practical approach to recog-nizing physical activities. In 1SPDFFEJOHTPG1FSWBTJWF, pp. 1‚Äì16.Lim, B., Dey, A. K., and Avrahami, D. (2009). Why and why not explanation improve the intelligibility of context-aware intelligent systems. In 1SPDFFEJOHTPG$)*, in press.Ludford, P ., Frankowski, D., Reily, K., Wilms, K., and Terveen, L. G. (2006). Because I carry my cell phone anyway: Improving location-based reminder systems. In 1SPDFFEJOHTPG"$.$POGPO)VNBO'BDUPSTJO$PNQVUJOH4ZTUFNT	$)*
, pp. 889‚Äì898.Mozer, M. C. (1998). /T_he neural network house: An environment that adapts to its inhabitants. In Coen, M. (Ed.), 1SPDFFEJOHTPGUIF"NFSJDBO"TTPDJBUJPOGPS "SUJ“áDJBM *OUFMMJHFODF 4QSJOH 4ZNQPTJVN PO *OUFMMJHFOU &OWJSPONFOUT, pp. 110‚Äì114.O‚ÄôNeill, E., Lewis, D., McGlinn, K., and Dobson, S. (2007). Rapid user-centered evaluation for context-aware systems. In 1SPDFFEJOHTPG*OUFSBDUJWF4ZTUFNT%FTJHO4QFDJ“áDBUJPOBOE7FSJ“áDBUJPO	%47*4
, pp. 220‚Äì233.Oh, Y ., Schmidt, A., and Woo, W . (2007). Designing, developing, and evaluat-ing context-aware systems. In 1SPDFFEJOHTPG.VMUJNFEJBBOE6CJRVJUPVT&OHJOFFSJOH	.6&
, pp. 1158‚Äì1163.Pascoe, J. (1998). Adding generic contextual capabilities to wearable computers*O1SPDFFEJOHTPGUIFOE*&&&*OUFSOBUJPOBM4ZNQPTJVNPO8FBSBCMF$PNQVUFST	*48$
, pp. 92‚Äì99.Pascoe, J., Ryan, N. S., and Morse, D. R. (1998). Human-computer-giraÔ¨Äe interaction‚ÄîHCI in the /f_ield. Workshop on Human Computer Interaction with Mobile Devices.Rekimoto, J., Ayatsuka, Y ., and Hayashi, K. (1998). Augmentable reality: Situated communication through physical and digital spaces. In 1SPDFFEJOHTPGUIFOE *&&& *OUFSOBUJPOBM 4ZNQPTJVN PO 8FBSBCMF $PNQVUFST 	*48$ 
, pp. 68‚Äì75.Rodden, T., Cheverst, K., Davies, N., and Dix, A. (1998). Exploiting context in HCI design for mobile systems. Workshop on Human Computer Interaction with Mobile Devices.Ryan, N. (1997). MCFE metadata elements, version 0.2. Working document. University of Kent at Canterbury. Kent, UK.Ryan, N., Pascoe, J., and Morse, D. (1998). Enhanced reality /f_ieldwork: /T_he context-aware archaeological assistant. In: van Leusen, M., and Exxon, S. (Eds.), $PNQVUFS"QQMJDBUJPOTBOE2VBOUJUBUJWF.FUIPETJO"SDIBFPMPHZ. Oxford.Salber, D., Dey, A. K., and Abowd, G. D. (1999). /T_he Context Toolkit: Aiding the development of context-enabled applications. In 1SPDFFEJOHTPGUIF"$.$POGFSFODFPO)VNBO'BDUPSTJO$PNQVUFS4ZTUFNT	$)*
, pp. 434‚Äì441.
93606_Book.indb   3518/26/09   1:39:57 PM 352  /UIstop  Anind K. DeySchilit, B., and /T_heimer, M. (1994). Disseminating active map information to mobile hosts. *&&&/FUXPSL 8(5), 22‚Äì32.Schilit, B. N., Adams, N. I., and Want, R. (1994). Context-aware computing applica-tions. In 1SPDFFEJOHTPGUIFTU*OUFSOBUJPOBM8PSLTIPQPO.PCJMF$PNQVUJOH4ZTUFNTBOE"QQMJDBUJPOT, pp. 85‚Äì90.Schilit, B. N. (1995). System architecture for context-aware mobile computing. PhD dissertation, Columbia University, New Y ork.Schmidt, A., Takaluoma, A., and M√§ntyj√§rvi, J. (2000). Context-aware telephony over W AP . 1FSTPOBMBOE6CJRVJUPVT$PNQVUJOH 4(4), 225‚Äì229.Scholtz, J., and Consolvo, S. (2004). Toward a framework for evaluating ubiquitous computing applications. *&&&1FSWBTJWF$PNQVUJOH.BHB[JOF 3(2), 82‚Äì88.Tullio, J., Dey, A. K., Fogarty, J., and Chalecki, J. (2007). How it works: A /f_ield study of non-technical users interacting with an intelligent system. In 1SPDFFEJOHTPG$)*, pp. 31‚Äì40.Want, R., Hopper, A., Falcao, V ., and Gibbons, J. (1992). /T_he Active Badge location system. "$.5SBOTBDUJPOTPO*OGPSNBUJPO4ZTUFNT10(1), 91‚Äì102.Want, R., Schilit, B. N., Adams, N. I., Gold, R., Petersen, K., Goldberg, D., Ellis, J. R., and Weiser, M. (1995). /T_he PARCTAB ubiquitous computing experi-ment. Technical Report CSL-95-1. XEROX Palo Alto Research Center, Palo Alto, CA.Ward, A., Jones, A., and Hopper, A. (1997). A new location technique for the active oÔ¨Éce. *&&&1FSTPOBM$PNNVOJDBUJPOT4(5), 42‚Äì47.Weiser, M. (1991). /T_he computer for the 21st century. 4DJFOUJ“áD"NFSJDBO 265(3), 94‚Äì104.Weiser, M., and Brown, J. S. (1997). /T_he coming age of calm technology. In: Denning, P . J., and Metcalfe, R. M. (Eds.), #FZPOE$BMDVMBUJPO/T_hF/FYU'J/f_ty :FBSTPG$PNQVUJOH. Springer-Verlag, New Y ork, NY .Weiss, D., Duchon, M., Fuchs, F., and Linnhof-Popien, C. (2008). Context-aware personalization for mobile multimedia services. In 1SPDFFEJOHTPGUIF*OUFSOBUJPOBM$POGFSFODFPO.PCJMF$PNQVUJOHBOE.VMUJNFEJB	.P..
, pp. 267‚Äì271.Wisneski, C., Ishii, H., Dahley, A., Gorbet, M., Brave, S., Ullmer, B., and Y arin, P . (1998). Ambient displays: Turning architectural space into an interface between people and digital information. In 1SPDFFEJOHTPG$P#VJME, pp. 22‚Äì32.Wu, H. (2003). Sensor fusion for context-aware computing using Dempster-Shafer theory. PhD dissertation, Carnegie Mellon University, Pittsburgh, PA.
93606_Book.indb   3528/26/09   1:39:57 PM 9CHAPTER Processing Sequential Sensor DataJohn KrummCONTENTS9.1 Introduction 3549.2 Tracking Example 3569.3 Mean and Median Filters 3589.4 Kalman Filter 3599.4.1 Linear, Noisy Measurements 3609.4.2 Linear, Noisy Dynamics 3619.4.3 All Parameters 3629.4.4 Kalman Filter 3639.4.5 Discussion 3649.5 Particle Filter 3659.5.1 Problem Formulation 3669.5.2 Particle Filter 3689.5.3 Discussion 3699.6 Hidden Markov Model 3709.6.1 Problem Formulation 3719.6.2 Hidden Markov Model 3739.6.3 Discussion 3749.7 Presenting Performance 3769.7.1 Presenting Continuous Performance Results 3769.7.2 Presenting Discrete Performance Results 3789.8 Conclusion 380References 380
93606_Book.indb   3538/26/09   1:39:58 PM 354  /UIstop  John Krumm9.1  INTRODUCTIONUbiquitous computing (ubicomp) applications are normally envisioned to be sensitive to context, where context can include a person‚Äôs location, activ-ity, goals, resources, state of mind, and nearby people and things. Context is o/f_ten inferred with sensors that periodically measure some aspect of the user‚Äôs state. For instance, a global positioning system (GPS) sensor can repeatedly measure a person‚Äôs location at some interval in time. /T_his is an example of sequential sensor data in that it is a sequence of sensor reading of the same entity spread out over time. Unfortunately, sensors are never perfect in terms of noise or accuracy. For example, a GPS sensor gives noisy latitude/longitude measurements, and sometimes the measurements are wildly inaccurate (outliers). In addition, sensors o/f_ten do not measure the necessary state variables directly. Although a GPS sensor can be used to infer a person‚Äôs velocity and even mode of transportation (Patterson et al., 2003), it cannot directly measure these states. /T_his chapter is aimed at introducing fundamental techniques for processing sequential sensor data to reduce noise and infer context beyond what the sensor actually measures. /T_he techniques discussed are not necessarily on the cutting edge of signal processing, but they are well-accepted approaches that have proven to be fundamentally useful in ubicomp research. Because of their wide acceptance and usefulness, you should feel comfortable using them in your own ubicomp work. Speci/f_ically, this chapter discusses mean and median /f_ilters, the Kalman /f_ilter, the particle /f_ilter, and the hidden Markov model (HMM). Each of these techniques processes sequential sensor data, but they all have diÔ¨Äerent assumptions and representations, which are highlighted to help the reader make an intelligent choice./T_his chapter concentrates on processing sequential sensor measure-ments, because it is usually necessary to make repeated measurements to keep up with possibly changing context in ubicomp applications. For instance, a person‚Äôs location usually changes with time, so location must be measured repeatedly. Sequential measurements mean that processing techniques can take advantage of both a sense of the past and a sense of the future, which will be explained next.A sense of the past is useful because context does not change completely randomly, but instead shows some coherence over time. Although an iso-lated sensor measurement might lead to an uncertain conclusion about a person‚Äôs context, repeated measurements give more certainty in spite of noisy measurements, partly because context normally does not change 
93606_Book.indb   3548/26/09   1:39:59 PM Processing Sequential Sensor Data  /UIstop  355very quickly compared to how o/f_ten measurements can be taken. /T_hus, it o/f_ten makes sense to average together the last few measurements, which is a simple means of exploiting continuity, and one which this chapter exam-ines in Section 9.3. In general, a new measurement triggers a reestimation of the context state variables that is sensitive not only to the new measure-ment, but also to previous measurements and/or estimates. /T_his histori-cal perspective means the techniques can exploit expectations about the continuity of the state variables. /T_he mean /f_ilter ful/f_ills expectations that the output varies relatively slowly and that it should be sensitive to current and past measurements. All the techniques in this chapter pay attention to past measurements or past state estimates in some way.A sense of the future is usually realized with a dynamic model of the measured process, something that the mean and median /f_ilters do not have. For instance, if a person is walking in a certain direction, it is most likely he or she will continue in that direction, because turns are somewhat rare. Like a sense of the past, a sense of the future can help smooth out noise in the measurements. A dynamic model can also keep track of more than just what is measured. For example, the Kalman /f_ilter, as explained in Section 9.4, tracks both location and speed based only on location measurements. Paying attention to higher level, albeit unmeasured, state variables means that the processing technique can exploit reasonable assumptions about the behavior of the whole system rather than just the directly measured parts of it. In the Kalman /f_ilter, a speed estimate can be used to mitigate the eÔ¨Äect of a wildly distant location measurement, because the user might not have been able to move to the distant point given the current speed. As a bonus, these higher level variables become available for use in a context-sensitive system. For instance, even if a system is measuring location only, speed estimates help the processing and can be used as a context output. /T_he activity inference project takes this to the extreme: Lester et al. (2006) were able to distinguish among various activities (e.g., sitting, standing, walking) by measuring acceleration, sound, and barometric pressure. Some of the processing techniques in this chapter explicitly estimate these extra state variables to improve their performance, and the estimates are a useful by-product for inferring context.A running example in this chapter helps highlight the assumptions, processing, and output of each technique. /T_he next section introduces the example, followed by discussions of each technique in subsequent sections.
93606_Book.indb   3558/26/09   1:39:59 PM 356  /UIstop  John Krumm9.2  TRACKING EXAMPLE/T_he problem presented in this chapter focuses on tracking a moving person in the (Y,Z) plane based on noisy (Y,Z) measurements taken at an interval of 1 second. /T_he simulated actual path and simulated noisy measurements are shown in Figure 9.1, where the unit of measurement is 1 meter. /T_he path starts at the center of the spiral. Pretend that the person is carrying a location sensor, possibly a GPS, if he is outside. /T_here are 1000 measure-ments spread evenly in time from beginning to end. /T_he measurements are noisy versions of the actual path points. As is common in modeling noisy measurements, the measurements are taken as the actual values plus added Gaussian noise with zero mean. /T_he Gaussian probability distribu-tion is the familiar bell-shaped curve. ‚ÄúNoise‚Äù is not noise in the audible sense, but represents random errors in the measurements. Engineers and researchers use Gaussian noise, as opposed to other probability distribu-tions, partly because it is o/f_ten an adequate model and partly because it is theoretically convenient. /T_he zero mean assumption implies that the sensor is unbiased (no constant oÔ¨Äset error), and this is easily realizable 
100 90 80 70 60 50 40 30 2000102030405060708090100
10x (meters)y (meters)Actual Path and Measured Locations
FIGURE 9.1 /T_he actual path, in black, starts at the center of the spiral. /T_he noisy, measured points are gray. One goal of processing the measured points is to estimate the actual path. /T_hese data form the basis of the run-ning example in this chapter.
93606_Book.indb   3568/26/09   1:40:00 PM Processing Sequential Sensor Data  /UIstop  357by subtracting any constant oÔ¨Äset before processing the measurements. In this tracking example, the standard deviation of the noise is s  3 meters. /T_here are also ten outliers placed randomly along the path, which were taken as the regular noisy measurements plus Gaussian noise with a stan-dard deviation of 15 meters./T_his example is helpful because it is easy to visualize and understand. Even though it is clearly in the domain of location measurement, it dem-onstrates some more general characteristics of the type of inference prob-lems that appear in ubicomp. It consists of sequential measurements that are corrupted by noise, and there are dynamic models of expected behav-ior that can be used to combat the noise. In this particular example, there are assumptions about the smoothness of the path that are described in subsequent sections. /T_hese assumptions can be expressed in terms of other state variables that may be of interest, such as the speed of the person in this case. /T_his example does not illustrate the processing of discrete state variables such as the person‚Äôs mode of transportation or the number of people traveling together. However, Section 9.6 explains how to convert the problem into discrete variables and how to process them.In mathematical terms, the actual locations are given by vectors xJ  (YJ,ZJ)T, where xJ is a column vector giving the Jth location in the sequence, and J goes from 1 to the number of measurements. Note that the boldface xJ is a vector, and the non-boldface YJ is one of its scalar components. /T_he xJ are unknown and the goal of the processing is to estimate them from the noisy measurements and to possibly infer other state variables such as velocity. /T_he noisy measurements are represented by zJ, which are the same as the measurement vectors, but with independent, zero-mean Gaussian noise added to each component: zxvJJJJ/¬ß¬©¬®¬∂¬∏¬∑¬§¬¶¬•¬≥¬µ¬¥v~,00022SS (9.1)Here, vJ is a random Gaussian noise vector with zero mean and a diagonal covariance matrix. Since the covariance matrix is diagonal, this is the same as adding independent Gaussian noise to each element of xJ. Note that Equation (9.1) is not part of any algorithm for inferring xJ, but just an assumption on the relationship between the measurements zJ and actual xJ values. It also describes the simulated measurement data used in this chapter‚Äôs running example./T_his example is intentionally simple so it is easy to visualize and thus some of the simpler techniques will work on it. /T_his chapter will show how 
93606_Book.indb   3578/26/09   1:40:01 PM 358  /UIstop  John Krummeach technique performs on this example, and simple techniques, such as the mean and median /f_ilter (discussed next), appear to work better than some of the more sophisticated methods. However, each of the techniques presented has tunable parameters that aÔ¨Äect their performance, and the presented results do not necessarily represent the optimal state of tune. /T_his means that each of the techniques has the potential to give more accuracy. Moreover, some of the more sophisticated techniques have the ability to give additional information, such as speed estimates, that sim-pler techniques do not give. /T_hus, judging the techniques merely by their accuracies presented in this chapter would be na√Øve.One danger of a speci/f_ic, running example is that it appears to limit the applicability of the methods to just that example. However, these tech-niques have been used for a wide range of sequential sensor data and a wide range of inferred state variables.9.3  M E AN AND MEDIAN FILTERSOne of the simplest and most eÔ¨Äective means of /f_iltering out noise is to average together multiple samples. For the example problem, the mean /f_ilter estimates xJ by the average of zJ and the most recent O ‚àí 1 measurements, that is, ÀÜxi¬£11OKJOJzK (9.2)Here ÀÜxi represents the estimated value of xJ. Equation (9.2) represents a sliding window of width O, where O is the number of values to use to com-pute the mean. /T_his /f_ilter is simple to implement and works well to reduce noise, as shown in Figure 9.2, where O  10. /T_he primary disadvantage is that it introduces lag in the estimate, because the average is taken over mostly measurements that come before zJ. One way to reduce the lag is to use a weighted average whose weights decrease in value for increasingly older measurements. Note that the mean /f_ilter in Equation (9.2) is a ‚Äúcausal /f_ilter,‚Äù because it does not look ahead in time to future measurements to estimate xJ. /T_his is true of all techniques discussed in this chapter.In addition to lag, another potential problem with the mean /f_ilter is its sensitivity to outliers. In fact, just a single measured point, placed far enough away, can move the mean to any location. /T_he median is a more robust ver-sion of the mean, and it still works if up to half the data is outliers. 	#xJJOJOJJ median{,,,,}zzzz121 (9.3)
93606_Book.indb   3588/26/09   1:40:04 PM Processing Sequential Sensor Data  /UIstop  359
Figure 9.2 shows the estimated path based on the median. /T_here are places where the mean dri/f_ts relatively far from the actual path due to an outlier, whereas the median stays closer./T_he mean and median /f_ilters are simple, yet eÔ¨Äective techniques for pro-cessing sequential sensor data. However, they do suÔ¨Äer from lag, and they do not intrinsically estimate any higher level variables such as speed. One could estimate speed with a numerical derivative, but this is very sensitive to the noise in the original measurements. /T_he remaining techniques dis-cussed in the chapter work to reduce lag with a dynamic model, and the Kalman and particle /f_ilters (Sections 9.4 and 9.5) can estimate higher level state variables in a principled way.9.4  KALMAN FILTER/T_he Kalman /f_ilter is a big step up in sophistication from the mean and median /f_ilters discussed above. It explicitly accounts for sensor noise (as long as the noise is additive Gaussian), and it explicitly models the sys-tem‚Äôs dynamics. /T_he Kalman /f_ilter introduces probability to the problem 100100Mean and Median Filter908070605040302010090 80 70 60 50x (meters)y (meters)
40 30 20 10 0MeanMedian
FIGURE 9.2 /T_he actual path is in black. /T_he paths estimated by the mean and median /f_ilters are in dark gray and light gray, respectively. /T_he median /f_ilter produces fewer large excursions from the true path, because it is more robust to outliers.
93606_Book.indb   3598/26/09   1:40:04 PM 360  /UIstop  John Krummof processing sequential measurements. Instead of producing just an esti-mated result ÀÜxi such as the mean and median /f_ilters, it also produces an uncertainty estimate that indicates the con/f_idence of the estimate./T_he Kalman /f_ilter has a number of descriptive adjectives to distinguish it from other /f_ilters for processing sequential data (some of the less obvious terminology below is explained subsequently):Bayesian‚ÄîIt uses Bayes rule to estimate the probability distribution tof the state variables from noisy measurements zJ.Gaussian‚ÄîAll probability distributions in the Kalman /f_ilter are tGaussians, including measurement noise, process noise, and the state estimates.Linear‚Äî/T_he dynamics of the system being measured are linear.tOnline‚Äî/T_he Kalman /f_ilter can update the state estimate as soon as tthe latest measurement is available. It does not have to wait until all the data are available, like a batch /f_ilter would.One of the most enduring references on Kalman /f_iltering is the book by Gelb (1974). /T_he mathematical notation in this section is the same as in Gelb‚Äôs book.9.4.1  Linear, Noisy Measurements/T_he mean and median /f_ilters can only estimate states that are directly mea-sured. For instance, if the measurements are (Y,Z) coordinates as in this chapter‚Äôs example, the mean and median /f_ilters cannot be used to directly, in a principled way, estimate velocity. /T_he Kalman /f_ilter makes a distinction between what quantities are in the measurement vector zJ and the unknown state vector xJ. In the example for the Kalman /f_ilter, these two vectors are zxJJYJZJJJJYJZ[[YZTT¬§¬¶¬•¬•¬≥¬µ¬¥¬¥¬§¬¶¬•¬•¬•¬•¬•¬≥¬µ()()()()¬¥¬¥¬¥¬¥¬¥¬¥ (9.4)where [JY() and [JZ() are the Jth measurements of the Y and Z coordinates, YJ and ZJ are the unknown actual coordinates, and TJY() and TJZ() represent 
93606_Book.indb   3608/26/09   1:40:07 PM Processing Sequential Sensor Data  /UIstop  361the unknown velocity vector‚Äôs Y and Z components. /T_he state vector con-tains variables that are not directly measured‚Äîvelocity, in this case.To express the full relationship between the actual state and measure-ments, the Kalman /f_ilter adds a measurement matrix ) and zero-mean Gaussian noise: zxvvJJJJJJ)/3~(,)0 (9.5)Here, the measurement matrix )i translates between the state vector and the measurement vector. Because the measurements are related to the actual state by a matrix, the measurements are said to be linear. In the example, )J simply deletes the unmeasured velocity and passes through the (Y,Z) coordinates: )J¬ß¬©¬®¬∂¬∏¬∑10010000 (9.6)/T_he noise vector vJ has the same dimensions as the measurement vector zJ, and is distributed as zero-mean Gaussian noise with a covariance vec-tor 3J. In the example, the noise covariance is independent of J. Because this example is a simulation, the Kalman /f_ilter has the advantage of know-ing the exact noise covariance, from Equation (9.1): 3J¬ß¬©¬®¬∂¬∏¬∑SS2200 (9.7)9.4.2  Linear, Noisy Dynamics/T_he mean and median /f_ilters have no model of how the state variables change over time. /T_he Kalman /f_ilter does have such a model. It says that the state at time J is a linear function of the state at time J  1 plus zero-mean, Gaussian noise: xxwwJJJJJJ/2F1110~(,) (9.8)/T_he system matrix jJ‚àí1 gives the linear relationship between the state at time J  1 and J. For the example, the system matrix is FJJJUU¬ß¬©¬®¬®¬®¬®¬∂¬∏¬∑¬∑¬∑¬∑110001000100001$$ (9.9)
93606_Book.indb   3618/26/09   1:40:09 PM 362  /UIstop  John KrummHere, $Ui is the time elapsed between measurements J ‚àí 1 and J. With this matrix and the state vector of the example, the equation xJ  jJ‚àí1x J‚àí1 says that YYUTJJJJY1$() and similarly for ZJ. /T_his is just standard physics for a particle moving in a straight line at constant velocity. /T_he system equa-tion also says that the velocity stays constant over time. Of course, this is not true for the example, and is usually not true for any system that controls its own trajectory. In general, the system noise wJ helps account for the fact that jJ‚àí1 is not an exact model of the system. wJ is zero-mean, Gaussian noise with covariance 2J. For the example, 2J is 2JTT¬ß¬©¬®¬®¬®¬®¬∂¬∏¬∑¬∑¬∑¬∑0000000000000022SS (9.10)/T_his implies that the physical model connecting position and veloc-ity is correct (which it is). But it also implies that velocity is subject to some noise between updates, which helps compensate for the fact that otherwise velocity is assumed to be constant. Setting the actual values of 2J is not straightforward. For the example, ST2 was chosen to represent the variance in the actual velocity from measurement to measurement. 2J is modeling the fact that velocity is not constant in the example. If it were, the trajectory would have to be straight. With 2J given as Equation (9.10), Equation (9.8) states that the velocity changes randomly between time steps, with the changes distributed as a zero mean Gaussian.9.4.3  All ParametersImplementing the Kalman /f_ilter requires the creation of the measurement model, system model, and initial conditions. Speci/f_ically, it requires)J  measurement matrix giving measurement zJ from state xJ  (Equation 9.5)3J  measurement noise covariance matrix (Equation 9.5)jJ‚àí1  system matrix giving state xJ from xJ‚àí1 (Equation 9.8)2J  system noise covariance matrix (Equation 9.8)ÀÜx0  initial state estimate10  initial estimate of state error covariance
93606_Book.indb   3628/26/09   1:40:10 PM Processing Sequential Sensor Data  /UIstop  363/T_he initial state estimate can usually be estimated from the initial few measurements. For this chapter‚Äôs example, the initial position came from z0, and the initial velocity was taken as zero. A reasonable estimate of 10 for this example is 1TT02222000000000000¬ß¬©¬®¬®¬®¬®¬∂¬∏¬∑¬∑¬∑¬∑SSSS (9.11)9.4.4  Kalman Filter/T_he Kalman /f_ilter proceeds in two steps for each new measurement zJ. /T_he result of the two steps is the mean and covariance of the estimated state, ÀÜ.xi(+) /T_he /f_irst step is to extrapolate the state and the state error covariance from the previous estimates. /T_hese are pure extrapolations with no regard for the measurement, and they depend only on the system model. /T_he (‚àí) superscript indicates an extrapolated value. ÀÜÀÜ() ()xxJJJF11 (9.12) 112JJJJJ() ()FF1111T (9.13)/T_he second step is to update the extrapolations with the new measurement, giving the mean and covariance of the new state estimate, ÀÜxi(+) and 1J(): ,1))1)3JJJJJJJ	() ()TT1 (9.14) ÀÜÀÜÀÜ() ()()xxzxJJJJJJ,)	 (9.15) 1*,)1JJJJ()()() (9.16)where * is the identity matrix and ,J is the Kalman gain matrix.Applying these equations to this chapter‚Äôs example gives the result shown in Figure 9.3, where the plotted value is ÀÜ.xi(+) /T_he estimated path in dark gray does not follow turns very well, partly because the system model assumes the path is a straight line, with only the noise process to account for turns.
93606_Book.indb   3638/26/09   1:40:14 PM 364  /UIstop  John Krumm
9.4.5  Discussion/T_he major diÔ¨Äerence between the Kalman /f_ilter and the mean and median /f_ilters is that the Kalman /f_ilter has a dynamic model of the system to keep up with changes over time. Besides /f_ixing the lag problem, the dynamic model counterbalances the measurement model to give a tunable tradeoÔ¨Ä between a designer‚Äôs belief in the predictive dynamics versus sensor readings. /T_his tuning is re/f_lected in the choice of the elements of the measurement and sys-tem covariance matrices. Although the measurement covariance is relatively simple to estimate based on sensor characteristics, the system covariance is more diÔ¨Écult, and it represents an opportunity for tuning the tradeoÔ¨Ä  between dynamics and measurement. Figure 9.3 shows two results of the Kalman /f_ilter: the less accurate one in dark gray re/f_lects a principled choice of sT, which speci/f_ies the noise in the predictive velocity model. /T_he inferred path tends to have trouble tracking curves and corners, because the model is biased too much toward straight line paths. /T_he more accurate inferred path in light gray comes from an optimal choice of sT based on an exhaustive 100 90 80 70 60 50 40 30 20 10 00102030405060708090100Kalman Filter
x (meters)y (meters)UntunedTuned
FIGURE 9.3 /T_he Kalman /f_ilter result, in dark gray, tends to overshoot turns because its dynamic model assumes a single, straight line path. /T_he lighter gray line is a version of the Kalman /f_ilter tuned to be more sensitive to the data. It follows turns better, but is also more sensitive to noise.
93606_Book.indb   3648/26/09   1:40:15 PM Processing Sequential Sensor Data  /UIstop  365sequence of test values of sT. /T_he price of this more responsive model is a wigglier path, because this /f_ilter is more sensitive to the measurements. Of course, using a textbook example makes such a search easy. /T_he problem of tuning is more diÔ¨Écult for real applications./T_he dynamic model can include parameters beyond the ones that are measured. In the example, the state vector for the Kalman /f_ilter added velocity as a state parameter, even though the measurements had location only. An obvious extension to the example would be to include accelera-tion. /T_he ability to track nonmeasured parameters is a bene/f_it, because the nonmeasured parameters may be useful for context inference./T_he Kalman /f_ilter can also make sensor fusion straightforward. For the example in this section, an accelerometer could add valuable data about location and velocity. /T_his would involve augmenting the state vector, sys-tem model, and measurement model with acceleration.Another advantage of the Kalman /f_ilter is that it gives an estimate of its own uncertainty in the form of the covariance matrix 1J(). A knowledge of uncertainty is useful for ubicomp systems. For instance, a Kalman /f_ilter tracker might indicate that a person is equally likely in the kitchen or the living room, which could aÔ¨Äect whether certain automatic actions are triggered.One of the main limitations of the Kalman /f_ilter is the linearity of the dynamic model. Some processes are inherently linear, such as the radar traces of ballistic missiles to which Kalman /f_ilters were applied a long time ago. System dynamics are o/f_ten not linear. For instance, a ball bouncing oÔ¨Ä a wall could not be represented by the state system matrix jJ‚àí1 in the Kalman /f_ilter. Likewise, the combinations of distances and angles in pose estimation are not linear. /T_he extended Kalman /f_ilter can sometimes solve nonlinear problems by linearizing the system around the estimated state. Until ubicomp advances to the ballistic missile stage, applications of the basic Kalman /f_ilter in the /f_ield will be relatively rare./T_he Kalman /f_ilter is also unsuitable for representing discrete state vari-ables such as a person‚Äôs mode of transportation, knowledge of the world, or goals. Fortunately, for nonlinear problems with a mix of continuous and discrete state variables, the particle /f_ilter is a practical, although computa-tionally more expensive, solution. /T_his is the topic of the next section.9.5  PARTICLE FILTER/T_he particle /f_ilter is a more general version of the Kalman /f_ilter, with less restrictive assumptions and, because of that, more computational demand. Unlike the Kalman /f_ilter, the particle /f_ilter does not require a linear model 
93606_Book.indb   3658/26/09   1:40:15 PM 366  /UIstop  John Krummfor the process in question, and it does not assume Gaussian noise. One of the main advantages of the particle /f_ilter for ubicomp applications is that it can easily represent an arbitrary mix of continuous and discrete variables along with a rich model of how these variables interact and aÔ¨Äect sensors. In terms of the list of properties given for the Kalman /f_ilter, the particle /f_ilter is Bayesian, non-Gaussian, nonlinear, and online.One good example of a particle /f_ilter for a ubicomp application is the work of Patterson et al. (2003). /T_hey created a rich model of a person‚Äôs location, velocity, transportation mode, GPS error, and the presence of a parking lot or bus stop. /T_he only sensor used was GPS for location and velocity. Using a par-ticle /f_ilter, they could infer all the other variables. Note that their state space contained both continuous variables (location, velocity, and GPS error) and discrete variables (transportation mode, presence of parking lot or bus stop)./T_he particle /f_ilter has its name because it represents a multitude of pos-sible state vectors, which can be thought of as particles. Each particle can be considered a hypothesis about the true state, and its plausibility is a function of the current measurement. A/f_ter each measurement, the most believable particles survive, and they are subject to random change in state according to a probabilistic dynamic model. An easy-to-understand intro-duction to particle /f_iltering is the chapter by Doucet et al. (2001), and this chapter uses their notation. Hightower and Borriello (2005) give a useful case study of particle /f_ilters for location tracking in ubicomp.As in the Kalman /f_ilter section (Section 9.4.4), the subsections below explain how to implement a particle /f_ilter using this chapter‚Äôs tracking example.9.5.1  Problem Formulation/T_he particle /f_ilter is based on a sequence of unknown state vectors, xJ, and measurement vectors, zJ, which is the same as the Kalman /f_ilter, both in general and in this chapter‚Äôs example. As a reminder, for the example, the state vector represents location and velocity, and the measurement vec-tor represents a noisy version of location. /T_he particle /f_ilter parallels the Kalman /f_ilter with a probabilistic model for measurements and dynamics, although both are more general than the Kalman /f_ilter./T_he probability distribution Q(zJ|xJ), which you must provide, models the noisy measurements. /T_his can be any probability distribution, which is more general than the Kalman /f_ilter formulation, which was zJ  )JxJ  vJ. /T_he measurement probability distribution gives a probabilistic relation-ship between the actual state xJ given the measurement zJ. /T_his models the 
93606_Book.indb   3668/26/09   1:40:15 PM Processing Sequential Sensor Data  /UIstop  367realistic scenario where the measurement can be some complicated func-tion of the state, with some uncertainty. To stay consistent, the particle /f_ilter example will use the same measurement model as the Kalman /f_ilter, which states Q/YZ3JJJJJ(|)(,),zx	T (9.17)/T_his says that the measurement is normally distributed around the actual location (YJ,ZJ) with the same covariance matrix used for the Kalman measurement model in Equation (9.7). However, Q(zJ|xJ) could be much more interesting and expressive. For instance, with knowledge of a map, Q(zJ|xJ) could express the fact that measurements in some regions are less accurate than measurements in other regions (e.g., the problem of GPS losing satellite signals in buildings, tunnels, and urban canyons).Another probability distribution you must provide is Q(xJ|xJ‚àí1), which models the dynamics. It gives the distribution of the current state xJ given the previous state xJ‚àí1. /T_his is also more general than the Kalman /f_ilter, whose dynamics model is xJ  jJ‚àí1xJ‚àí1  XJ‚àí1. It is not necessary to write down Q(xJ|xJ‚àí1), but the particle /f_ilter requires sampling from it. /T_hat is, given an xJ‚àí1, the particle /f_ilter algorithm requires the generation of a ran-dom xJ, subject to Q(xJ|xJ‚àí1). For this chapter‚Äôs example, the assumption is that the location changes deterministically as a function of the velocity, and that the velocity is randomly perturbed with Gaussian noise:
 YYTUZZTUTTJJJYJJJJZJJYJ111()()()($$YYJYJYTJZJZJZXX/TTXX)()()() () ()~,	021SJJZT/()~,02S	 (9.18)This is the same as the assumed dynamic model for the Kalman filter in Equation (9.8), but expanded for each component of the state vector to emphasize that the update does not need to be linear. It also does not need to be Gaussian. For consistency with the example, however, this dynamic model is both linear and Gaussian. The generality of Q(xJ|xJ‚àí1) would allow for more domain knowledge in the model. For instance, with knowledge of a map, Q(xJ|xJ‚àí1) could express the fact that it is more likely to accelerate going down hills and decelerate going up hills.
93606_Book.indb   3678/26/09   1:40:16 PM 368  /UIstop  John Krumm/T_he other component of the particle /f_ilter formulation is a prior dis-tribution Q(x0) on the state vector before any dynamics can be applied. For the example, let the prior be a normal distribution around the /f_irst measurement: Q/3J()(,)xz00 (9.19)Although the variables in the example are all continuous, note that these distributions could involve a mix of continuous and discrete vari-ables, and they could interact in interesting ways. For instance, consider appending a discrete home activity variable to the state vector xJ, where the activities can be {sleeping, eating, studying}. Assuming that the subject engages in only one of these activities at a time, the measurement model of the particle /f_ilter Q(zJ|xJ) could express the fact that certain activities are more likely to occur in or near certain rooms of the house.9.5.2  Particle Filter/T_he particle /f_ilter works with a population of / particles representing the state vector: xJK(), K  1, ‚Ä¶, /. Unlike the other methods in this chapter, the particle /f_ilter actually involves generating random numbers, which are necessary to instantiate the values of the particles. /T_his sampling means writing a routine that generates sample random numbers adhering to the relevant probability distributions.Although there are several variations of the particle /f_ilter, one of the most popular is called the bootstrap /f_ilter, introduced by Gordon (1994). It starts by initializing / samples of x0()K generated from the prior distribu-tion Q(x0). In the example, a plot of these particles would cluster around the /f_irst measurement z0, because the prior term in Equation (9.19) is a normal distribution with mean z0.With the initialization complete, for J  1, the /f_irst step is ‚Äúimportance sampling,‚Äù which uses the dynamic model to generate random xi()K from Q(xJ|xJ‚àí1). /T_his propagates the particles forward according to the assumed dynamic model, but without any guidance from the new measurement zJ./T_he next step computes ‚Äúimportance weights‚Äù for each particle accord-ing to the measurement model: XQJKJJK()()	zx (9.20)
93606_Book.indb   3688/26/09   1:40:19 PM Processing Sequential Sensor Data  /UIstop  369A larger importance weight indicates a particle that is better supported by the measurement. /T_he importance weights are then normalized so they sum to one.Finally, the last step in the loop is the ‚Äúselection step,‚Äù which samples a new set of particles xi()K from the xi()K based on the normalized impor-tance weights. /T_his involves picking / of xi()K at random, where the prob-ability of picking xi()K is proportional to its weight XJK(). /T_his step tends to eliminate unlikely particles, and it is not unusual to pick the same xi()K more than once if its weight is relatively large. /T_he selection step is the last step in the loop. /T_he algorithm returns to the importance sampling step for the next value of J to process the next measurement.To compute an estimate of xJ at any point, which was the original goal, compute the weighted mean of the particles: ÀÜ() ()xJJKJKK/X¬£x1 (9.21)/T_his works for continuous variables. For discrete variables, a viable approach is weighted voting. Similar equations work for computing other expected values, such as variance. /T_his is useful for estimating the uncer-tainty of the estimate.Applied to this chapter‚Äôs example problem, the particle /f_ilter gives the result shown in Figure 9.4.9.5.3  Discussion/T_he main problem with the particle /f_ilter is computation time. In general, using more particles (larger /) helps the algorithm work better, because it can more completely represent and explore the space of possible state vectors. But o/f_ten, adding enough particles to make a noticeable improve-ment in the results also causes a signi/f_icant increase in computation time. Fox (2003) gives a method for choosing / based on bounding the approxi-mation error.Because the particle /f_ilter allows such a rich state representation, it is tempting to add state variables. In this chapter‚Äôs example, it would be interesting to add state variables governing the mode of transporta-tion (e.g., walking vs. driving), intended route, and intended destina-tion. However, increasing the dimensionality of the state vector usually 
93606_Book.indb   3698/26/09   1:40:22 PM 370  /UIstop  John Krumm
requires adding more particles to account for the larger state space, lead-ing to increased computation time. One interesting remedy for this is the Rao-Blackwellized particle /f_ilter (Murphy and Russell, 2001). It uses a more conventional /f_ilter, such as Kalman, for the state variables where it is appropriate, and it uses a particle /f_ilter for the other state variables. For instance, Kalman could cover location and velocity, and a particle /f_ilter could track the higher level states.9.6  HIDDEN MARKOV MODEL/T_he HMM works only for discrete valued state space variables. /T_his is in contrast to the Kalman /f_ilter, which works only for continuous valued variables, and the particle /f_ilter, which works for a mix of discrete and continuous variables. /T_he HMM has been primarily the tool of speech understanding researchers, where the problem is to /f_ind the set of words that best accounts for a speech signal. In fact, the classic tutorial paper on HMMs by Rabiner (1989) was aimed at speech understanding, although the paper is useful to learn about the HMM for any application.As in the previous sections, this section uses the chapter‚Äôs tracking example to illustrate how to use an HMM.100 90 80 70 60 50x (meters)y (meters)Particle Filter
40 30 20 10 00102030405060708090100
FIGURE 9.4 /T_he particle /f_ilter result.
93606_Book.indb   3708/26/09   1:40:23 PM Processing Sequential Sensor Data  /UIstop  3719.6.1  Problem FormulationAs with the previous /f_iltering methods, the measurements are represented by zJ, where the subscript represents the time the measurement was taken. Instead of a continuous state xJ, the HMM works with discrete states 9JK(). Here, the subscript again refers to time. /T_he superscript indexes through the . possible states. In an activity recognition system, 9JK() could repre-sent diÔ¨Äerent modes of transportation at time J, that is, 9JK() ¬å {bus, foot, car}, as in Patterson et al. (2003). Here, K  1 means ‚Äúbus,‚Äù K  2 means ‚Äúfoot,‚Äù and K  3 means ‚Äúcar,‚Äù and there are .  3 possible states.In this chapter‚Äôs example, the natural way to represent the state is with a continuous coordinate (YJ,ZJ)T. For the HMM, however, with its require-ment for discrete state, the example splits the coordinate plane into small cells, as shown in Figure 9.8. Each cell in the example is a square whose sides are 1 meter long. Since the space extends to 100 meters along both axes, there are .  10,000 cells. /T_he goal of HMM is to estimate which of these cells contains the tracked object a/f_ter each continuous measure-ment zJ.Both the Kalman /f_ilter and particle /f_ilter have a measurement model. In the Kalman /f_ilter, the measurement model, given by Equation (9.5), says that the measurement is a linear function of the state plus additive Gaussian noise. In the particle /f_ilter, the measurement model is a general, conditional probability Q(zJ|xJ). /T_he measurement model for the HMM is similar to the one for the particle /f_ilter, except that it gives the discrete probability of each state, given the measurement: 19JKJ(|).()z 1 (uppercase) indicates a discrete probability distribution. In the HMM terminology, the measurement model is used to compute the ‚Äúobservation probabili-ties.‚Äù Given a measurement zJ, there is one observation probability value for each possible state 9JK(). /T_hese observation probabilities must sum to 1; that is, 19JKJK.()z	¬£11 (9.22)In the example, the measurements have Gaussian noise, as in Equation (9.1). /T_his means that the observation probabilities at time J are con-centrated in the cells around the one containing zJ. In fact, the amount of probability in each cell is properly computed by integrating the 2-D Gaussian over the boundaries of each cell. An adequate approximation, 
93606_Book.indb   3718/26/09   1:40:25 PM 372  /UIstop  John Krummused in the example here, is to compute the value of the Gaussian at the center of each cell and then normalize the probabilities so they sum to 1. Note that since the Gaussian goes on forever (in/f_inite support), all cells have some nonzero probability.Both the Kalman /f_ilter and particle /f_ilter have a dynamic model. For the Kalman /f_ilter, the dynamic model says that the new state is a linear func-tion of the old state, plus additive Gaussian noise, as given by Equation (9.8). /T_he particle /f_ilter is more general, specifying the dynamic model as a conditional probability distribution Q(xJ|xJ‚àí1). /T_he dynamic model for the HMM is expressed in terms of transition probabilities, 199BJLJKKL(|).()()1 /T_his gives the probability of transitioning from state K to state L between successive measurements. In the {bus, foot, car} example, the transi-tion probabilities could re/f_lect the fact that it is improbable to transition directly from a bus to a car, because there is usually some foot travel in between. /T_he transition probabilities going from one state to all the others must sum to 1: BKLL.¬£11 (9.23)In another example, the L/o.sc/c.sc/a.sc/d.sc/i.sc/o.sc WiFi location system, Krumm and Horvitz (2004) attempted to infer whether a person was moving based on WiFi signal strengths measured from the laptop they were carrying. High variance in the measured signal strengths was found to indicate move-ment. However, the raw inferences from signal strength variance indi-cated that people would transition between moving and still much more o/f_ten than in reality, as shown in Figure 9.9. An HMM was used to reduce the number of transitions. Here, the transition probabilities are given by the diagram in Figure 9.5, where the self-transition probabilities are quite large, which help prevent spurious transitions between the two states.0.999890.999890.000110.00011MovingStillFIGURE 9.5 /T_hese transition probabilities were used in an HMM to smooth the transitions in Figure 9.9.
93606_Book.indb   3728/26/09   1:40:26 PM Processing Sequential Sensor Data  /UIstop  373
For this chapter‚Äôs tracking example, there are .  10,000 states, one for each cell. /T_he transition probabilities re/f_lect the fact that it is more likely to transition to a nearby cell than a distant cell. In fact, an examination of the actual path shows that the probability of staying in the same cell from time J to J  1 is about 0.40. /T_he only other nonzero transition probabilities are into the cells immediately surrounding the current cell, as shown in Figure 9.6. /T_he example uses the values in Figure 9.6 to /f_ill in the transition probabilities BKL./T_he last element of the HMM is a set of initial state probabilities, 19K().()0 With no knowledge of the initial state, it is reasonable to specify a uniform distribution over all states, that is, 19.K()/.()01 For the track-ing example, the initial state probabilities were spread in a Gaussian pat-tern around the /f_irst measurement.9.6.2  Hidden Markov ModelAn example HMM is summarized in Figure 9.7. /T_he time index starts at zero on the le/f_t and increases to the right, with a total of /  3 measure-ments. /T_he rows represent .  8 possible states. At the beginning, there are . initial state probabilities. /T_he subsequent columns represent obser-vation probabilities that are sensitive to the measurements zJ. Connecting the states in each column are transition probabilities. /T_he goal of the HMM is to /f_ind an optimal path starting with the initial state probabilities, Relative Cell in X Direction0.50.40.30.20.10‚Äì10011‚Äì1Transition ProbabilityRelative Cell in YDirectionFIGURE 9.6 /T_he HMM transition probabilities for each cell look like this, with the most probable transition being back to the same cell. /T_he only other nonzero transition probabilities are to the immediate neighbors.
93606_Book.indb   3738/26/09   1:40:27 PM 374  /UIstop  John Krumm
through the transition and observation probabilities. /T_he mostly likely path is the one that maximizes the product of these probabilities.One way to /f_ind the optimal path is an exhaustive search through the .N possible paths. Although this is could be feasible for the HMM in Figure 9.7, the tracking example has .  10,000 and /  1000 for a total of 1 √ó 104000 diÔ¨Äerent possible paths. Instead, /f_inding the optimal path traditionally makes use of the Viterbi algorithm, explained for the HMM by Rabiner (1989). /T_he Viterbi algorithm uses dynamic programming to eÔ¨Éciently /f_ind the most probable path.Results of the HMM on this chapter‚Äôs example are shown in Figure 9.8.9.6.3  Discussion/T_he HMM is sometimes a very helpful add-on to a system that infers dis-crete states as a means of reducing the frequency of transitions between states. For example, one part of the L/o.sc/c.sc/a.sc/d.sc/i.sc/o.sc system attempted to infer if a user was walking or still, based on the variance of measured WiFi sig-nal strengths. /T_he raw measurements of variance indicated very frequent transitions between the two states. /T_he system used a simple two-state HMM with transition probabilities that approximated the realistic prob-abilities of making such a transition, leading to a much smoother output, as shown in Figure 9.9.P(X0(j))ajkP(X1(j)|z1)P(X2(j)|z2)ajkInitial StateProbabilitiesTransitionProbabilitiesObservationProbabilitiesObservationProbabilities TransitionProbabilitiesP(X3(j)|z3)ObservationProbabilitiesajkTransitionProbabilities
FIGURE 9.7 HMM considers all possible states at each time step. /T_his HMM has .  8 states and /  3 measurements. /T_he Viterbi algorithm is an eÔ¨É-cient way to /f_ind the most probable path through the observation probabili-ties and transition probabilities. /T_he dark lines represent one possible path.
93606_Book.indb   3748/26/09   1:40:28 PM Processing Sequential Sensor Data  /UIstop  375
100 90 80 70 60 50x (meters)40 30 20 10 001020304050y (meters)60708090100Hidden Markov Model
FIGURE 9.8 /T_he HMM works with discrete state variables. For this exam-ple, each discrete state is one of 10,000 1 √ó 1 meter cells. /T_he gray line shows the result of the HMM.
StillMovingStillMovingStillMovingInferred andsmoothed withHMMInferredActual
Time (seconds)10008006004002000Still vs. Moving Estimate
FIGURE 9.9 An HMM can be a useful add-on to a process that infers the discrete state of an object. Here, an HMM was used to smooth the inferred transitions between the states of ‚Äústill‚Äù and ‚Äúmoving‚Äù inferred from WiFi signal strengths for a person carrying a laptop inside a building.
93606_Book.indb   3758/26/09   1:40:29 PM 376  /UIstop  John KrummOne limitation of the HMM is state duration. Although the self- transition probability BKK is adjustable, its value leads to a certain probabil-ity density governing how long the subject will stay in state K, as explained by Rabiner (1989). /T_here are techniques to get around this problem, also explained by Rabiner (1989), but they are not as elegant as the original HMM. /T_his was not a problem in the tracking example, because the sub-ject moved at a constant speed along the path (never pausing).9.7  PRESENTING PERFORMANCE/T_here are a few standard ways to present the performance of algorithms for processing sequential sensor data. Having de facto standards is impor-tant, because it allows a fair comparison of diÔ¨Äerent research results. /T_his section discusses performance measures for both continuous and discrete state measurements.9.7.1  Presenting Continuous Performance ResultsContinuous state variables usually exist in a so-called metric space where there is a de/f_ined distance (metric) between the values. For instance, it is easy to de/f_ine the distance between pairs of temperatures, pressures, light levels, speeds, etc. In the tracking example, the distance is simply Euclidean distance. In general, the error between the actual state vector xJ and the estimated state vector ÀÜxi is the scalar distance between the vectors: FJJJ||ÀÜ||.xx For these scalar distances, it is easy to compute the mean and median error over all the estimates, both of which are legiti-mate means of assessing performance. For one-dimensional state variables such as speed, note that FJ is the absolute value of the diÔ¨Äerence between the estimated and the actual value. /T_his is desirable, because then negative and positive errors will not cancel each other out, which could lead to an arti/f_icially optimistic aggregate performance estimate. Figure 9.10 shows the mean and median errors for the tracking example using the process-ing algorithms discussed above. /T_he mean error is the expected error in the probabilistic sense, and it is sensitive to outliers. For instance, if one or a few errors are extremely large, these will pull the mean to a notice-ably larger value, possibly misrepresenting the fact that the algorithm is usually close to the correct result. /T_he median is much less sensitive to outliers.A more detailed description of the error is based on the cumulative error distribution. /T_his shows, for diÔ¨Äerent values of the error F*, how 
93606_Book.indb   3768/26/09   1:40:30 PM Processing Sequential Sensor Data  /UIstop  377
o/f_ten the resulting error is less than or equal to F*. Figure 9.11 shows the cumulative error distributions for the example algorithms in this chapter. A steeply rising curve indicates better performance. /T_he data used for this type of plot are also used to /f_ind percentile errors. For example, the 90th percentile error is the error value where the cumulative error curve crosses 76543210MeanMetersMedian Kalman(untuned)Tracking Error vs. Filter
Kalman(tuned)Mean errorMedian error
Particle HMMFIGURE 9.10 /T_he mean and median error of six diÔ¨Äerent processing algo-rithms applied to the noisy data in Figure 9.1.
10 9 8 7 6 5Error (meters)FractionCumulative Error DistributionMedianHMMKalman(tuned)Kalman(untuned)ParticleMean4321010.90.80.70.60.50.40.30.20.10FIGURE 9.11 /T_he cumulative error distribution gives a more detailed view of how the errors are spread. It is also useful for reading the percentile errors. For instance, the 90th percentile error for HMM is about 2.5 meters, mean-ing that the error is less than or equal to 2.5 meters 90% of the time.
93606_Book.indb   3778/26/09   1:40:31 PM 378  /UIstop  John Krumm0.9, and it means that the errors will be less than or equal to this value 90% of the time. /T_he 50th percentile error is the same as the median, and the 100th percentile error is the maximum error.In addition to a quantitative assessment of performance, a qualitative assessment is also useful. For instance, using this chapter‚Äôs example, a qualitative assessment would include how well the algorithm works on straight segments, smooth curves, and sharp turns. Although the qualita-tive performance is hard to compare from algorithm to algorithm, it can be important, because sometimes qualitative diÔ¨Äerences have an eÔ¨Äect on the quality of the upper level application. For instance, in the tracking example, sharp turns might be indicative of a subject‚Äôs erratic behavior, and therefore an algorithm that tracks such turns could be better than one that tracks more accurately overall for certain applications.Note that the results presented in this section are merely illustrations of how to present performance. /T_hey should not be used to declare that one processing algorithm is better than another. Each algorithm can be tuned for better performance, and the results presented here are not necessarily indicative of each algorithm‚Äôs potential performance.9.7.2  Presenting Discrete Performance ResultsDiscrete results normally come from an attempt to classify a situation into one of a plurality of categories. A good example from ubicomp is given by Lester et al. (2006), who use a sensor package to classify a subject‚Äôs activity into one of sitting, standing, walking, walking up stairs, walk-ing down stairs, riding elevator down, riding elevator up, and brushing teeth. Another common ubicomp application is to detect which ‚Äúactiv-ity of daily living‚Äù a subject is engaged in. /T_he Lester et al. (2006) paper gives its results using the time-tested and informative confusion matrix, adapted for this chapter in Table 9.1. /T_he confusion matrix shows, for each discrete category, how o/f_ten the actual category was classi/f_ied into each of the whole set of categories, including the correct one. Table 9.1 shows that their classi/f_ication worked well in most cases, with generally large numbers on the diagonal, meaning most activities were not confused with other activities. /T_he best result is for ‚Äúgoing up stairs,‚Äù where the classi/f_i-cation was correct 95% of the time. /T_he weakest result was for standing, which was recognized correctly 55% of the time. Standing was confused with sitting 24% of the time, and with brushing teeth 10% of the time.
93606_Book.indb   3788/26/09   1:40:31 PM Processing Sequential Sensor Data  /UIstop  379TABLE 9.1 Confusion Matrixa Showing How O/f_ten Each Activity Was Classi/f_ied into Each Possible Activity*OGFSSFE"DUJWJUJFT4JUUJOH4UBOEJOH8BMLJOH6QTUBJST %PXOTUBJST &MFWBUPSEPXO &MFWBUPSVQ #SVTIJOHUFFUIActual ActivitiesSitting75% 24% 1% 0% 0%0%0%0%Standing29% 55% 6% 1% 0%4%3%2%Walking4% 7% 79% 3% 4%1%1%1%Up stairs0% 1% 4% 95% 0%0%1%0%Down stairs 0% 1% 7% 0% 89%2%0%0%Elevator down 0% 2% 1% 0% 8%87%1%0%Elevator up 0% 2% 2% 6% 0%3%87%0%Brushing teeth 2% 10% 3% 0% 0%0%0%85%If the classi/f_ication worked perfectly, all the oÔ¨Ä-diagonals would be 0%, and the diagonals would be 100%.a Data  adapted from Lester et al., 2006. With kind permission of Springer Science + Business Media. 
93606_Book.indb   3798/26/09   1:40:31 PM 380  /UIstop  John Krumm9.8  CONCLUSION/T_his chapter examined some algorithms for processing sequential sen-sor measurements. /T_he algorithms were the mean and median /f_ilters, the Kalman /f_ilter, the particle /f_ilter, and the HMM. /T_he process being mea-sured is assumed to show some continuity in time, and the algorithms presented take advantage of this by looking at past measurements to help make a state estimate. For all but the mean and median /f_ilters, the algo-rithms use some type of dynamic model to improve accuracy. Researchers in signal processing and machine learning continue to develop new meth-ods to process sequential sensor data, but the well-established methods in this chapter have proven useful for many ubicomp tasks. /T_hey serve as at least a good starting point for new sequential inference tasks in ubi-comp. Part of the fun of using them is determining how your problem /f_its with the assumptions and limitations of each technique.REFERENCESDoucet, A., Freitas, N. D., and Gordon, N., An introduction to sequential Monte Carlo methods, in 4FRVFOUJBM.POUF$BSMP.FUIPETJO1SBDUJDF, Doucet, A., Freitas, N. D., and Gordon, N., Eds., Springer, New Y ork, 2001.Fox, D., Adapting the sample size in particle /f_ilters through KLD-sampling, *OUFSOBUJPOBM +PVSOBMPG3PCPUJDT3FTFBSDI 22(12): 985‚Äì1003, 2003.Gelb, A., "QQMJFE0QUJNBM&TUJNBUJPO, Analytical Sciences Corporation, MIT Press, Cambridge, MA, 1974.Gordon, N. J., #BZFTJBO.FUIPETGPS5SBDLJOH, Imperial College, University of London, London, 1994.Hightower, J., and Borriello, G., Particle /f_ilters for location estimation in ubiquitous computing: A case study, in 6CJRVJUPVT$PNQVUJOH, Springer, Nottingham, UK, 2004, pp. 88‚Äì106.Krumm, J., and Horvitz, E., Locadio: Inferring motion and location from Wi-Fi signal strengths, First Annual International Conference on Mobile and Ubiquitous Systems: Networking and Services (Mobiquitous 2004), Cambridge, MA, USA, 2004, pp. 4‚Äì13.Lester, J., Choudhury, T., and Borriello, G., A practical approach to recognizing physical activities, in 1FSWBTJWF$PNQVUJOH, LNCS 3968, Springer-Verlag, Dublin, Ireland, 2006, pp. 1‚Äì16.Murphy, K., and Russell, S., Rao-Blackwellised particle /f_iltering for dynamic Bayesian networks, in 4FRVFOUJBM.POUF$BSMP.FUIPETJO1SBDUJDF, Doucet, A., Freitas, N. D., and Gordon, N., Eds., Springer-Verlag, New Y ork, 2001, pp. 499‚Äì515.Patterson, D., et al., Inferring high-level behavior from low-level sensors, in 6CJRVJUPVT$PNQVUJOH6CJDPNQ, Seattle, W A, USA, 2003, pp. 73‚Äì89.Rabiner, L. R., A tutorial on hidden Markov models and selected applications in speech recognition, 1SPDFFEJOHTPG*&&& 77(2): 257‚Äì286, 1989.
93606_Book.indb   3808/26/09   1:40:31 PM IndexAAbsolute location, 287ACM Mobicom, 29"$.5SBOTBDUJPOTPO0Ô¨ÉDF*OGPSNBUJPO4ZTUFNT(TOIS), 28‚Äì30Active Badge, 20‚Äì22, 145‚Äì147, 290, 328, 332Active BAT, 22‚Äì23, 305‚Äì306ActiveFloor, 312‚Äì314Activity-based computing (ABC), 47‚Äì48ActivityStudio, 84Address-based location, 289Ad hoc sensor networks, 43, 44, 75Advanced Encryption Standard (AES), 137Advanced User Resource Annotation (AURA), 169, 175, 184, 186AES, 137AÔ¨Énity diagramming, 192‚Äì193Agent systems, 49Air traÔ¨Éc control studies, 211Airbus tagless solution, 314‚Äì315Airline passenger check-in system, 11‚Äì12Altman, Irwin, 119‚Äì120Amazon Kindle, 6, 32Ambient displays, 168, 172, 265‚Äì266Ambient Orb, 268‚Äì269Ambient trolley, 269Ambient Umbrella, 268‚Äì269Ambient user interface (AUI), 264‚Äì269Ambient wood, 72‚Äì73Analysis of variance (ANOVA), 190Anonymization, 154‚Äì155Anticollision protocol, 138‚Äì140Apple iPhone design, 249Apple Newton, 2Application implementation and evaluation, 77‚Äì78Arduino, 87Arti/f_icial intelligence (AI), 54, 122AR user interface, 252, 260ARToolkit, 86Assisted GPS, 290Asymmetric public key cryptography, 50Atmospheric signal delay, 299, 303ATOM, 31‚Äì32Attacker model, 153Audi Multi Media Interface (MMI), 260Audio input, 276‚Äì277AudioPad, 262Augmented reality, 17AuraOrbs, 269Authentication, 50‚Äì51, 128, 129, 137Autoethnography, 218Automatic contextual recon/f_iguration, 329, 330Automotive applications, 260, 276Autonomic computing, 48‚Äì49Aware Home, 19BBacon, Francis, 204Bandwidth reuse, 4Barcode reading application, 169Batteries, 42‚Äì43Berkeley smart dust mote, 260Between-subjects design, 170Binary tree walking protocol, 139Biometric sensors, 40, 270Blackboard-based context-aware design approach, 340‚Äì342BlueStar, 147
93606_Book.indb   3818/26/09   1:40:32 PM 382  /UIstop  IndexBluetoothdiscovery protocol, 43headset applications, 277identi/f_iers, 50, 138Privacy Guardian, 143range, 291SMCube, 262BMW, 276Bodily privacy, 104Bonferroni technique, 191Bonjour, 43Bootstrap /f_ilter, 368Border crossings, 105‚Äì106Brandeis, Louis, 101‚Äì102, 114, 122‚ÄúBridging Physical and Virtual Worlds‚Äù project, 14Broderson, Robert, 15Brush, A. J., 165, 169BusMobile, 269CCalm technology, 5, 54, 239, 264, 323Cambridge Fast Ring, 21Camera-based location tracking, 315‚Äì316‚ÄúCan You See Me Now‚Äù game, 56‚Äì57CAPpella, 345CardSpace, 129CareNet, 168, 172, 179, 184, 186, 269Cautious approach, 57‚Äì58Cellular phonesethnographic studies, 215‚Äì216iPhone design, 249PC compatibility, 32proximity study, 165‚Äì166, 172, 178, 184, 192, 193smart phones, 2, 3, 31Chaum, David, 128‚Äì129Clandestine scanning, 136Classroom 2000, 18‚Äì19Client-based location systems, 289‚Äì290Client-server systems, 44Clinical applications, 39‚Äì40, 77, 86, 271Clippy, 342Clock synchronization error, 299CodeBlue, 87Cohen‚Äôs kappa, 192Collective perception, 24Compensating study participants, 185‚Äì186Computer-supported collaborative work (CSCW), 204, 210‚Äì214Computer vision tools, 86Computing paradigms, 38‚Äì39Confab, 131‚Äì134Conference venues, 28‚Äì30Confusion matrix, 378Consent form, 182Context, 325‚Äì327, 354ambiguity, 343human‚Äìcomputer interaction and, 322‚Äì323inferencing, 343location, identity, time, and activity, 327proxy for human intent, 342Context-aware applications, 47, 321‚Äì325blackboard-based design approach, 340‚Äì342categorization of features for, 329‚Äì332contemporary applications, 334‚Äì335design process, 335‚Äì337end user issues, 345environmental controls, 334evaluating, 345historical applications, 328, 332‚Äì334Java framework (JCAF), 77, 85location-based services, 332, 4FFBMTP Location technologiespower management, 166privacy issues, 344‚Äì345reminders, 333testing user reactions, 52tools for building, 337‚Äì342tour guides, 25‚Äì26, 46‚Äì47, 59, 169, 324, 333user interfaces, 252widget-based design approach, 338‚Äì342Xerox PARC research and, 10‚Äì11Context-Aware Computing Architecture, 338Context-aware reminders, 334Context Aware Toolkit (CAT), 85
93606_Book.indb   3828/26/09   1:40:32 PM Index  /UIstop  383Context awareness, 10‚Äì11, 324, 327‚Äì329, 354input model, 327privacy and, 127rules vs. machine learning, 344using and adapting to context, 328‚Äì329writing academic papers on, 346‚Äì347Context Toolkit, 85, 339Context-triggered actions, 329, 330Contextual adaptation, 330Contextual augmentation, 330Contextual command applications, 329, 330Contextual resource discovery, 330Contextual sensing, 330Context widgets, 339‚Äì340Contingency management, 49Continuous performance measures, 376‚Äì378Continuous Speech Recognition Consortium, 276Control condition, 171Cooltown, 13‚Äì15, 67CORBA middleware, 66CRAWDAD, 88Cricket, 23, 147, 306‚Äì307Critical technical practice, 231Culturally Embedded Computing Group, 231Cumulative error distribution, 376‚Äì377Cyber foraging, 42Cyberguide, 25DDatafountain, 267Data leakage, 137Data mining technology, 126Data processing, sequential sensor data, 4FF Sequential sensor data processingDataset resources, 87‚Äì88Day Reconstruction Method, 178Daylight Display, 269Dead reckoning, 297‚Äì298Deafness support applications, 169, 173Debugging ubicomp systems, 63Dependent variables, 170Descriptive statistics, 187‚Äì189Designers Augmented Reality Toolkit, 86Designing ubicomp systems, 4FF Ubiquitous computing systems, design and developmentDesign-oriented ethnography, 210‚Äì214data analysis, 223‚Äì228/f_ieldwork, 219‚Äì223planning, 214‚Äì219practical implications, 228‚Äì232Design patterns, 249Deterministic anticollision protocols, 139DexterNet, 86DiamondTouch, 258, 261‚Äì262Diaries, 177‚Äì178DiÔ¨Äerential GPS, 303DiÔ¨Äuse illumination, 263Digital Desk, 261Digital rights management systems, 130Digital scrapbook, 275Direct manipulation, 251Disabilities, 69, 169, 173Discrete performance measures, 376‚Äì378Display Cube, 274Distance estimation techniques, 292‚Äì294Documenting ubicomp systems, 81‚Äì83Dragon NaturallySpeaking, 274Driver‚Äôs Privacy Protection Act, 116‚Äì117d.tools, 87Dynabook, 5EEasyLiving, 26, 27Eavesdropping, 136, 138Ekahau, 309, 310Elder support applications, 20, 168, 172, 179, 184, 186Electronic books, 32Embodiment, 256Encryption, 137‚Äì138Energy issues, 42‚Äì43Environmental controls, 334Environment-associated location errors, 299EO pad, 3
93606_Book.indb   3838/26/09   1:40:33 PM 384  /UIstop  IndexEQUATOR Component Toolkit (ECT), 85Eras of modern computing, 2E-reader, 6Ethical issuesclaims from study /f_indings, 198‚Äì199study participant treatment, 181‚Äì182Ethnography, 180, 203‚Äì206analytic sensibility, 209‚Äì210, 225, 228authenticity issues, 213‚Äì214autoethnography, 218data collection and analysis, 223‚Äì228design implications, 228‚Äì230design-oriented, 210‚Äì214Evans-Pritchard‚Äôs Nuer studies, 206‚Äì210/f_ieldwork, 219‚Äì223future directions, 230‚Äì231generalization, 217‚Äì218interpretation orientation, 208, 209objectivity and re/f_lexivity concerns, 220‚Äì223participant access and recruitment, 218‚Äì219participant observation approach, 208, 209planning, 214‚Äì219practical design implications, 228‚Äì232sampling, 216‚Äì218Ethnomethodology, 212‚Äì213, 230‚Äì231policy of indiÔ¨Äerence, 221‚Äì223EuroPARC, 133European global navigation satellite system, 317European Union (EU) Data Protection Directive, 117Evaluating ubicomp systems, 74‚Äì79context-aware applications, 345ethnography, 203‚Äì232, 4FFBMTP Ethnography/f_ield studies, 161‚Äì199, 4FFBMTP Field studiesheuristic evaluation, 196location technology factors, 301proof-of-concept, 75‚Äì76simulation models, 75‚Äì76usability testing, 249Evans-Pritchard, Edward, 206‚Äì210EventHeap, 63Exception handling, 49Exemplar, 84Exertion interfaces, 252Experience sampling methodology, 176‚Äì177Explicit input, 327FFace recognition, 316Fair Information Principles, 115‚Äì116Fault tolerance of ubicomp systems, 61‚Äì62Felten, E., 153Field studies, 161‚Äì164context-aware applications, 344control condition, 171current behavior, 165‚Äì166data analysis, 186‚Äì194design, 169‚Äì173, 194‚Äì195ethical issues, 181, 198‚Äì199ethnography, 203‚Äì232, 4FFBMTP Ethnographyexperimental design, 170‚Äì171generalization, 217‚Äì218negative results, 197novelty eÔ¨Äects, 180ongoing feedback, 196pilot, 195planning, 214‚Äì219proof of concept, 166‚Äì168, 180, 4FFBMTP Proof-of-conceptprototype use, 168‚Äì169qualitative (unstructured data) analysis, 191‚Äì194, 223‚Äì228quantitative (statistical) data analysis, 187‚Äì191research questions, 164, 194research team, 197researcher objectivity and re/f_lexivity, 220‚Äì223running the study, 197‚Äì198sampling, 216‚Äì218scenic /f_ieldwork, 214scripts, 195study design document, 194‚Äì195study length, 180‚Äì181
93606_Book.indb   3848/26/09   1:40:33 PM Index  /UIstop  385technology tips, 196‚Äì197types, 164‚Äì169using existing resources, 196Field studies, data collection, 173‚Äì174, 198diaries, 177‚Äì178ethnographic /f_ieldwork, 224‚Äì225experience sampling methodology, 176‚Äì177interviews, 178‚Äì180, 224logging, 174quantitative and qualitative data, 173surveys, 175‚Äì176unstructured observation, 180Field studies, participants, 181‚Äì186access and recruitment, 218‚Äì219activities, 169‚Äì173comfort and safety, 197‚Äì198compensation, 185ethical treatment, 181number, 184, 218pro/f_iles, 182‚Äì183FingerMouse, 273Fingerprinting, 295‚Äì297, 308‚Äì310, 372FireFox, 273Fitts‚Äô law, 258‚Äì259Flowmenu, 272Foot scale, 6Ford, Henry, 248Fourier transform infrared (FTIR)-based displays, 263Freedom Network, 129Front-projected surface user interfaces, 261‚Äì262Future of ubiquitous computing, 31‚Äì33GGAIA OS services, 66‚Äì67Galileo, 317Gaussian noise, 356Gaussian probability distribution, 356Geertz, CliÔ¨Äord, 209Generalizability of ethnography results, 217‚Äì218Genius design, 249Geocoder, 289Geographic coordinates, 288‚Äì289Georgia Institute of Technology, 2, 18‚Äì20, 25Gestural user interface, 252Gesture input, 271‚Äì274Global positioning system (GPS), 47, 302‚Äì303accuracy, 302, 317Assisted GPS, 290‚ÄúCan You See Me Now‚Äù game, 56‚Äì57causes of errors, 299, 303client-based location system, 290driving trajectory /f_ield study, 168location privacy protection, 147market for, 286network-assisted location system, 290privacy and, 126RADAR indoor location application, 26receivers, 303satellite system, 302‚Äì303sequential sensor data, 354GoÔ¨Äman, Erving, 109GPS satellites, 302‚Äì303, 4FFBMTP Global positioning systemGraceful degradation, 49‚Äì51GraÔ¨Éti, 261, 273Graphical user interface (GUI), 237, 242, 4FFBMTP Ubicomp user interfacedirect manipulation capability, 251widget-based approach, 338‚Äì340WIMP model, 242, 251‚Äì252Grounded theory, 193Grounding, 323GSM towers, 27, 310GUIDE project, 25‚Äì26, 46‚Äì47, 59HHandheld and Ubiquitous Computing (HUC) conference, 30Hardware resources, 87Hash chains, 142Hash locks, 141‚Äì142Heads-up display, 17Hearing disability support applications, 169, 173Heterogeneous execution environments, 44‚Äì45
93606_Book.indb   3858/26/09   1:40:33 PM 386  /UIstop  IndexHidden Markov models (HMMs), 273, 276, 314, 343, 370‚Äì376Hippocratic databases, 131, 132Home technology study, 165, 182‚Äì183, 186, 193Horvitz, E., 168Hospital applications, 39‚Äì40, 77, 270Hotmobile conference, 30House_n PlaceLab, 87HP Labs, 2, 13‚Äì15, 67HSAPD, 15Human‚Äìcomputer interaction (HCI), 204, 4FFBMTP Ubicomp user interfacecontext, 322‚Äì323, 342, 4FFBMTP Context-aware applicationsdesign-oriented ethnographic approach, 210‚Äì214, 228‚Äì232, 4FFBMTP Ethnography/f_ield studies, 163, 4FFBMTP Field studiesFitts‚Äô law, 258‚Äì259inventing the future, 244privacy and, 127‚Äì128ubicomp systems design considerations, 55‚Äì60Weiser‚Äôs ubicomp vision, 4Human‚ÄìComputer Interaction for Mobile Devices (MobileHCI) conference, 30Human PacMan, 252HVAC system-based location monitor, 314‚Äì315Hyperbolic lateration, 294Hypothesis, 170, 215IIBM Research, 2, 11‚Äì12IBM ViaVoice, 275iCAP, 345Identity management tools, 129IEEE Pervasive Computing and Communication conference, 30iHospital system, 270Implicit input, 327Inch scale, 6Independent samples Utest, 190Independent variables, 170Inferential statistics, 189‚Äì191InfoCanvas, 268InfoPad, 15‚Äì16Information appliance, 5Information Art, 269Information decoration, 267Information percolator, 267Information privacy, 103, 4FFBMTP PrivacyInformed consent, 182InfoSpaces, 131Infrared-based location technologies, 6‚Äì8, 304‚Äì305, 332, 4FFBMTP Active BadgeInfrared pen, 9Inkpen, K., 165Institutional review board (IRB), 182Intel Research, 27‚Äì28, 87Interaction design, 151‚Äì152, 246‚Äì251design patterns, 249genius design, 249related /f_ields and specialties, 247systems design, 248‚Äì249user-centered design, 247‚Äì248Interface usability metrics, 278International Symposium on Wearable Computing (ISWC), 30Interpersonal privacy, 119‚Äì121Interrater reliability, 192Interval scale data, 188Interview-based data collection, 178‚Äì180, 224Invisible computing, 5, 48‚Äì49literal vs. eÔ¨Äective, 254‚Äì255privacy and, 124‚Äì125Invisible Train Games, 252, 260Ionospheric delay, 299iPhone design, 249iROS, 63, 85‚Äì86iStuÔ¨Ä Mobile, 84‚Äì85ITRON, 12‚Äì13JJ9 Virtual Machine, 12Japanese technologies, 12‚Äì13Java Context-Awareness Framework (JCAF), 77, 85, 339Jeremjenko Dangling String, 266
93606_Book.indb   3868/26/09   1:40:33 PM Index  /UIstop  387Jini, 43jMax, 85Journals and publications, 30Julius, 276KK-anonymity, 129, 149,NN algorithm, 297Kalman /f_ilter, 355, 359‚Äì365Karlsruhe University, 23‚Äì24, 30Kaye, Alan, 5Kindle, 6, 32Krumm, J., 168LLaboratory user studies, 163, 170, 196LAN-based location technology, 20‚Äì23Lancaster University, 25‚Äì26Latitude, 288‚Äì289Leading questions, 175, 198Learning-based context awareness, 344Legal issues, 69privacy, 101‚Äì102, 114‚Äì118Lemming Location-Enhanced Instant Messenger, 134Length units, 6Level of measurement, 187‚Äì189Likert scale, 175, 188Linda, 340‚Äì341Liveboard, 6, 9, 19Live Wire, 266Living Laboratories, 18‚Äì20LOCADIO, 372, 374Local ad hoc communication, 4Location and Context Aware (LoCA), 30Location determination approaches, 290, 327dead reckoning, 297‚Äì298distance estimation, 292‚Äì294/f_ingerprinting, 295‚Äì297hyperbolic lateration, 294proximity, 291reference points, 290, 291triangulation, 295trilateration, 291‚Äì294Location errors, 298‚Äì300Location information, 287Location privacy protection, 145‚Äì149Location representation, 288‚Äì289Location technologies, 20‚Äì23, 46‚Äì47, 285‚Äì287, 4FFBMTP Global positioning system (GPS)ActiveFloor tagless solution, 312‚Äì314audio-based navigation, 276‚Äì277camera-based tracking, 315‚Äì316‚ÄúCan You See Me Now‚Äù game, 56‚Äì57challenges, 316‚Äì317client-based, 289‚Äì290device proxy for user, 287driving trajectory /f_ield study, 168evaluation factors, 301/f_ingerprinting, 309‚Äì310GSM towers, 27, 310hospital application, 39‚Äì40, 270HVAC system approach, 314‚Äì315indoor GPS (RADAR), 26infrared-based Active Badge system, 332IR-based Active Badge system, 20‚Äì22, 145‚Äì147, 290, 304‚Äì305Lemming Location-Enhanced Instant Messenger, 134middleware and back-end services, 317network-based, 290phone call routing applications, 286phone proximity study, 165‚Äì166, 172, 178, 184, 192, 193plausible deniability, 134, 317PowerLine positioning, 311‚Äì312privacy concerns, 134, 317, 4FFBMTP Privacypublic domain datasets, 87‚Äì88RSSI-based technologies, 26speed estimates and, 355systems, 300‚Äì302tour guide applications, 25‚Äì26, 46‚Äì47, 59, 169ultrasound/RF-based (Active BAT and Cricket), 22‚Äì23, 305‚Äì307ultrawideband (UWB) Ubisense system, 307‚Äì308‚ÄúUncle Roy All Around You‚Äù game, 59war driving, 310‚Äì311
93606_Book.indb   3878/26/09   1:40:34 PM 388  /UIstop  IndexWhereabouts Clock, 226‚Äì227WiFi access point mapping, 27WiFi signal /f_ingerprinting, 296, 308‚Äì309, 372, 374Logging-based data collection, 174Longitude, 288‚Äì289Lookout system, 342MMachine learning-based context awareness, 344Macromedia Director, 86Magic Touch, 271, 272Maintenance and support of ubicomp systems, 69, 72Marx, Gary T., 104‚Äì105Massachusetts Institute of Technology (MIT), 2, 16‚Äì17, 23, 87Max/MSP, 85Mean, 188Mean /f_ilters, 358‚Äì359, 376MediaCup, 23Median, 188Median /f_ilters, 358‚Äì359, 376Medical applications, 39‚Äì40, 77, 86, 270Medical databases, 129MeetingMachine, 86Memento, 275, 276‚Äì277Memory Ampli/f_iers, 102Memory prosthetic aids, 26Menu selection, 251Meridians, 288MERL DiamondTouch, 258, 261‚Äì262Metaphor, 256Microso/f_t Research, 26‚Äì27Microso/f_t Surface, 258, 273Mix-Net, 128Mix zones, 147MobiCom, 30Mobile ad hoc sensor networks (MANETs), 43, 75Mobile Computing, Applications, and Services (Mobi CASe), 30MobileHCI conference, 30Mobile sensors, 270MobiQuitous, 30MobiSys, 29‚Äì30Modeling ubicomp system, 75‚Äì76Motes, 27, 87Motion capture suit, 271Mouse gestures, 273Moven motion capture suit, 271Multicast DNS (mDNS), 43Multi Media Interface (MMI), 260Multimodal user interface, 252Multipath signal distortions, 299, 303MyExperience, 85, 176, 196MyLifeBits, 26NNASA Task Load Index, 176Natural language interface, 251Navizon, 311Nearest neighbor (NN) algorithm, 297Network-based location system, 290Network routing schemes, 44Network Simulator (NS-2), 75Network transient connectivity, 60‚Äì61Neural networks, 273Newton, Isaac, 83Nominal variables, 187‚Äì189Norman, Donald, 246Novelty eÔ¨Äects, 180Nuer, 206‚Äì210Null hypothesis, 190OOECD Fair Information Principles, 115‚Äì116‚ÄúOÔ¨Ä-the-shelf‚Äù ubicomp components, 64‚Äì67, 87Olivetti Research, 2, 20‚Äì23, 304, 328, 4FFBMTP Active BadgeONTRACK, 276‚Äì277Opacity tools, 128‚Äì129Open-ended questions, 175Opera, 273Optimistic approach, 57‚Äì58Orb, Ambient, 268‚Äì269Ordinal variables, 188Outliers, 188, 358, 376Oyster, 271
93606_Book.indb   3888/26/09   1:40:34 PM Index  /UIstop  389PQvalue, 190Pad, 6, 8‚Äì9, 32, 261Palm Pilot, 3Pandora project, 21Partially connected ubicomp system, 60Participant observation, 208, 4FFBMTP EthnographyParticipant pro/f_ile, 183Participatory design, 68Particle /f_ilter, 365‚Äì370Password protection, RFID tags, 141‚Äì142Path perturbation, 147Patterns, design, 249PawS, 132‚Äì133PC compatible cell phone applications, 32PCOM, 86PDAs, 4FF Personal digital assistantsPeer caches, 62Peer-to-peer video services, 15Pen-based user interface, 9, 252, 273Perception API (PAPI), 24Percepts, 24Peripheral vision, 265Personal border crossings, 105‚Äì106Personal digital assistants (PDAs), 2, 31, 260‚Äì261Personal Server, 27Pervasive computing, 11‚Äì12‚ÄúPervasive‚Äù conference, 29Pessimistic approach, 57‚Äì58Phenomenology, 213Phicons, 255Phone call routing, 286Phone Proximity study, 165‚Äì166, 172, 178, 184, 192, 193Photocopier use study, 225‚Äì226Photography, privacy and, 102Physiological sensors, 40, 270‚Äì271Pilot study, 195Pitt, William, 101Place Lab, 27, 87, 310‚Äì311PlaceEngine, 311Plan 9 operating system, 86Plan B, 86Platform for Policy Preferences (P3P), 131Plausible deniability, 134Plutarch, 79‚Äì80Policy of indiÔ¨Äerence, 221‚Äì223Policy tools, 130‚Äì131Posey, 255Power consumption, 42‚Äì43context-aware power management, 166power-aware cord, 266‚Äì267Power foraging, 42PowerLine Position, 311‚Äì312Privacy, 49‚Äì51, 95‚Äì97client-based location system, 290commodity approach, 112context-aware application issues, 344‚Äì345context awareness and, 127de/f_ining, 100‚Äì107Fair Information Principles, 115‚Äì116human‚Äìcomputer interaction and, 127‚Äì128impact assessments, 154interpersonal, 119‚Äì121invisible computing and, 124‚Äì125legal context, 101‚Äì102, 114‚Äì118motivating, 108novel ubicomp challenges, 122‚Äì128personal border crossings, 105‚Äì106photography and, 102public attitudes, 108‚Äì113RFID technology and, 117, 135‚Äì145risk models, 153‚Äì154security and, 97‚Äì98self-determination rights, 112‚Äì113Solove‚Äôs taxonomy, 106‚Äì107study participant data, 182threat model, 153ubicomp system deployment concerns, 69ubicomp system design guidelines, 151‚Äì155wearable technology and, 104Privacy beacons, 132‚Äì133Privacy enhancing technology, 128anonymization methods, 154‚Äì155identity management tools, 129location information protection, 145‚Äì149opacity tools, 128‚Äì129policy tools, 130‚Äì131
93606_Book.indb   3898/26/09   1:40:34 PM 390  /UIstop  Indexprotecting smart spaces, 131‚Äì134RFID technology and, 134‚Äì145, 4FFBMTP RFID tag privacy issuestransparency tools, 129‚Äì130Privacy Guardian, 143Privacy tags, 131‚Äì132Processing (language), 85Project Aura, 276Proof-of-concept, 75‚Äì76, 166‚Äì168, 180Proprietary toolkits, 84‚Äì86Proprietary ubicomp components, 64‚Äì67Prosser, William L., 114Prosthetic memory aid, 26Prototype ubicomp systems, 53‚Äì54, 75prototyping tools, 84‚Äì86user experience /f_ield study, 168‚Äì169Proximate selection, 329, 330Proximity Browser, 10‚Äì11Proximity sensing, 291Pseudorandom number generator (PRNG), 138Public domain datasets, 87‚Äì88Public domain toolkits, 86‚Äì87Public key cryptography, 50, 137Publishing ubicomp research, 80‚Äì81PureData, 85QQualitative data analysis, 191‚Äì194aÔ¨Énity diagramming, 192‚Äì193ethnography data, 223‚Äì228grounded theory, 193simple coding, 191‚Äì192Qualitative data collection, 173Quantitative data collection, 173Questionnaire for User Interaction Satisfaction, 176RRADAR, 26, 308‚Äì310Radialpoint, 129Radio-based location technology, 22‚Äì23Radio frequency identi/f_ication technology, 4FF RFID tag privacy issuesRadiofrequency (RF) /f_ingerprinting, 295‚Äì297Rao-Blackwellized particle /f_ilter, 370Rapid prototypes, 54RAVE, 133ReacTable, 263Reality mining, 155Real-Time Kinematic GPS, 303Real world knowledge, 55Rear-projected surface user interfaces, 262‚Äì264Received signal strength indication (RSSI), 26, 309Recovery of state, 62Reference points (location), 290, 291coordinate errors, 299GSM towers, 27, 310Re/f_lexivity, 221Relative location, 287Releasing ubicomp systems, 79Reminder applications, 333Remote monitoring, 72Repeated-measures design, 170Replication of state, 62Research question, 164, 194Research team, 197Resource-aware computing, 42Resource constraints, 42‚Äì43RFID tags, 137REXplorer, 169, 172, 193RFID sensor systems, 270‚Äì271RFID tag privacy issues, 117, 134‚Äì136access control/deactivation, 140‚Äì145anticollision protocols, 138‚Äì140encryption solutions, 137‚Äì138novel security challenges, 137password-less access control, 144‚Äì145passwords and hash locks, 141‚Äì142privacy issues, 117proxy devices, 142‚Äì144types of threats, 136‚Äì137Rocketbook, 5Routing applications, 286Rule-based context-aware systems, 344SSakamura, Ken, 12Scenic /f_ieldwork, 214Scribe4Me, 169, 173
93606_Book.indb   3908/26/09   1:40:34 PM Index  /UIstop  391Seamful design, 56Security issues, 49‚Äì51, 97‚Äì98, 4FFBMTP Privacydevice and user authentication, 50‚Äì51identity management tools, 129RFID tags, 117, 135‚Äì145, 4FFBMTP RFID tag privacy issuesthe/f_t and tampering, 50threat model, 153trust, 49‚Äì50Self-determination over privacy, 112‚Äì113Self-positioning systems, 147Self-projected surface user interfaces, 263Semantic rubicon, 55Semistructured interview, 178Sense Cam, 26Sensor fusion, 343, 365Sensors, 39, 270‚Äì271ad hoc networks, 43, 44, 75biometric or physiological, 40, 270‚Äì271context-aware application design, 336GPS, 354mobile, 270oÔ¨Ä-the-shelf components, 87power supply issues, 43public domain toolkits, 86‚Äì87RFID systems, 270‚Äì271sequential data processing, 353‚Äì380, 4FFBMTP Sequential sensor data processingso/f_tware, 270ubicomp systems design considerations, 56wearable components, 86, 87SensVest, 270Sequential sensor data processing, 353‚Äì380confusion matrix, 378continuous performance measures, 376‚Äì378discrete performance measures, 378hidden Markov model, 370‚Äì376Kalman /f_ilter, 355, 359‚Äì365mean and median /f_ilters, 358‚Äì359, 376particle /f_ilter, 365‚Äì370past and future sense, 354‚Äì355tracking example, 356‚Äì358Service discovery, 43Shake Well Before Use, 274Shamir, Adi, 144Shared secrets theory, 144SharePic, 261‚Äì262Sharp Zaurus, 3Signal strength attenuation, 293‚Äì294, 308‚Äì310, 372, 374Signal time-of-/f_light estimation, 292‚Äì293Signi/f_icance tests, 189‚Äì191Sign language, 271Simulation, 75‚Äì76, 168, 172Siren, 260Skimming attacks, 136Skyhook, 311SmartBoard, 262Smart Dust, 102Smart dust mote, 260Smart /f_loor, 19, 312‚Äì314Smart homes (Aware Home project), 19‚Äì20Smart-Its, 23‚Äì24, 274Smart kitchen of the future, 98‚Äì99Smart Labels, 102Smart Micrel Cube (SMCube), 262Smart phones, 2, 3, 31pervasive computing solutions, 12surface user interface technology, 260Smart rooms, 44‚Äì45GAIA OS services, 66‚Äì67iROS, 63, 85‚Äì86privacy enhancing tools, 131‚Äì134Snowballing method, 219So/f_tbook, 6So/f_tware sensors, 270Solove, D. J., 106‚Äì107Sony SmartSkin, 262Spatial bandwidth reuse, 4Speech-enabled augmented reality (SEAR), 276Speech input, 274‚Äì277Speed estimates, 355Sphinx, 275, 276SPINE, 86Standard deviation, 188Stanford Interactive Workspaces, 63, 85‚Äì86Stargate, 28
93606_Book.indb   3918/26/09   1:40:34 PM 392  /UIstop  IndexState recovery or replication, 62Statistical data analysis, 187‚Äì191descriptive statistics, 187‚Äì189inferential statistics, 189‚Äì191level of measurement, 187‚Äì189signi/f_icance tests, 189‚Äì191Statistical databases, 129Stick-e Notes, 338Sticky policy, 131‚Äì132Study design document, 194‚Äì195Suchman, Lucy, 210‚Äì211, 225‚Äì226Surface user interface (SUI), 257‚Äì265Fitts‚Äô law, 258‚Äì259gestural input, 273input/output coupling issues, 264larger interfaces, 261‚Äì264PDAs, 260‚Äì261tactile feedback, 264touchscreen technology, 259‚Äì260Surveillance, 123‚Äì124Survey-based data collection, 175‚Äì176Swissair, 11‚Äì12Symbolic location, 287SyncTap, 274TT-Engines, 12‚Äì13Tab, 6‚Äì11, 261, 333Tablet PC, 258, 261Tactile feedback, 264Tampering, 50TANGerINE, 262Tangible and Embedded Interaction (TEI), 30Tangible user interface (TUI), 253‚Äì257TeamAwear, 166‚Äì167, 172, 175, 179TeamPad, 25Technical documentation, 81‚Äì83Territorial privacy, 104/T_he/f_t, 50/T_hick description, 209/T_hird party ubicomp solutions, 64‚Äì67, 84‚Äì86/T_hreat model, 153TiltType, 274Time-of-/f_light estimation, 292‚Äì293Tivoli, 9Tokyo University, 2, 12‚Äì13Tolerance for ignorance, 56Topiary, 85Tort law, 102, 114Total internal reaction (TIR), 264Touch-based user interface, 252Touch-screen technology, 259‚Äì260, 4FFBMTP Surface user interfacetactile feedback, 264TouchLight, 263Tour guide applications, 25‚Äì26, 46‚Äì47, 59, 169, 324, 333Transient network connectivity, 60‚Äì61Triangulation, 295Trilateration, 291‚Äì294TRON, 12Tropospheric delay, 299Trust, 49‚Äì50Tuple space, 63, 340Twiddler, 16‚Äì17UUbicomp computing model, 4‚Äì5, 238‚Äì239calm technology, 5, 54, 239, 264, 323invisible computing, 5, 48‚Äì49, 254‚Äì266‚ÄúUbicomp‚Äù conference, 29Ubicomp dissemination venues, 28‚Äì30Ubicomp publishing and conference venues, 28‚Äì30Ubicomp user interface (UUI), 237‚Äì241, 251‚Äì253alternate classes, 252ambient user interface (AUI), 264‚Äì269gesture input, 271‚Äì274GUI WIMP model, 242, 251‚Äì252implicit and explicit inputs, 243input/output coupling issues, 264input technologies, 269‚Äì277inventing the future, 243‚Äì244sensor input, 270‚Äì271speech and audio input, 274‚Äì277surface user interface (SUI), 257‚Äì265tangible user interface (TUI), 253‚Äì257usability metrics, 278
93606_Book.indb   3928/26/09   1:40:35 PM Index  /UIstop  393usability testing, 249wearable input devices, 16‚Äì17Ubicomp user interface (UUI), design considerations, 55‚Äì60, 244‚Äì246challenges, 240‚Äì242, 4FFBMTP PrivacyGUI WIMP model, 242‚Äì243interaction design, 151‚Äì152, 246‚Äì251, 4FFBMTP Interaction designrules, 245‚Äì246widget-based approach, 338‚Äì340Ubiquitous computing systems, 37‚Äì38, 238application implementation and evaluation, 77‚Äì78deployment, 67‚Äì74documenting, 81‚Äì83evaluating, 74‚Äì79evaluating, /f_ield studies, 161‚Äì199, 4FFBMTP Field studieslegal and regulatory considerations, 69maintenance and support considerations, 69, 72oÔ¨Ä-the-shelf components, 64‚Äì67proof-of-concept, 76‚Äì77prototypes, 75public domain datasets, 87‚Äì88reasons for building, 51‚Äì52releasing and maintaining, 79research communication, 80‚Äì81research concerns, 40, 52simulation models, 75‚Äì76user interface, 4FF Ubicomp user interfacevolatile environments, 73‚Äì74Ubiquitous computing systems, design and development, 41, 51debugging, 63design patterns, 249ethnographic implications, 228‚Äì230fault tolerance, 61‚Äì63handling transient connections, 60‚Äì61hardware components, 84, 87ignorance tolerance, 56interaction design, 151‚Äì152, 246‚Äì250, 4FFBMTP Interaction designlibraries and toolkits, 84, 86‚Äì87partial connectivity, 60participatory design, 68privacy protection guidelines, 151‚Äì155prototypes, 53‚Äì54prototyping tools, 84‚Äì86real world knowledge, 54‚Äì55research targets, 52seamful design, 56sensors, 56setting objectives, 52‚Äì54user interface, 4FF Ubicomp user interface (UUI), design considerationsuser understanding and perceived needs, 56‚Äì60value sensitive design, 152Ubiquitous computing systems, topics and challenges, 41‚Äì42autonomic computing, 48‚Äì49/f_luctuating usage, 45‚Äì48heterogeneous environments, 44‚Äì45invisible computing, 48‚Äì49resource constraints, 42‚Äì43security, 49‚Äì51, 4FFBMTP Privacy; Security issuesvolatile environments, 43‚Äì44UbiSense, 307‚Äì308Ultrasonic-based location technology, 22‚Äì23, 305‚Äì306Ultrawideband location-tracking application, 307‚Äì308Umbrella, Ambient, 268‚ÄúUncle Roy All Around You,‚Äù 59Unistrokes, 261University of California (UC) Berkeley, 2, 15‚Äì16University of Karlsruhe, 23‚Äì24, 30University of Kent, 338University of Tokyo, 2Unobservability tools, 128Unstructured observation, 180UPnP, 43Urp, 254, 261Usability testing, 249, 4FFBMTP Evaluating ubicomp systems; Field studiesUser authentication, 50‚Äì51User-centered design (USD), 247‚Äì248User /f_ield studies, 4FF Field studiesUser interfaces, 4FF Ubicomp user interface
93606_Book.indb   3938/26/09   1:40:35 PM 394  /UIstop  IndexVVariablesdependent and independent, 170levels of measurement, 187‚Äì189Verne, Jules, 76ViaVoice, 275Video-based gestural input, 273Video data collection, 224‚Äì225Video Privacy Protection Act, 117Video prototypes, 54Video services, HSAPD, 15Virtual Earth, 289Visual Calendar, 269Volatile environments, 43‚Äì44, 73‚Äì74VoxForge, 276WWar driving, 310‚Äì311Warren, Samuel, 101‚Äì102, 114, 122Watermarking systems, 129‚Äì130Wearable Action Recognition Database, 88Wearable computing, 16‚Äì17, 26ISWC symposium, 30physiological monitoring systems, 270privacy issues, 104TeamAwear system, 166‚Äì167, 172, 175, 179Wearable Health Monitoring Systems (WHMS), 87Wearable sensors, 86, 87Web presence system (Cooltown), 14Web Sphere, 12Weiser, Mark, 3‚Äì6, 54, 76, 96, 238, 243, 254, 261, 266‚Äì267, 323Weka, 86Westin, Alan, 103, 109Whereabouts Clock, 226‚Äì227WHMS, 88Widget-based approach, 338‚Äì342WiFi access point mapping-based location technology, 27WiFi range, 291WiFi signal /f_ingerprinting, 296, 308‚Äì309, 372, 374Wiimote, 274WiMAX, 15Windows, Icons, Menus, and Pointer (WIMP), 242, 251‚Äì252Wireless communication power issues, 43Wiring, 85Within-subjects design, 170‚Äì171, 1978J[BSEPG0[ techniques, 52, 54, 168, 172Workshop on Mobile Computing Systems and Applications (WMCSA), 29‚Äì30XXerox EuroPARC, 133Xerox Palo Alto Research Center (PARC), 2, 3‚Äì11, 332, 338Active Badge location technology, 20‚Äì22, 145‚Äì147‚ÄúBridging Physical and Virtual Worlds‚Äù project, 14Liveboard, 6, 9proof-of-concept concept, 75Tab and Pad applications, 6‚Äì9YYard scale, 6Yellow Pages, 289ZZero Knowledge systems, 129
93606_Book.indb   3948/26/09   1:40:35 PM  